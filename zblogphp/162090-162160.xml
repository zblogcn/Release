<files codepage='65001' xmlns:dt='urn:schemas-microsoft-com:datatypes'>
	<file name='zb_system\function\c_system_debug.php' crc32='3F5E426E'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoqIA0KICog6ZSZ6K+v6LCD6K+VLg0KICoNCiAqIEBjb3B5cmlnaHQgKEMpIFJhaW5ib3dTb2Z0IFN0dWRpbw0KICovDQoNCi8qKg0KICog5pi+56S65YWo5bGA5Y+Y6YePLg0KICoNCiAqIEByZXR1cm4gbWl4ZWQNCiAqDQogKiBAc2luY2UgMS4zLjE0MDYxNA0KICoNCiAqIEB0b2RvIOS4i+eJiOi9rOWIsGRlYnVn6aG1DQogKi8NCmZ1bmN0aW9uIERlYnVnX1ByaW50R2xvYmFscygpDQp7DQogICAgJGEgPSBhcnJheSgpOw0KICAgIGZvcmVhY2ggKCRHTE9CQUxTIGFzICRuID0+ICR2KSB7DQogICAgICAgICRhW10gPSAkbjsNCiAgICB9DQoNCiAgICByZXR1cm4gcHJpbnRfcigkYSwgdHJ1ZSk7DQp9DQoNCi8qKg0KICogIOaJk+WNsOWFqOWxgEluY2x1ZGXmlofku7YuDQogKg0KICogQHJldHVybiBzdHJpbmcNCiAqDQogKiBAc2luY2UgMS4zDQogKg0KICogQHRvZG8g5LiL54mI6L2s5YiwZGVidWfpobUNCiAqLw0KZnVuY3Rpb24gRGVidWdfUHJpbnRJbmNsdWRlZmlsZXMoKQ0Kew0KICAgICRhID0gYXJyYXkoKTsNCiAgICBmb3JlYWNoIChnZXRfaW5jbHVkZWRfZmlsZXMoKSBhcyAkbiA9PiAkdikgew0KICAgICAgICAkYVtdID0gJHY7DQogICAgfQ0KDQogICAgcmV0dXJuIHByaW50X3IoJGEsIHRydWUpOw0KfQ0KDQovKioNCiAqICDmiZPljbDlhajlsYDoh6rlrprkuYnluLjph48uDQogKg0KICogQHJldHVybiBzdHJpbmcNCiAqDQogKiBAc2luY2UgMS4zDQogKg0KICogQHRvZG8g5LiL54mI6L2s5YiwZGVidWfpobUNCiAqLw0KZnVuY3Rpb24gRGVidWdfUHJpbnRDb25zdGFudHMoKQ0Kew0KICAgICRhID0gZ2V0X2RlZmluZWRfY29uc3RhbnRzKHRydWUpOw0KICAgIGlmIChpc3NldCgkYVsndXNlciddKSkgew0KICAgICAgICAkYSA9ICRhWyd1c2VyJ107DQogICAgfQ0KDQogICAgcmV0dXJuIHByaW50X3IoJGEsIHRydWUpOw0KfQ0KDQovKioNCiAqIFJldHVybiB0cnVlIGlmIGEgZXJyb3IgY2FuIGJlIGlnbm9yZWQuDQogKg0KICogQHBhcmFtIGludCAkZXJybm8NCiAqDQogKiBAcmV0dXJuIGJvb2wNCiAqLw0KZnVuY3Rpb24gRGVidWdfSWdub3JlRXJyb3IoJGVycm5vKQ0Kew0KICAgIGlmIChaQmxvZ0V4Y2VwdGlvbjo6JGlzd2FybmluZyA9PSBmYWxzZSkgew0KICAgICAgICBpZiAoJGVycm5vID09IEVfV0FSTklORykgew0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoJGVycm5vID09IEVfVVNFUl9XQVJOSU5HKSB7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICBpZiAoWkJsb2dFeGNlcHRpb246OiRpc3N0cmljdCA9PSBmYWxzZSkgew0KICAgICAgICBpZiAoJGVycm5vID09IEVfU1RSSUNUKSB7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmICgkZXJybm8gPT0gRV9OT1RJQ0UpIHsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCRlcnJubyA9PSBFX1VTRVJfTk9USUNFKSB7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8vIOWxj+iUveezu+e7n+eahOmUmeivr++8jOmYslpCUOaKpeezu+e7n+eahOmUmeivr++8jOS4jei/h+S5n+acieWPr+iDveWvvOiHtFpCUOWGheeahERFUFJFQ0FURUTplJnor6/kuZ/ooqvlsY/olL3kuoYNCiAgICBpZiAoJGVycm5vID09IEVfQ09SRV9XQVJOSU5HKSB7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIGlmICgkZXJybm8gPT0gRV9DT01QSUxFX1dBUk5JTkcpIHsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgaWYgKGRlZmluZWQoJ0VfREVQUkVDQVRFRCcpICYmICRlcnJubyA9PSBFX0RFUFJFQ0FURUQpIHsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgaWYgKGRlZmluZWQoJ0VfVVNFUl9ERVBSRUNBVEVEJykgJiYgJGVycm5vID09IEVfVVNFUl9ERVBSRUNBVEVEKSB7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8vRV9VU0VSX0VSUk9SDQogICAgLy9FX1JFQ09WRVJBQkxFX0VSUk9SDQoNCiAgICBpZiAoZGVmaW5lZCgnWkJQX0VSUk9SUFJPQ0VTU0lORycpKSB7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIHJldHVybiBmYWxzZTsNCn0NCg0KLyoqDQogKiDplJnor6/osIPluqbmj5DnpLouDQogKg0KICogQHBhcmFtIGludCAgICAkZXJybm8gICDplJnor6/nuqfliKsNCiAqIEBwYXJhbSBzdHJpbmcgJGVycnN0ciAg6ZSZ6K+v5L+h5oGvDQogKiBAcGFyYW0gc3RyaW5nICRlcnJmaWxlIOmUmeivr+aWh+S7tuWQjQ0KICogQHBhcmFtIGludCAgICAkZXJybGluZSDplJnor6/ooYwNCiAqDQogKiBAcmV0dXJuIGJvb2wNCiAqLw0KZnVuY3Rpb24gRGVidWdfRXJyb3JfSGFuZGxlcigkZXJybm8sICRlcnJzdHIsICRlcnJmaWxlLCAkZXJybGluZSkNCnsNCiAgICBpZiAoWkJsb2dFeGNlcHRpb246OiRkaXNhYmxlZCA9PSB0cnVlKSB7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX0RlYnVnX0hhbmRsZXInXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgnRXJyb3InLCBhcnJheSgkZXJybm8sICRlcnJzdHIsICRlcnJmaWxlLCAkZXJybGluZSkpOw0KICAgIH0NCg0KICAgICRfU0VSVkVSWydfZXJyb3JfY291bnQnXSA9ICRfU0VSVkVSWydfZXJyb3JfY291bnQnXSArIDE7DQoNCiAgICBpZiAoWkJsb2dFeGNlcHRpb246OiRpc2xvZ2Vycm9yID09IHRydWUpIHsNCiAgICAgICAgTG9ncyh2YXJfZXhwb3J0KGFycmF5KCdFcnJvcicsICRlcnJubywgJGVycnN0ciwgJGVycmZpbGUsICRlcnJsaW5lKSwgdHJ1ZSksIHRydWUpOw0KICAgIH0NCg0KICAgIC8vQA0KICAgIGlmIChlcnJvcl9yZXBvcnRpbmcoKT09MCkgew0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICBpZiAoaXNfcmVhZGFibGUoJGVycmZpbGUpKSB7DQogICAgICAgICRhID0gYXJyYXlfc2xpY2UoZmlsZSgkZXJyZmlsZSksIG1heCgwLCAkZXJybGluZSAtIDEpLCAxLCB0cnVlKTsNCiAgICAgICAgJHMgPSByZXNldCgkYSk7DQogICAgICAgIGlmIChzdHJwb3MoJHMsICdAJykgIT09IGZhbHNlKSB7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICBpZiAoRGVidWdfSWdub3JlRXJyb3IoJGVycm5vKSkgew0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICAkemJlID0gWkJsb2dFeGNlcHRpb246OkdldEluc3RhbmNlKCk7DQogICAgJHpiZS0+UGFyc2VFcnJvcigkZXJybm8sICRlcnJzdHIsICRlcnJmaWxlLCAkZXJybGluZSk7DQogICAgJHpiZS0+RGlzcGxheSgpOw0KDQogICAgcmV0dXJuIHRydWU7DQp9DQoNCi8qKg0KICog5byC5bi45aSE55CGLg0KICoNCiAqIEBwYXJhbSBFeGNlcHRpb24gJGV4Y2VwdGlvbiDlvILluLjkuovku7YNCiAqDQogKiBAcmV0dXJuIGJvb2wNCiAqLw0KZnVuY3Rpb24gRGVidWdfRXhjZXB0aW9uX0hhbmRsZXIoJGV4Y2VwdGlvbikNCnsNCiAgICBpZiAoWkJsb2dFeGNlcHRpb246OiRkaXNhYmxlZCA9PSB0cnVlKSB7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCiAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9EZWJ1Z19IYW5kbGVyJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJ0V4Y2VwdGlvbicsICRleGNlcHRpb24pOw0KICAgIH0NCg0KICAgICRfU0VSVkVSWydfZXJyb3JfY291bnQnXSA9ICRfU0VSVkVSWydfZXJyb3JfY291bnQnXSArIDE7DQoNCiAgICBpZiAoWkJsb2dFeGNlcHRpb246OiRpc2xvZ2Vycm9yKSB7DQogICAgICAgIExvZ3ModmFyX2V4cG9ydCgNCiAgICAgICAgICAgIGFycmF5KCdFeGNlcHRpb24nLA0KICAgICAgICAgICAgICAgICRleGNlcHRpb24tPmdldE1lc3NhZ2UoKSwgJGV4Y2VwdGlvbi0+Z2V0Q29kZSgpLCAkZXhjZXB0aW9uLT5nZXRGaWxlKCksICRleGNlcHRpb24tPmdldExpbmUoKSwNCiAgICAgICAgICAgICksDQogICAgICAgICAgICB0cnVlDQogICAgICAgICksIHRydWUpOw0KICAgIH0NCg0KICAgICR6YmUgPSBaQmxvZ0V4Y2VwdGlvbjo6R2V0SW5zdGFuY2UoKTsNCiAgICAkemJlLT5QYXJzZUV4Y2VwdGlvbigkZXhjZXB0aW9uKTsNCiAgICAkemJlLT5EaXNwbGF5KCk7DQoNCiAgICByZXR1cm4gdHJ1ZTsNCn0NCg0KLyoqDQogKiDlvZPmnLrplJnor6/lpITnkIYuDQogKg0KICogQHJldHVybiBib29sDQogKi8NCmZ1bmN0aW9uIERlYnVnX1NodXRkb3duX0hhbmRsZXIoKQ0Kew0KICAgIGlmICgkZXJyb3IgPSBlcnJvcl9nZXRfbGFzdCgpKSB7DQogICAgICAgIGlmIChaQmxvZ0V4Y2VwdGlvbjo6JGRpc2FibGVkID09IHRydWUpIHsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9DQoNCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fRGVidWdfSGFuZGxlciddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgnU2h1dGRvd24nLCAkZXJyb3IpOw0KICAgICAgICB9DQoNCiAgICAgICAgJF9TRVJWRVJbJ19lcnJvcl9jb3VudCddID0gJF9TRVJWRVJbJ19lcnJvcl9jb3VudCddICsgMTsNCg0KICAgICAgICBpZiAoWkJsb2dFeGNlcHRpb246OiRpc2xvZ2Vycm9yKSB7DQogICAgICAgICAgICBMb2dzKHZhcl9leHBvcnQoYXJyYXkoJ1NodXRkb3duJywgJGVycm9yWyd0eXBlJ10sICRlcnJvclsnbWVzc2FnZSddLCAkZXJyb3JbJ2ZpbGUnXSwgJGVycm9yWydsaW5lJ10pLCB0cnVlKSwgdHJ1ZSk7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoRGVidWdfSWdub3JlRXJyb3IoJGVycm9yWyd0eXBlJ10pKSB7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KDQogICAgICAgICR6YmUgPSBaQmxvZ0V4Y2VwdGlvbjo6R2V0SW5zdGFuY2UoKTsNCiAgICAgICAgJHpiZS0+UGFyc2VTaHV0ZG93bigkZXJyb3IpOw0KICAgICAgICAkemJlLT5EaXNwbGF5KCk7DQogICAgfQ0KDQogICAgcmV0dXJuIHRydWU7DQp9DQoNCmZ1bmN0aW9uIERlYnVnX0RvTm90aGluZygpDQp7DQogICAgcmV0dXJuIGZhbHNlOw0KfQ0KDQovKioNCiAqIENsYXNzIFpCbG9nRXhjZXB0aW9uLg0KICovDQpjbGFzcyBaQmxvZ0V4Y2VwdGlvbg0Kew0KICAgIHByaXZhdGUgc3RhdGljICRfemJlID0gbnVsbDsNCiAgICBwdWJsaWMgc3RhdGljICRkaXNhYmxlZCA9IGZhbHNlOw0KICAgIHB1YmxpYyBzdGF0aWMgJGlzc3RyaWN0ID0gZmFsc2U7DQogICAgcHVibGljIHN0YXRpYyAkaXN3YXJuaW5nID0gdHJ1ZTsNCiAgICBwdWJsaWMgc3RhdGljICRlcnJvcl9pZCA9IDA7DQogICAgcHVibGljIHN0YXRpYyAkZXJyb3JfZmlsZSA9IG51bGw7DQogICAgcHVibGljIHN0YXRpYyAkZXJyb3JfbGluZSA9IG51bGw7DQogICAgcHVibGljIHN0YXRpYyAkaXNsb2dlcnJvciA9IGZhbHNlOw0KICAgIHB1YmxpYyAkdHlwZTsNCiAgICBwdWJsaWMgJG1lc3NhZ2U7DQogICAgcHVibGljICRtZXNzYWdlZnVsbDsNCiAgICBwdWJsaWMgJGZpbGU7DQogICAgcHVibGljICRsaW5lOw0KICAgIHB1YmxpYyAkZXJyYXJyYXkgPSBhcnJheSgpOw0KDQogICAgLyoqDQogICAgICog5p6E6YCg5Ye95pWw77yM5a6a5LmJ5bi46KeB6ZSZ6K+v5Luj56CBDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KCkNCiAgICB7DQogICAgICAgICR0aGlzLT5lcnJhcnJheSA9IGFycmF5KA0KICAgICAgICAgICAgMCAgICAgPT4gJ1VOS05PV04nLA0KICAgICAgICAgICAgMSAgICAgPT4gJ0VfRVJST1InLA0KICAgICAgICAgICAgMiAgICAgPT4gJ0VfV0FSTklORycsDQogICAgICAgICAgICA0ICAgICA9PiAnRV9QQVJTRScsDQogICAgICAgICAgICA4ICAgICA9PiAnRV9OT1RJQ0UnLA0KICAgICAgICAgICAgMTYgICAgPT4gJ0VfQ09SRV9FUlJPUicsDQogICAgICAgICAgICAzMiAgICA9PiAnRV9DT1JFX1dBUk5JTkcnLA0KICAgICAgICAgICAgNjQgICAgPT4gJ0VfQ09NUElMRV9FUlJPUicsDQogICAgICAgICAgICAxMjggICA9PiAnRV9DT01QSUxFX1dBUk5JTkcnLA0KICAgICAgICAgICAgMjU2ICAgPT4gJ0VfVVNFUl9FUlJPUicsDQogICAgICAgICAgICA1MTIgICA9PiAnRV9VU0VSX1dBUk5JTkcnLA0KICAgICAgICAgICAgMTAyNCAgPT4gJ0VfVVNFUl9OT1RJQ0UnLA0KICAgICAgICAgICAgMjA0OCAgPT4gJ0VfU1RSSUNUJywNCiAgICAgICAgICAgIDQwOTYgID0+ICdFX1JFQ09WRVJBQkxFX0VSUk9SJywNCiAgICAgICAgICAgIDgxOTIgID0+ICdFX0RFUFJFQ0FURUQnLA0KICAgICAgICAgICAgMTYzODQgPT4gJ0VfVVNFUl9ERVBSRUNBVEVEJywNCiAgICAgICAgICAgIDMwNzE5ID0+ICdFX0FMTCcsDQogICAgICAgICk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6I635Y+W5Y+C5pWwLg0KICAgICAqDQogICAgICogQHBhcmFtICRuYW1lDQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIF9fZ2V0KCRuYW1lKQ0KICAgIHsNCiAgICAgICAgaWYgKCRuYW1lID09ICd0eXBlTmFtZScpIHsNCiAgICAgICAgICAgIGlmIChpc3NldCgkdGhpcy0+ZXJyYXJyYXlbJHRoaXMtPnR5cGVdKSkgew0KICAgICAgICAgICAgICAgIHJldHVybiAkdGhpcy0+ZXJyYXJyYXlbJHRoaXMtPnR5cGVdOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gJHRoaXMtPmVycmFycmF5WzBdOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6I635Y+W5Y2V5LiA5a6e5L6LLg0KICAgICAqDQogICAgICogQHJldHVybiBaQmxvZ0V4Y2VwdGlvbg0KICAgICAqLw0KICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gR2V0SW5zdGFuY2UoKQ0KICAgIHsNCiAgICAgICAgaWYgKCFpc3NldChzZWxmOjokX3piZSkpIHsNCiAgICAgICAgICAgIHNlbGY6OiRfemJlID0gbmV3IHNlbGYoKTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiBzZWxmOjokX3piZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDorr7lrprplJnor6/lpITnkIblh73mlbAuDQogICAgICovDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBTZXRFcnJvckhvb2soKQ0KICAgIHsNCiAgICAgICAgaWYgKElTX0NMSSkgew0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQogICAgICAgIHNldF9lcnJvcl9oYW5kbGVyKCdEZWJ1Z19FcnJvcl9IYW5kbGVyJyk7DQogICAgICAgIHNldF9leGNlcHRpb25faGFuZGxlcignRGVidWdfRXhjZXB0aW9uX0hhbmRsZXInKTsNCiAgICAgICAgcmVnaXN0ZXJfc2h1dGRvd25fZnVuY3Rpb24oJ0RlYnVnX1NodXRkb3duX0hhbmRsZXInKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmuIXpmaTms6jlhoznmoTplJnor6/lpITnkIbnqIvluo8uDQogICAgICovDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBDbGVhckVycm9ySG9vaygpDQogICAgew0KICAgICAgICBzZXRfZXJyb3JfaGFuZGxlcignRGVidWdfRG9Ob3RoaW5nJyk7DQogICAgICAgIHNldF9leGNlcHRpb25faGFuZGxlcignRGVidWdfRG9Ob3RoaW5nJyk7DQogICAgICAgIHJlZ2lzdGVyX3NodXRkb3duX2Z1bmN0aW9uKCdEZWJ1Z19Eb05vdGhpbmcnKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDlkK/nlKjplJnor6/osIPluqYuDQogICAgICovDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBFbmFibGVFcnJvckhvb2soKQ0KICAgIHsNCiAgICAgICAgc2VsZjo6JGRpc2FibGVkID0gZmFsc2U7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog56aB5q2i6ZSZ6K+v6LCD5bqmLg0KICAgICAqLw0KICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gRGlzYWJsZUVycm9ySG9vaygpDQogICAgew0KICAgICAgICBzZWxmOjokZGlzYWJsZWQgPSB0cnVlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOaaguWBnOmUmeivr+iwg+W6pi4NCiAgICAgKi8NCiAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIFN1c3BlbmRFcnJvckhvb2soKQ0KICAgIHsNCiAgICAgICAgc2VsZjo6RGlzYWJsZUVycm9ySG9vaygpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOaBouWkjemUmeivr+iwg+W6pi4NCiAgICAgKi8NCiAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIFJlc3VtZUVycm9ySG9vaygpDQogICAgew0KICAgICAgICBzZWxmOjpFbmFibGVFcnJvckhvb2soKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmgaLlpI3plJnor6/osIPluqYuDQogICAgICovDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBEaXNhYmxlU3RyaWN0KCkNCiAgICB7DQogICAgICAgIHNlbGY6OiRpc3N0cmljdCA9IGZhbHNlOw0KICAgIH0NCg0KICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gRW5hYmxlU3RyaWN0KCkNCiAgICB7DQogICAgICAgIHNlbGY6OiRpc3N0cmljdCA9IHRydWU7DQogICAgfQ0KDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBEaXNhYmxlV2FybmluZygpDQogICAgew0KICAgICAgICBzZWxmOjokaXN3YXJuaW5nID0gZmFsc2U7DQogICAgfQ0KDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBFbmFibGVXYXJuaW5nKCkNCiAgICB7DQogICAgICAgIHNlbGY6OiRpc3dhcm5pbmcgPSB0cnVlOw0KICAgIH0NCg0KICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gVHJhY2UoJHMpDQogICAgew0KICAgICAgICBMb2dzKCRzKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDop6PmnpDplJnor6/kv6Hmga8uDQogICAgICoNCiAgICAgKiBAcGFyYW0gJHR5cGUNCiAgICAgKiBAcGFyYW0gJG1lc3NhZ2UNCiAgICAgKiBAcGFyYW0gJGZpbGUNCiAgICAgKiBAcGFyYW0gJGxpbmUNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gUGFyc2VFcnJvcigkdHlwZSwgJG1lc3NhZ2UsICRmaWxlLCAkbGluZSkNCiAgICB7DQogICAgICAgICR0aGlzLT50eXBlID0gJHR5cGU7DQogICAgICAgICR0aGlzLT5tZXNzYWdlID0gJG1lc3NhZ2U7DQogICAgICAgICR0aGlzLT5tZXNzYWdlZnVsbCA9ICRtZXNzYWdlIC4gJyAoc2V0X2Vycm9yX2hhbmRsZXIpICc7DQogICAgICAgICR0aGlzLT5maWxlID0gJGZpbGU7DQogICAgICAgICR0aGlzLT5saW5lID0gJGxpbmU7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6Kej5p6Q6ZSZ6K+v5L+h5oGvLg0KICAgICAqDQogICAgICogQHBhcmFtICRlcnJvcg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBQYXJzZVNodXRkb3duKCRlcnJvcikNCiAgICB7DQogICAgICAgICR0aGlzLT50eXBlID0gJGVycm9yWyd0eXBlJ107DQogICAgICAgICR0aGlzLT5tZXNzYWdlID0gJGVycm9yWydtZXNzYWdlJ107DQogICAgICAgICR0aGlzLT5tZXNzYWdlZnVsbCA9ICRlcnJvclsnbWVzc2FnZSddIC4gJyAocmVnaXN0ZXJfc2h1dGRvd25fZnVuY3Rpb24pICc7DQogICAgICAgICR0aGlzLT5maWxlID0gJGVycm9yWydmaWxlJ107DQogICAgICAgICR0aGlzLT5saW5lID0gJGVycm9yWydsaW5lJ107DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6Kej5p6Q5byC5bi45L+h5oGvLg0KICAgICAqDQogICAgICogQHBhcmFtIEV4Y2VwdGlvbiAkZXhjZXB0aW9uDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFBhcnNlRXhjZXB0aW9uKCRleGNlcHRpb24pDQogICAgew0KICAgICAgICAkdGhpcy0+bWVzc2FnZSA9ICRleGNlcHRpb24tPmdldE1lc3NhZ2UoKTsNCiAgICAgICAgJHRoaXMtPm1lc3NhZ2VmdWxsID0gJGV4Y2VwdGlvbi0+Z2V0TWVzc2FnZSgpIC4gJyAoc2V0X2V4Y2VwdGlvbl9oYW5kbGVyKSAnOw0KICAgICAgICAkdGhpcy0+dHlwZSA9ICRleGNlcHRpb24tPmdldENvZGUoKTsNCiAgICAgICAgJHRoaXMtPmZpbGUgPSAkZXhjZXB0aW9uLT5nZXRGaWxlKCk7DQogICAgICAgICR0aGlzLT5saW5lID0gJGV4Y2VwdGlvbi0+Z2V0TGluZSgpOw0KDQogICAgICAgIGlmIChzZWxmOjokZXJyb3JfZmlsZSAhPT0gbnVsbCkgew0KICAgICAgICAgICAgJHRoaXMtPmZpbGUgPSBzZWxmOjokZXJyb3JfZmlsZTsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChzZWxmOjokZXJyb3JfbGluZSAhPT0gbnVsbCkgew0KICAgICAgICAgICAgJHRoaXMtPmxpbmUgPSBzZWxmOjokZXJyb3JfbGluZTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOi+k+WHuumUmeivr+S/oeaBry4NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gRGlzcGxheSgpDQogICAgew0KICAgICAgICBpZiAoIWhlYWRlcnNfc2VudCgpKSB7DQogICAgICAgICAgICBIdHRwNTAwKCk7DQogICAgICAgICAgICBvYl9jbGVhbigpOw0KICAgICAgICB9DQoNCiAgICAgICAgJGVycm9yID0gJHRoaXM7DQoNCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fRGVidWdfRGlzcGxheSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwc2lnbmFsID0gUExVR0lOX0VYSVRTSUdOQUxfTk9ORTsNCiAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJGVycm9yKTsNCiAgICAgICAgICAgIGlmICgkZnBzaWduYWwgPT0gUExVR0lOX0VYSVRTSUdOQUxfUkVUVVJOKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICRmcHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHJlcXVpcmUgZGlybmFtZShfX0ZJTEVfXykgLiAnLy4uL2RlZmVuZC9lcnJvci5waHAnOw0KICAgICAgICBSdW5UaW1lKCk7DQoNCiAgICAgICAgLyoNCiAgICAgICAgICogYGBmbHVzaCgpYGAgYW5kIGBgZXhpdCgkZXJyb3JDb2RlKWBgIGlzIGZvciBISFZNLg0KICAgICAgICAgKiBAbGluayBodHRwczovL2dpdGh1Yi5jb20vemJsb2djbi96YmxvZ3BocC9pc3N1ZXMvMzINCiAgICAgICAgICovDQogICAgICAgIGZsdXNoKCk7DQogICAgICAgIGV4aXQoMSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6I635Y+W5Ye66ZSZ5Luj56CB5L+h5oGvLg0KICAgICAqDQogICAgICogQHBhcmFtICRmaWxlDQogICAgICogQHBhcmFtICRsaW5lDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGFycmF5DQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIGdldF9jb2RlKCRmaWxlLCAkbGluZSkNCiAgICB7DQogICAgICAgIGlmIChzdHJjYXNlY21wKCRmaWxlLCAnVW5rbm93bicpID09IDApIHsNCiAgICAgICAgICAgIHJldHVybiBhcnJheSgpOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCFpc19yZWFkYWJsZSgkZmlsZSkpIHsNCiAgICAgICAgICAgIHJldHVybiBhcnJheSgpOw0KICAgICAgICB9DQoNCiAgICAgICAgJGFGaWxlID0gYXJyYXlfc2xpY2UoZmlsZSgkZmlsZSksIG1heCgwLCAkbGluZSAtIDUpLCAxMCwgdHJ1ZSk7DQogICAgICAgIGZvcmVhY2ggKCRhRmlsZSBhcyAmJHNEYXRhKSB7DQogICAgICAgICAgICAvLyYkID0gQnlSZWYNCiAgICAgICAgICAgICRzRGF0YSA9IGh0bWxzcGVjaWFsY2hhcnMoJHNEYXRhKTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkYUZpbGU7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5b6X5Yiw5Y+v6IO955qE6ZSZ6K+v5Y6f5ZugLg0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gcG9zc2libGVfY2F1c2VzX29mX3RoZV9lcnJvcigpDQogICAgew0KICAgICAgICBnbG9iYWwgJGxhbmc7DQogICAgICAgIGdsb2JhbCAkYmxvZ2hvc3Q7DQogICAgICAgICRyZXN1bHQgPSAnJzsNCiAgICAgICAgaWYgKHNlbGY6OiRlcnJvcl9pZCAhPSAwKSB7DQogICAgICAgICAgICAvLyDku6PooahaLUJsb2dQSFDoh6rouqvmipvlh7rnmoTplJnor68NCiAgICAgICAgICAgIGlmIChpc3NldCgkbGFuZ1snZXJyb3JfcmVhc29ucyddW3NlbGY6OiRlcnJvcl9pZF0pKSB7DQogICAgICAgICAgICAgICAgJHJlc3VsdCA9ICRsYW5nWydlcnJvcl9yZWFzb25zJ11bc2VsZjo6JGVycm9yX2lkXTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgJHJlc3VsdCA9ICRsYW5nWydlcnJvcl9yZWFzb25zJ11bJ2RlZmF1bHQnXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIC8vIOagueaNruWFs+mUruivjeafpeaJvumUmeivrw0KICAgICAgICAkbG93ZXJFcnJvclJlYXNvbiA9IHN0cnRvbG93ZXIoJHRoaXMtPm1lc3NhZ2UpOw0KICAgICAgICBmb3JlYWNoICgkbGFuZ1snZXJyb3JfcmVhc29ucyddWydvdGhlciddIGFzICRrZXkgPT4gJHZhbHVlKSB7DQogICAgICAgICAgICBpZiAoc3RycG9zKCRsb3dlckVycm9yUmVhc29uLCAka2V5KSA+IC0xKSB7DQogICAgICAgICAgICAgICAgJHJlc3VsdCAuPSAkdmFsdWU7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAkZXJyb3JJZCA9IHVybGVuY29kZShzZWxmOjokZXJyb3JfaWQpOw0KICAgICAgICAkZXJyb3JNZXNzYWdlID0gdXJsZW5jb2RlKCR0aGlzLT5tZXNzYWdlKTsNCiAgICAgICAgJG1vcmVIZWxwID0gJGxhbmdbJ29mZmljYWxfdXJscyddWydtb3JlX2hlbHAnXTsNCiAgICAgICAgJG1vcmVIZWxwID0gc3RyX3JlcGxhY2UoJ3slaWQlfScsICRlcnJvcklkLCAkbW9yZUhlbHApOw0KICAgICAgICAkbW9yZUhlbHAgPSBzdHJfcmVwbGFjZSgneyVtZXNzYWdlJX0nLCAkZXJyb3JNZXNzYWdlLCAkbW9yZUhlbHApOw0KDQogICAgICAgICRyZXN1bHQgLj0gJGxhbmdbJ2Vycm9yX3JlYXNvbnMnXVsnZW5kJ107DQogICAgICAgICRyZXN1bHQgPSBzdHJfcmVwbGFjZSgneyVibG9naG9zdCV9JywgJGJsb2dob3N0LCAkcmVzdWx0KTsNCiAgICAgICAgJHJlc3VsdCA9IHN0cl9yZXBsYWNlKCd7JW1vcmVoZWxwJX0nLCAkbW9yZUhlbHAsICRyZXN1bHQpOw0KDQogICAgICAgIHJldHVybiAkcmVzdWx0Ow0KICAgIH0NCn0NCg==</file>
	<file name='zb_system\function\c_system_common.php' crc32='5CC0DC22'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\c_system_event.php' crc32='83F6CA3'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\c_system_admin.php' crc32='4D44F808'  dt:dt='bin.base64'>PD9waHAgaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoNCiAqIOWQjuWPsOeuoeeQhuebuOWFsyANCiAqIEBwYWNrYWdlIFotQmxvZ1BIUA0KICogQHN1YnBhY2thZ2UgU3lzdGVtL0FkbWluaXN0cmF0b3Ig5ZCO5Y+w566h55CGDQogKiBAY29weXJpZ2h0IChDKSAgUmFpbmJvd1NvZnQgU3R1ZGlvDQogKi8NCg0KJHpicC0+aXNtYW5hZ2UgPSB0cnVlOw0KDQovKioNCiAqIOa3u+WKoOmhtemdoueuoeeQhuWtkOiPnOWNlSjlhoXnva7mj5Lku7blh73mlbApLg0KICovDQpmdW5jdGlvbiBJbmNsdWRlX0FkbWluX0FkZHBhZ2VzdWJtZW51KCkNCnsNCiAgICBlY2hvIE1ha2VTdWJNZW51KCRHTE9CQUxTWydsYW5nJ11bJ21zZyddWyduZXdfcGFnZSddLCAnLi4vY21kLnBocD9hY3Q9UGFnZUVkdCcpOw0KfQ0KDQovKioNCiAqIOa3u+WKoOagh+etvueuoeeQhuWtkOiPnOWNlSjlhoXnva7mj5Lku7blh73mlbApLg0KICovDQpmdW5jdGlvbiBJbmNsdWRlX0FkbWluX0FkZHRhZ3N1Ym1lbnUoKQ0Kew0KICAgIGVjaG8gTWFrZVN1Yk1lbnUoJEdMT0JBTFNbJ2xhbmcnXVsnbXNnJ11bJ25ld190YWcnXSwgJy4uL2NtZC5waHA/YWN0PVRhZ0VkdCcpOw0KfQ0KDQovKioNCiAqIOa3u+WKoOWIhuexu+euoeeQhuWtkOiPnOWNlSjlhoXnva7mj5Lku7blh73mlbApLg0KICovDQpmdW5jdGlvbiBJbmNsdWRlX0FkbWluX0FkZGNhdGVzdWJtZW51KCkNCnsNCiAgICBlY2hvIE1ha2VTdWJNZW51KCRHTE9CQUxTWydsYW5nJ11bJ21zZyddWyduZXdfY2F0ZWdvcnknXSwgJy4uL2NtZC5waHA/YWN0PUNhdGVnb3J5RWR0Jyk7DQp9DQoNCi8qKg0KICog5re75Yqg55So5oi3566h55CG5a2Q6I+c5Y2VKOWGhee9ruaPkuS7tuWHveaVsCkuDQogKi8NCmZ1bmN0aW9uIEluY2x1ZGVfQWRtaW5fQWRkbWVtc3VibWVudSgpDQp7DQogICAgZ2xvYmFsICR6YnA7DQogICAgaWYgKCR6YnAtPkNoZWNrUmlnaHRzKCdNZW1iZXJOZXcnKSkgew0KICAgICAgICBlY2hvIE1ha2VTdWJNZW51KCRHTE9CQUxTWydsYW5nJ11bJ21zZyddWyduZXdfbWVtYmVyJ10sICcuLi9jbWQucGhwP2FjdD1NZW1iZXJOZXcnKTsNCiAgICB9DQogICAgZWNobyBNYWtlU3ViTWVudSgkR0xPQkFMU1snbGFuZyddWydtc2cnXVsndmlld19yaWdodHMnXSwgJy4uL2NtZC5waHA/YWN0PW1pc2MmYW1wO3R5cGU9dnJzJyk7DQp9DQoNCi8qKg0KICog5re75Yqg5qih5Z2X566h55CG5a2Q6I+c5Y2VKOWGhee9ruaPkuS7tuWHveaVsCkuDQogKi8NCmZ1bmN0aW9uIEluY2x1ZGVfQWRtaW5fQWRkbW9kc3VibWVudSgpDQp7DQogICAgZWNobyBNYWtlU3ViTWVudSgkR0xPQkFMU1snbGFuZyddWydtc2cnXVsnbmV3X21vZHVsZSddLCAnLi4vY21kLnBocD9hY3Q9TW9kdWxlRWR0Jyk7DQogICAgZWNobyBNYWtlU3ViTWVudSgkR0xPQkFMU1snbGFuZyddWydtc2cnXVsnbW9kdWxlX25hdmJhciddLCAnLi4vY21kLnBocD9hY3Q9TW9kdWxlRWR0JmFtcDtmaWxlbmFtZT1uYXZiYXInKTsNCiAgICBlY2hvIE1ha2VTdWJNZW51KCRHTE9CQUxTWydsYW5nJ11bJ21zZyddWydtb2R1bGVfbGluayddLCAnLi4vY21kLnBocD9hY3Q9TW9kdWxlRWR0JmFtcDtmaWxlbmFtZT1saW5rJyk7DQogICAgZWNobyBNYWtlU3ViTWVudSgkR0xPQkFMU1snbGFuZyddWydtc2cnXVsnbW9kdWxlX2Zhdm9yaXRlJ10sICcuLi9jbWQucGhwP2FjdD1Nb2R1bGVFZHQmYW1wO2ZpbGVuYW1lPWZhdm9yaXRlJyk7DQogICAgZWNobyBNYWtlU3ViTWVudSgkR0xPQkFMU1snbGFuZyddWydtc2cnXVsnbW9kdWxlX21pc2MnXSwgJy4uL2NtZC5waHA/YWN0PU1vZHVsZUVkdCZhbXA7ZmlsZW5hbWU9bWlzYycpOw0KfQ0KDQovKioNCiAqIOa3u+WKoOivhOiuuueuoeeQhuWtkOiPnOWNlSjlhoXnva7mj5Lku7blh73mlbApLg0KICovDQpmdW5jdGlvbiBJbmNsdWRlX0FkbWluX0FkZGNtdHN1Ym1lbnUoKQ0Kew0KICAgIGdsb2JhbCAkemJwOw0KICAgIGlmICgkemJwLT5DaGVja1JpZ2h0cygnQ29tbWVudEFsbCcpKSB7DQogICAgICAgICRuID0gJHpicC0+Y2FjaGUtPmFsbF9jb21tZW50X251bXMgLSAkemJwLT5jYWNoZS0+bm9ybWFsX2NvbW1lbnRfbnVtczsNCiAgICAgICAgaWYgKCRuICE9IDApIHsNCiAgICAgICAgICAgICRuID0gJyAoJyAuICRuIC4gJyknOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgJG4gPSAnJzsNCiAgICAgICAgfQ0KICAgICAgICBlY2hvIE1ha2VTdWJNZW51KCRHTE9CQUxTWydsYW5nJ11bJ21zZyddWydjaGVja19jb21tZW50J10gLiAkbiwgJy4uL2NtZC5waHA/YWN0PUNvbW1lbnRNbmcmYW1wO2lzY2hlY2tpbmc9MScsICdtLWxlZnQgJyAuIChHZXRWYXJzKCdpc2NoZWNraW5nJykgPyAnbS1ub3cnIDogJycpKTsNCiAgICB9DQp9DQoNCmZ1bmN0aW9uIEluY2x1ZGVfQWRtaW5fQ2hlY2tIdHRwMzA0T0soKQ0Kew0KICAgIGdsb2JhbCAkemJwLCAkYWN0aW9uOw0KICAgIGlmICgkYWN0aW9uICE9ICdhZG1pbicpIHsNCiAgICAgICAgcmV0dXJuOw0KICAgIH0NCiAgICBpZiAoISR6YnAtPkNoZWNrUmlnaHRzKCdyb290JykpIHsNCiAgICAgICAgcmV0dXJuOw0KICAgIH0NCiAgICBpZiAoR2V0VmFycygnaHR0cDMwNG9rJywgJ0NPT0tJRScpICE9PSAnMScpIHsNCiAgICAgICAgZWNobyAnPHNjcmlwdD4kKGZ1bmN0aW9uICgpIHsgJC5hamF4KHt0eXBlOiAiR0VUIix1cmw6ICInIC4gJHpicC0+aG9zdCAuICd6Yl9zeXN0ZW0vY21kLnBocD9hY3Q9Y2hlY2todHRwMzA0b2siLHN1Y2Nlc3M6IGZ1bmN0aW9uKG1zZyl7emJwLmNvb2tpZS5zZXQoXCdodHRwMzA0b2tcJyxcJzBcJywzNjUpO30sc3RhdHVzQ29kZTogezUwMDogZnVuY3Rpb24oKSB7emJwLmNvb2tpZS5zZXQoXCdodHRwMzA0b2tcJyxcJzFcJywzNjUpO319fSk7IH0pOzwvc2NyaXB0Pic7DQogICAgfQ0KICAgIGlmIChHZXRWYXJzKCdodHRwMzA0b2snLCAnQ09PS0lFJykgPT09ICcwJykgew0KICAgICAgICBpZiAoJHpicC0+b3B0aW9uWydaQ19KU18zMDRfRU5BQkxFJ10gPT0gdHJ1ZSkgew0KICAgICAgICAgICAgJHpicC0+b3B0aW9uWydaQ19KU18zMDRfRU5BQkxFJ10gPSBmYWxzZTsNCiAgICAgICAgICAgICR6YnAtPlNhdmVPcHRpb24oKTsNCiAgICAgICAgfQ0KICAgIH0gZWxzZWlmIChHZXRWYXJzKCdodHRwMzA0b2snLCAnQ09PS0lFJykgPT09ICcxJykgew0KICAgICAgICBpZiAoJHpicC0+b3B0aW9uWydaQ19KU18zMDRfRU5BQkxFJ10gPT0gZmFsc2UpIHsNCiAgICAgICAgICAgICR6YnAtPm9wdGlvblsnWkNfSlNfMzA0X0VOQUJMRSddID0gdHJ1ZTsNCiAgICAgICAgICAgICR6YnAtPlNhdmVPcHRpb24oKTsNCiAgICAgICAgfQ0KICAgIH0NCn0NCg0KQWRkX0ZpbHRlcl9QbHVnaW4oJ0ZpbHRlcl9QbHVnaW5fQWRtaW5fRW5kJywgJ0luY2x1ZGVfQWRtaW5fQ2hlY2tIdHRwMzA0T0snKTsNCg0KJHRvcG1lbnVzID0gYXJyYXkoKTsNCg0KJGxlZnRtZW51cyA9IGFycmF5KCk7DQoNCi8qKg0KICog5ZCO5Y+w566h55CG5bem5L6n5a+86Iiq6I+c5Y2VLg0KICovDQpmdW5jdGlvbiBSZXNwb25zZUFkbWluX0xlZnRNZW51KCkNCnsNCiAgICBnbG9iYWwgJHpicDsNCiAgICBnbG9iYWwgJGxlZnRtZW51czsNCg0KICAgICRsZWZ0bWVudXNbJ25hdl9uZXcnXSA9IE1ha2VMZWZ0TWVudSgiQXJ0aWNsZUVkdCIsICR6YnAtPmxhbmdbJ21zZyddWyduZXdfYXJ0aWNsZSddLCAkemJwLT5ob3N0IC4gInpiX3N5c3RlbS9jbWQucGhwP2FjdD1BcnRpY2xlRWR0IiwgIm5hdl9uZXciLCAiYUFydGljbGVFZHQiLCAiIik7DQogICAgJGxlZnRtZW51c1snbmF2X2FydGljbGUnXSA9IE1ha2VMZWZ0TWVudSgiQXJ0aWNsZU1uZyIsICR6YnAtPmxhbmdbJ21zZyddWydhcnRpY2xlX21hbmFnZSddLCAkemJwLT5ob3N0IC4gInpiX3N5c3RlbS9jbWQucGhwP2FjdD1BcnRpY2xlTW5nIiwgIm5hdl9hcnRpY2xlIiwgImFBcnRpY2xlTW5nIiwgIiIpOw0KICAgICRsZWZ0bWVudXNbJ25hdl9wYWdlJ10gPSBNYWtlTGVmdE1lbnUoIlBhZ2VNbmciLCAkemJwLT5sYW5nWydtc2cnXVsncGFnZV9tYW5hZ2UnXSwgJHpicC0+aG9zdCAuICJ6Yl9zeXN0ZW0vY21kLnBocD9hY3Q9UGFnZU1uZyIsICJuYXZfcGFnZSIsICJhUGFnZU1uZyIsICIiKTsNCg0KICAgICRsZWZ0bWVudXNbXSA9ICI8bGkgY2xhc3M9J3NwbGl0Jz48aHIvPjwvbGk+IjsNCg0KICAgICRsZWZ0bWVudXNbJ25hdl9jYXRlZ29yeSddID0gTWFrZUxlZnRNZW51KCJDYXRlZ29yeU1uZyIsICR6YnAtPmxhbmdbJ21zZyddWydjYXRlZ29yeV9tYW5hZ2UnXSwgJHpicC0+aG9zdCAuICJ6Yl9zeXN0ZW0vY21kLnBocD9hY3Q9Q2F0ZWdvcnlNbmciLCAibmF2X2NhdGVnb3J5IiwgImFDYXRlZ29yeU1uZyIsICIiKTsNCiAgICAkbGVmdG1lbnVzWyduYXZfdGFncyddID0gTWFrZUxlZnRNZW51KCJUYWdNbmciLCAkemJwLT5sYW5nWydtc2cnXVsndGFnX21hbmFnZSddLCAkemJwLT5ob3N0IC4gInpiX3N5c3RlbS9jbWQucGhwP2FjdD1UYWdNbmciLCAibmF2X3RhZ3MiLCAiYVRhZ01uZyIsICIiKTsNCiAgICAkbGVmdG1lbnVzWyduYXZfY29tbWVudDEnXSA9IE1ha2VMZWZ0TWVudSgiQ29tbWVudE1uZyIsICR6YnAtPmxhbmdbJ21zZyddWydjb21tZW50X21hbmFnZSddLCAkemJwLT5ob3N0IC4gInpiX3N5c3RlbS9jbWQucGhwP2FjdD1Db21tZW50TW5nIiwgIm5hdl9jb21tZW50IiwgImFDb21tZW50TW5nIiwgIiIpOw0KICAgICRsZWZ0bWVudXNbJ25hdl91cGxvYWQnXSA9IE1ha2VMZWZ0TWVudSgiVXBsb2FkTW5nIiwgJHpicC0+bGFuZ1snbXNnJ11bJ3VwbG9hZF9tYW5hZ2UnXSwgJHpicC0+aG9zdCAuICJ6Yl9zeXN0ZW0vY21kLnBocD9hY3Q9VXBsb2FkTW5nIiwgIm5hdl91cGxvYWQiLCAiYVVwbG9hZE1uZyIsICIiKTsNCiAgICAkbGVmdG1lbnVzWyduYXZfbWVtYmVyJ10gPSBNYWtlTGVmdE1lbnUoIk1lbWJlck1uZyIsICR6YnAtPmxhbmdbJ21zZyddWydtZW1iZXJfbWFuYWdlJ10sICR6YnAtPmhvc3QgLiAiemJfc3lzdGVtL2NtZC5waHA/YWN0PU1lbWJlck1uZyIsICJuYXZfbWVtYmVyIiwgImFNZW1iZXJNbmciLCAiIik7DQoNCiAgICAkbGVmdG1lbnVzW10gPSAiPGxpIGNsYXNzPSdzcGxpdCc+PGhyLz48L2xpPiI7DQoNCiAgICAkbGVmdG1lbnVzWyduYXZfdGhlbWUnXSA9IE1ha2VMZWZ0TWVudSgiVGhlbWVNbmciLCAkemJwLT5sYW5nWydtc2cnXVsndGhlbWVfbWFuYWdlJ10sICR6YnAtPmhvc3QgLiAiemJfc3lzdGVtL2NtZC5waHA/YWN0PVRoZW1lTW5nIiwgIm5hdl90aGVtZSIsICJhVGhlbWVNbmciLCAiIik7DQogICAgJGxlZnRtZW51c1snbmF2X21vZHVsZSddID0gTWFrZUxlZnRNZW51KCJNb2R1bGVNbmciLCAkemJwLT5sYW5nWydtc2cnXVsnbW9kdWxlX21hbmFnZSddLCAkemJwLT5ob3N0IC4gInpiX3N5c3RlbS9jbWQucGhwP2FjdD1Nb2R1bGVNbmciLCAibmF2X21vZHVsZSIsICJhTW9kdWxlTW5nIiwgIiIpOw0KICAgICRsZWZ0bWVudXNbJ25hdl9wbHVnaW4nXSA9IE1ha2VMZWZ0TWVudSgiUGx1Z2luTW5nIiwgJHpicC0+bGFuZ1snbXNnJ11bJ3BsdWdpbl9tYW5hZ2UnXSwgJHpicC0+aG9zdCAuICJ6Yl9zeXN0ZW0vY21kLnBocD9hY3Q9UGx1Z2luTW5nIiwgIm5hdl9wbHVnaW4iLCAiYVBsdWdpbk1uZyIsICIiKTsNCg0KICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX0FkbWluX0xlZnRNZW51J10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICRmcG5hbWUoJGxlZnRtZW51cyk7DQogICAgfQ0KDQogICAgZm9yZWFjaCAoJGxlZnRtZW51cyBhcyAkbSkgew0KICAgICAgICBlY2hvICRtOw0KICAgIH0NCn0NCg0KLyoqDQogKiDlkI7lj7DnrqHnkIbpobbpg6joj5zljZUuDQogKi8NCmZ1bmN0aW9uIFJlc3BvbnNlQWRtaW5fVG9wTWVudSgpDQp7DQogICAgZ2xvYmFsICR6YnA7DQogICAgZ2xvYmFsICR0b3BtZW51czsNCg0KICAgICR0b3BtZW51c1tdID0gTWFrZVRvcE1lbnUoImFkbWluIiwgJHpicC0+bGFuZ1snbXNnJ11bJ2Rhc2hib2FyZCddLCAkemJwLT5ob3N0IC4gInpiX3N5c3RlbS9jbWQucGhwP2FjdD1hZG1pbiIsICIiLCAiIik7DQogICAgJHRvcG1lbnVzW10gPSBNYWtlVG9wTWVudSgiU2V0dGluZ01uZyIsICR6YnAtPmxhbmdbJ21zZyddWydzZXR0aW5ncyddLCAkemJwLT5ob3N0IC4gInpiX3N5c3RlbS9jbWQucGhwP2FjdD1TZXR0aW5nTW5nIiwgIiIsICIiKTsNCg0KICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX0FkbWluX1RvcE1lbnUnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgJGZwbmFtZSgkdG9wbWVudXMpOw0KICAgIH0NCg0KICAgICR0b3BtZW51c1tdID0gTWFrZVRvcE1lbnUoIm1pc2MiLCAkemJwLT5sYW5nWydtc2cnXVsnb2ZmaWNpYWxfd2Vic2l0ZSddLCAiaHR0cHM6Ly93d3cuemJsb2djbi5jb20vIiwgIl9ibGFuayIsICIiKTsNCg0KICAgIGZvcmVhY2ggKCR0b3BtZW51cyBhcyAkbSkgew0KICAgICAgICBlY2hvICRtOw0KICAgIH0NCn0NCg0KLyoqDQogKiDmt7vliqDlrZDoj5zljZXpobkuDQogKg0KICogQHBhcmFtICRzdHJOYW1lDQogKiBAcGFyYW0gJHN0clVybA0KICogQHBhcmFtICRzdHJDbGFzcw0KICogQHBhcmFtICRzdHJUYXJnZXQNCiAqIEBwYXJhbSAkc3RySWQNCiAqIEBwYXJhbSAkc3RyVGl0bGUNCiAqDQogKiBAcmV0dXJuIG51bGx8c3RyaW5nDQogKi8NCmZ1bmN0aW9uIE1ha2VTdWJNZW51KCRzdHJOYW1lLCAkc3RyVXJsLCAkc3RyQ2xhc3MgPSAnbS1sZWZ0JywgJHN0clRhcmdldCA9ICcnLCAkc3RySWQgPSAnJywgJHN0clRpdGxlID0gJycpDQp7DQogICAgJHMgPSAnPGEgaHJlZj0iJyAuICRzdHJVcmwgLiAnIiAnOw0KICAgIGlmICgkc3RyVGFyZ2V0KSB7DQogICAgICAgICRzIC49ICd0YXJnZXQ9IicgLiAkc3RyVGFyZ2V0IC4gJyInOw0KICAgIH0NCiAgICBpZiAoJHN0cklkKSB7DQogICAgICAgICRzIC49ICdpZD0iJyAuICRzdHJJZCAuICciJzsNCiAgICB9DQogICAgaWYgKCRzdHJUaXRsZSkgew0KICAgICAgICAkcyAuPSAndGl0bGU9IicgLiAkc3RyVGl0bGUgLiAnIiAnIC4gJ2FsdD0iJyAuICRzdHJUaXRsZSAuICciICc7DQogICAgfQ0KICAgICRzIC49ICc+JzsNCiAgICAkcyAuPSAnPHNwYW4gY2xhc3M9IicgLiAkc3RyQ2xhc3MgLiAnIj4nIC4gJHN0ck5hbWUgLiAnPC9zcGFuPjwvYT4nOw0KDQogICAgcmV0dXJuICRzOw0KfQ0KDQovKioNCiAqIOa3u+WKoOmhtumDqOiPnOWNlemhuS4NCiAqDQogKiBAcGFyYW0gJHJlcXVpcmVBY3Rpb24NCiAqIEBwYXJhbSAkc3RyTmFtZQ0KICogQHBhcmFtICRzdHJVcmwNCiAqIEBwYXJhbSAkc3RyVGFyZ2V0DQogKiBAcGFyYW0gJHN0ckxpSWQNCiAqDQogKiBAcmV0dXJuIG51bGx8c3RyaW5nDQogKi8NCmZ1bmN0aW9uIE1ha2VUb3BNZW51KCRyZXF1aXJlQWN0aW9uLCAkc3RyTmFtZSwgJHN0clVybCwgJHN0clRhcmdldCwgJHN0ckxpSWQpDQp7DQogICAgZ2xvYmFsICR6YnA7DQoNCiAgICBzdGF0aWMgJEFkbWluVG9wTWVudUNvdW50ID0gMDsNCiAgICBpZiAoJHpicC0+Q2hlY2tSaWdodHMoJHJlcXVpcmVBY3Rpb24pID09IGZhbHNlKSB7DQogICAgICAgIHJldHVybjsNCiAgICB9DQoNCiAgICAkdG1wID0gbnVsbDsNCiAgICBpZiAoJHN0clRhcmdldCA9PSAiIikgew0KICAgICAgICAkc3RyVGFyZ2V0ID0gIl9zZWxmIjsNCiAgICB9DQogICAgJEFkbWluVG9wTWVudUNvdW50ID0gJEFkbWluVG9wTWVudUNvdW50ICsgMTsNCiAgICBpZiAoJHN0ckxpSWQgPT0gIiIpIHsNCiAgICAgICAgJHN0ckxpSWQgPSAidG9wbWVudSIgLiAkQWRtaW5Ub3BNZW51Q291bnQ7DQogICAgfQ0KICAgICR0bXAgPSAiPGxpIGlkPVwiIiAuICRzdHJMaUlkIC4gIlwiPjxhIGhyZWY9XCIiIC4gJHN0clVybCAuICJcIiB0YXJnZXQ9XCIiIC4gJHN0clRhcmdldCAuICJcIiB0aXRsZT1cIiIgLiBodG1sc3BlY2lhbGNoYXJzKCRzdHJOYW1lKSAuICJcIj4iIC4gJHN0ck5hbWUgLiAiPC9hPjwvbGk+IjsNCg0KICAgIHJldHVybiAkdG1wOw0KfQ0KDQovKioNCiAqIOa3u+WKoOW3puS+p+iPnOWNlemhuS4NCiAqDQogKiBAcGFyYW0gJHJlcXVpcmVBY3Rpb24NCiAqIEBwYXJhbSAkc3RyTmFtZQ0KICogQHBhcmFtICRzdHJVcmwNCiAqIEBwYXJhbSAkc3RyTGlJZA0KICogQHBhcmFtICRzdHJBSWQNCiAqIEBwYXJhbSAkc3RySW1nVXJsDQogKg0KICogQHJldHVybiBudWxsfHN0cmluZw0KICovDQpmdW5jdGlvbiBNYWtlTGVmdE1lbnUoJHJlcXVpcmVBY3Rpb24sICRzdHJOYW1lLCAkc3RyVXJsLCAkc3RyTGlJZCwgJHN0ckFJZCwgJHN0ckltZ1VybCkNCnsNCiAgICBnbG9iYWwgJHpicDsNCg0KICAgIHN0YXRpYyAkQWRtaW5MZWZ0TWVudUNvdW50ID0gMDsNCiAgICBpZiAoJHpicC0+Q2hlY2tSaWdodHMoJHJlcXVpcmVBY3Rpb24pID09IGZhbHNlKSB7DQogICAgICAgIHJldHVybjsNCiAgICB9DQoNCiAgICAkQWRtaW5MZWZ0TWVudUNvdW50ID0gJEFkbWluTGVmdE1lbnVDb3VudCArIDE7DQogICAgJHRtcCA9IG51bGw7DQogICAgaWYgKCRzdHJJbWdVcmwgIT0gIiIpIHsNCiAgICAgICAgJHRtcCA9ICI8bGkgaWQ9XCIiIC4gJHN0ckxpSWQgLiAiXCI+PGEgaWQ9XCIiIC4gJHN0ckFJZCAuICJcIiBocmVmPVwiIiAuICRzdHJVcmwgLiAiXCIgdGl0bGU9XCIiIC4gc3RyaXBfdGFncygkc3RyTmFtZSkgLiAiXCI+PHNwYW4gc3R5bGU9XCJiYWNrZ3JvdW5kLWltYWdlOnVybCgnIiAuICRzdHJJbWdVcmwgLiAiJylcIj4iIC4gJHN0ck5hbWUgLiAiPC9zcGFuPjwvYT48L2xpPiI7DQogICAgfSBlbHNlIHsNCiAgICAgICAgJHRtcCA9ICI8bGkgaWQ9XCIiIC4gJHN0ckxpSWQgLiAiXCI+PGEgaWQ9XCIiIC4gJHN0ckFJZCAuICJcIiBocmVmPVwiIiAuICRzdHJVcmwgLiAiXCIgdGl0bGU9XCIiIC4gc3RyaXBfdGFncygkc3RyTmFtZSkgLiAiXCI+PHNwYW4+IiAuICRzdHJOYW1lIC4gIjwvc3Bhbj48L2E+PC9saT4iOw0KICAgIH0NCg0KICAgIHJldHVybiAkdG1wOw0KfQ0KDQovLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KLyoqDQogKiDnlJ/miJBUWVBFc2VsZWN06KGo5Y2VLg0KICoNCiAqIEBwYXJhbSAkZGVmYXVsdA0KICoNCiAqIEByZXR1cm4gbnVsbHxzdHJpbmcNCiAqLw0KZnVuY3Rpb24gT3V0cHV0T3B0aW9uSXRlbXNPZlR5cGUoJGRlZmF1bHQpDQp7DQogICAgZ2xvYmFsICR6YnA7DQoNCiAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9PdXRwdXRPcHRpb25JdGVtc09mVHlwZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAkZnByZXR1cm4gPSAkZnBuYW1lKCRkZWZhdWx0KTsNCiAgICAgICAgaWYgKCRmcHNpZ25hbCA9PSBQTFVHSU5fRVhJVFNJR05BTF9SRVRVUk4pIHsNCiAgICAgICAgICAgICRmcHNpZ25hbCA9IFBMVUdJTl9FWElUU0lHTkFMX05PTkU7DQoNCiAgICAgICAgICAgIHJldHVybiAkZnByZXR1cm47DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAkcyA9IG51bGw7DQogICAgZm9yZWFjaCAoJHpicC0+cG9zdHR5cGUgYXMgJGtleSA9PiAkdmFsdWUpIHsNCiAgICAgICAgJHMgLj0gJzxvcHRpb24gJyAuICgkZGVmYXVsdCA9PSAka2V5ID8gJ3NlbGVjdGVkPSJzZWxlY3RlZCInIDogJycpIC4gJyB2YWx1ZT0iJyAuICRrZXkgLiAnIj4nIC4gJHZhbHVlWzBdIC4gJzwvb3B0aW9uPic7DQogICAgfQ0KDQogICAgcmV0dXJuICRzOw0KfQ0KDQovKioNCiAqIOeUn+aIkOWIhuexu3NlbGVjdOihqOWNlS4NCiAqDQogKiBAcGFyYW0gJGRlZmF1bHQNCiAqDQogKiBAcmV0dXJuIG51bGx8c3RyaW5nDQogKi8NCmZ1bmN0aW9uIE91dHB1dE9wdGlvbkl0ZW1zT2ZDYXRlZ29yaWVzKCRkZWZhdWx0KQ0Kew0KICAgIGdsb2JhbCAkemJwOw0KDQogICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fT3V0cHV0T3B0aW9uSXRlbXNPZkNhdGVnb3JpZXMnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkZGVmYXVsdCk7DQogICAgICAgIGlmICgkZnBzaWduYWwgPT0gUExVR0lOX0VYSVRTSUdOQUxfUkVUVVJOKSB7DQogICAgICAgICAgICAkZnBzaWduYWwgPSBQTFVHSU5fRVhJVFNJR05BTF9OT05FOw0KDQogICAgICAgICAgICByZXR1cm4gJGZwcmV0dXJuOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgJHMgPSBudWxsOw0KICAgIGZvcmVhY2ggKCR6YnAtPmNhdGVnb3JpZXNieW9yZGVyIGFzICRpZCA9PiAkY2F0ZSkgew0KICAgICAgICAkcyAuPSAnPG9wdGlvbiAnIC4gKCRkZWZhdWx0ID09ICRjYXRlLT5JRCA/ICdzZWxlY3RlZD0ic2VsZWN0ZWQiJyA6ICcnKSAuICcgdmFsdWU9IicgLiAkY2F0ZS0+SUQgLiAnIj4nIC4gJGNhdGUtPlN5bWJvbE5hbWUgLiAnPC9vcHRpb24+JzsNCiAgICB9DQoNCiAgICByZXR1cm4gJHM7DQp9DQoNCi8qKg0KICog55Sf5oiQ5qih5p2/c2VsZWN06KGo5Y2VLg0KICoNCiAqIEBwYXJhbSAkZGVmYXVsdA0KICoNCiAqIEByZXR1cm4gbnVsbHxzdHJpbmcNCiAqLw0KZnVuY3Rpb24gT3V0cHV0T3B0aW9uSXRlbXNPZlRlbXBsYXRlKCRkZWZhdWx0LCAkZmlsZV9maWx0ZXJfYXJyYXkgPSBhcnJheSgpKQ0Kew0KICAgIGdsb2JhbCAkemJwOw0KICAgICR0ZXN0UmVnRXhwID0gIi9eKFwufHBvc3QtfG1vZHVsZXxoZWFkZXJ8Zm9vdGVyfGNvbW1lbnR8c2lkZWJhcnxwYWdlYmFyfFthLXpBLVpdXF8pL3NpIjsNCiAgICAkcyA9IG51bGw7DQogICAgJHMgLj0gJzxvcHRpb24gdmFsdWU9IiIgPicgLiAkemJwLT5sYW5nWydtc2cnXVsnbm9uZSddIC4gJzwvb3B0aW9uPic7DQoNCiAgICBmb3JlYWNoICgkemJwLT50ZW1wbGF0ZS0+dGVtcGxhdGVzIGFzICRrZXkgPT4gJHZhbHVlKSB7DQogICAgICAgIGlmIChwcmVnX21hdGNoKCR0ZXN0UmVnRXhwLCAka2V5KSkgew0KICAgICAgICAgICAgY29udGludWU7DQogICAgICAgIH0NCg0KICAgICAgICAkYiA9IGZhbHNlOw0KICAgICAgICBmb3JlYWNoICgkZmlsZV9maWx0ZXJfYXJyYXkgYXMgJGtleTIgPT4gJHZhbHVlMikgew0KICAgICAgICAgICAgJHRlc3RSZWdFeHAyID0gIi9eKCR2YWx1ZTIpL3NpIjsNCiAgICAgICAgICAgIGlmIChwcmVnX21hdGNoKCR0ZXN0UmVnRXhwMiwgJGtleSkpIHsNCiAgICAgICAgICAgICAgICAkYiA9IHRydWU7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgaWYgKCRiID09IHRydWUpIHsNCiAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICB9DQoNCiAgICAgICAgJG4gPSAiIjsNCiAgICAgICAgJHQgPSAkdmFsdWU7DQoNCiAgICAgICAgaWYgKHN0cmlzdHIoJHZhbHVlLCAnVGVtcGxhdGUgTmFtZTonKSkgew0KICAgICAgICAgICAgJHQgPSBzdHJpc3RyKCR0LCAnVGVtcGxhdGUgTmFtZTonKTsNCiAgICAgICAgICAgICR0ID0gc3RyX2lyZXBsYWNlKCdUZW1wbGF0ZSBOYW1lOicsICcnLCAkdCk7DQogICAgICAgICAgICAkbiA9IHN0cnRvaygkdCwgJyAnKTsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmICgkZGVmYXVsdCA9PSAka2V5KSB7DQogICAgICAgICAgICAkcyAuPSAnPG9wdGlvbiB2YWx1ZT0iJyAuICRrZXkgLiAnIiBzZWxlY3RlZD0ic2VsZWN0ZWQiPicgLiAka2V5IC4gJyAoJyAuICR6YnAtPmxhbmdbJ21zZyddWydjdXJyZW50X3RlbXBsYXRlJ10gLiAnKScgLiAnPC9vcHRpb24+JzsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGlmICgkbiAhPT0gJycpIHsNCiAgICAgICAgICAgICAgICAkcyAuPSAnPG9wdGlvbiB2YWx1ZT0iJyAuICRrZXkgLiAnIiA+JyAuICRrZXkgLiAnICgnIC4gJG4gLiAnKScgLiAnPC9vcHRpb24+JzsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgJHMgLj0gJzxvcHRpb24gdmFsdWU9IicgLiAka2V5IC4gJyIgPicgLiAka2V5IC4gJzwvb3B0aW9uPic7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICByZXR1cm4gJHM7DQp9DQoNCi8qKg0KICog55Sf5oiQ55So5oi3562J57qnc2VsZWN06KGo5Y2VLg0KICoNCiAqIEBwYXJhbSAkZGVmYXVsdA0KICoNCiAqIEByZXR1cm4gbnVsbHxzdHJpbmcNCiAqLw0KZnVuY3Rpb24gT3V0cHV0T3B0aW9uSXRlbXNPZk1lbWJlckxldmVsKCRkZWZhdWx0KQ0Kew0KICAgIGdsb2JhbCAkemJwOw0KDQogICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fT3V0cHV0T3B0aW9uSXRlbXNPZk1lbWJlckxldmVsJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJGRlZmF1bHQpOw0KICAgICAgICBpZiAoJGZwc2lnbmFsID09IFBMVUdJTl9FWElUU0lHTkFMX1JFVFVSTikgew0KICAgICAgICAgICAgJGZwc2lnbmFsID0gUExVR0lOX0VYSVRTSUdOQUxfTk9ORTsNCg0KICAgICAgICAgICAgcmV0dXJuICRmcHJldHVybjsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgICRzID0gbnVsbDsNCiAgICBpZiAoISR6YnAtPkNoZWNrUmlnaHRzKCdNZW1iZXJBbGwnKSkgew0KICAgICAgICByZXR1cm4gJzxvcHRpb24gdmFsdWU9IicgLiAkZGVmYXVsdCAuICciIHNlbGVjdGVkPSJzZWxlY3RlZCIgPicgLiAkemJwLT5sYW5nWyd1c2VyX2xldmVsX25hbWUnXVskZGVmYXVsdF0gLiAnPC9vcHRpb24+JzsNCiAgICB9DQogICAgZm9yICgkaSA9IDE7ICRpIDwgNzsgJGkrKykgew0KICAgICAgICAkcyAuPSAnPG9wdGlvbiB2YWx1ZT0iJyAuICRpIC4gJyIgJyAuICgkZGVmYXVsdCA9PSAkaSA/ICdzZWxlY3RlZD0ic2VsZWN0ZWQiJyA6ICcnKSAuICcgPicgLiAkemJwLT5sYW5nWyd1c2VyX2xldmVsX25hbWUnXVskaV0gLiAnPC9vcHRpb24+JzsNCiAgICB9DQoNCiAgICByZXR1cm4gJHM7DQp9DQoNCi8qKg0KICog55Sf5oiQ55So5oi3c2VsZWN06KGo5Y2VLg0KICoNCiAqIEBwYXJhbSAkZGVmYXVsdA0KICoNCiAqIEByZXR1cm4gbnVsbHxzdHJpbmcNCiAqLw0KZnVuY3Rpb24gT3V0cHV0T3B0aW9uSXRlbXNPZk1lbWJlcigkZGVmYXVsdCkNCnsNCiAgICBnbG9iYWwgJHpicDsNCg0KICAgICRzID0gbnVsbDsNCiAgICBpZiAoISR6YnAtPkNoZWNrUmlnaHRzKCdBcnRpY2xlQWxsJykpIHsNCiAgICAgICAgaWYgKCFpc3NldCgkemJwLT5tZW1iZXJzWyRkZWZhdWx0XSkpIHsNCiAgICAgICAgICAgIHJldHVybiAnPG9wdGlvbiB2YWx1ZT0iMCIgc2VsZWN0ZWQ9InNlbGVjdGVkIiA+PC9vcHRpb24+JzsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAnPG9wdGlvbiB2YWx1ZT0iJyAuICRkZWZhdWx0IC4gJyIgc2VsZWN0ZWQ9InNlbGVjdGVkIiA+JyAuICR6YnAtPm1lbWJlcnNbJGRlZmF1bHRdLT5OYW1lIC4gJzwvb3B0aW9uPic7DQogICAgfQ0KICAgIGZvcmVhY2ggKCR6YnAtPm1lbWJlcnMgYXMgJGtleSA9PiAkdmFsdWUpIHsNCiAgICAgICAgaWYgKCR6YnAtPkNoZWNrUmlnaHRzQnlMZXZlbCgnQXJ0aWNsZUVkdCcsICR6YnAtPm1lbWJlcnNbJGtleV0tPkxldmVsKSkgew0KICAgICAgICAgICAgJHMgLj0gJzxvcHRpb24gdmFsdWU9IicgLiAka2V5IC4gJyIgJyAuICgkZGVmYXVsdCA9PSAka2V5ID8gJ3NlbGVjdGVkPSJzZWxlY3RlZCInIDogJycpIC4gJyA+JyAuICR6YnAtPm1lbWJlcnNbJGtleV0tPk5hbWUgLiAnPC9vcHRpb24+JzsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIHJldHVybiAkczsNCn0NCg0KLyoqDQogKiDnlJ/miJDmlofnq6BJc1RvcOeKtuaAgXNlbGVjdOihqOWNlS4NCiAqDQogKiBAcGFyYW0gJGRlZmF1bHQNCiAqDQogKiBAcmV0dXJuIG51bGx8c3RyaW5nDQogKi8NCmZ1bmN0aW9uIE91dHB1dE9wdGlvbkl0ZW1zT2ZJc1RvcCgkZGVmYXVsdCkNCnsNCiAgICBnbG9iYWwgJHpicDsNCg0KICAgICRzID0gbnVsbDsNCiAgICAkcyAuPSAnPG9wdGlvbiB2YWx1ZT0iMCIgJyAuICgkZGVmYXVsdCA9PSAwID8gJ3NlbGVjdGVkPSJzZWxlY3RlZCInIDogJycpIC4gJyA+JyAuICR6YnAtPmxhbmdbJ21zZyddWydub25lJ10gLiAnPC9vcHRpb24+JzsNCiAgICAkcyAuPSAnPG9wdGlvbiB2YWx1ZT0iMiIgJyAuICgkZGVmYXVsdCA9PSAyID8gJ3NlbGVjdGVkPSJzZWxlY3RlZCInIDogJycpIC4gJyA+JyAuICR6YnAtPmxhbmdbJ21zZyddWyd0b3BfaW5kZXgnXSAuICc8L29wdGlvbj4nOw0KICAgICRzIC49ICc8b3B0aW9uIHZhbHVlPSIxIiAnIC4gKCRkZWZhdWx0ID09IDEgPyAnc2VsZWN0ZWQ9InNlbGVjdGVkIicgOiAnJykgLiAnID4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3RvcF9nbG9iYWwnXSAuICc8L29wdGlvbj4nOw0KICAgICRzIC49ICc8b3B0aW9uIHZhbHVlPSI0IiAnIC4gKCRkZWZhdWx0ID09IDQgPyAnc2VsZWN0ZWQ9InNlbGVjdGVkIicgOiAnJykgLiAnID4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3RvcF9jYXRlZ29yeSddIC4gJzwvb3B0aW9uPic7DQoNCiAgICByZXR1cm4gJHM7DQp9DQoNCi8qKg0KICog55Sf5oiQ5paH56ug5Y+R5biD54q25oCBc2VsZWN06KGo5Y2VLg0KICoNCiAqIEBwYXJhbSAkZGVmYXVsdA0KICoNCiAqIEByZXR1cm4gbnVsbHxzdHJpbmcNCiAqLw0KZnVuY3Rpb24gT3V0cHV0T3B0aW9uSXRlbXNPZlBvc3RTdGF0dXMoJGRlZmF1bHQpDQp7DQogICAgZ2xvYmFsICR6YnA7DQoNCiAgICAkcyA9IG51bGw7DQogICAgaWYgKCEkemJwLT5DaGVja1JpZ2h0cygnQXJ0aWNsZVB1YicpICYmICRkZWZhdWx0ID09IDIpIHsNCiAgICAgICAgcmV0dXJuICc8b3B0aW9uIHZhbHVlPSIyIiAnIC4gKCRkZWZhdWx0ID09IDIgPyAnc2VsZWN0ZWQ9InNlbGVjdGVkIicgOiAnJykgLiAnID4nIC4gJHpicC0+bGFuZ1sncG9zdF9zdGF0dXNfbmFtZSddWycyJ10gLiAnPC9vcHRpb24+JzsNCiAgICB9DQogICAgaWYgKCEkemJwLT5DaGVja1JpZ2h0cygnQXJ0aWNsZUFsbCcpICYmICRkZWZhdWx0ID09IDIpIHsNCiAgICAgICAgcmV0dXJuICc8b3B0aW9uIHZhbHVlPSIyIiAnIC4gKCRkZWZhdWx0ID09IDIgPyAnc2VsZWN0ZWQ9InNlbGVjdGVkIicgOiAnJykgLiAnID4nIC4gJHpicC0+bGFuZ1sncG9zdF9zdGF0dXNfbmFtZSddWycyJ10gLiAnPC9vcHRpb24+JzsNCiAgICB9DQogICAgJHMgLj0gJzxvcHRpb24gdmFsdWU9IjAiICcgLiAoJGRlZmF1bHQgPT0gMCA/ICdzZWxlY3RlZD0ic2VsZWN0ZWQiJyA6ICcnKSAuICcgPicgLiAkemJwLT5sYW5nWydwb3N0X3N0YXR1c19uYW1lJ11bJzAnXSAuICc8L29wdGlvbj4nOw0KICAgICRzIC49ICc8b3B0aW9uIHZhbHVlPSIxIiAnIC4gKCRkZWZhdWx0ID09IDEgPyAnc2VsZWN0ZWQ9InNlbGVjdGVkIicgOiAnJykgLiAnID4nIC4gJHpicC0+bGFuZ1sncG9zdF9zdGF0dXNfbmFtZSddWycxJ10gLiAnPC9vcHRpb24+JzsNCiAgICBpZiAoJHpicC0+Q2hlY2tSaWdodHMoJ0FydGljbGVBbGwnKSkgew0KICAgICAgICAkcyAuPSAnPG9wdGlvbiB2YWx1ZT0iMiIgJyAuICgkZGVmYXVsdCA9PSAyID8gJ3NlbGVjdGVkPSJzZWxlY3RlZCInIDogJycpIC4gJyA+JyAuICR6YnAtPmxhbmdbJ3Bvc3Rfc3RhdHVzX25hbWUnXVsnMiddIC4gJzwvb3B0aW9uPic7DQogICAgfQ0KDQogICAgcmV0dXJuICRzOw0KfQ0KDQovKioNCiAqIOWIm+W7ukRpduaooeWdly4NCiAqDQogKiBAcGFyYW0gJG0NCiAqIEBwYXJhbSBib29sICRidXR0b24NCiAqLw0KZnVuY3Rpb24gQ3JlYXRlTW9kdWxlRGl2KCRtLCAkYnV0dG9uID0gdHJ1ZSkNCnsNCiAgICBnbG9iYWwgJHpicDsNCg0KICAgIGVjaG8gJzxkaXYgY2xhc3M9IndpZGdldCB3aWRnZXRfc291cmNlXycgLiAkbS0+U291cmNlVHlwZSAuICcgd2lkZ2V0X2lkXycgLiAkbS0+RmlsZU5hbWUgLiAnIj4nOw0KICAgIGVjaG8gJzxkaXYgY2xhc3M9IndpZGdldC10aXRsZSI+PGltZyBjbGFzcz0ibW9yZS1hY3Rpb24iIHdpZHRoPSIxNiIgc3JjPSIuLi9pbWFnZS9hZG1pbi9icmljay5wbmciIGFsdD0iIiAvPicgLiAoKCRtLT5Tb3VyY2VUeXBlICE9ICd0aGVtZWluY2x1ZGUnKSA/ICRtLT5OYW1lIDogJG0tPkZpbGVOYW1lKSAuICcnOw0KDQogICAgaWYgKCRidXR0b24pIHsNCiAgICAgICAgaWYgKCRtLT5Tb3VyY2VUeXBlICE9ICd0aGVtZWluY2x1ZGUnKSB7DQogICAgICAgICAgICBlY2hvICc8c3BhbiBjbGFzcz0id2lkZ2V0LWFjdGlvbiI+PGEgaHJlZj0iLi4vY21kLnBocD9hY3Q9TW9kdWxlRWR0JmFtcDtpZD0nIC4gJG0tPklEIC4gJyI+PGltZyBjbGFzcz0iZWRpdC1hY3Rpb24iIHNyYz0iLi4vaW1hZ2UvYWRtaW4vYnJpY2tfZWRpdC5wbmciIGFsdD0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydlZGl0J10gLiAnIiB0aXRsZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydlZGl0J10gLiAnIiB3aWR0aD0iMTYiIC8+PC9hPic7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICBlY2hvICc8c3BhbiBjbGFzcz0id2lkZ2V0LWFjdGlvbiI+PGEgaHJlZj0iLi4vY21kLnBocD9hY3Q9TW9kdWxlRWR0JmFtcDtzb3VyY2U9dGhlbWVpbmNsdWRlXycgLiAkemJwLT50aGVtZSAuICcmYW1wO2ZpbGVuYW1lPScgLiAkbS0+RmlsZU5hbWUgLiAnIj48aW1nIGNsYXNzPSJlZGl0LWFjdGlvbiIgc3JjPSIuLi9pbWFnZS9hZG1pbi9icmlja19lZGl0LnBuZyIgYWx0PSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2VkaXQnXSAuICciIHRpdGxlPSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2VkaXQnXSAuICciIHdpZHRoPSIxNiIgLz48L2E+JzsNCiAgICAgICAgICAgIGVjaG8gJyZuYnNwOzxhIG9uY2xpY2s9InJldHVybiB3aW5kb3cuY29uZmlybShcJycgLiAkemJwLT5sYW5nWydtc2cnXVsnY29uZmlybV9vcGVyYXRpbmcnXSAuICdcJyk7IiBocmVmPSInIC4gQnVpbGRTYWZlQ21kVVJMKCdhY3Q9TW9kdWxlRGVsJmFtcDtzb3VyY2U9dGhlbWUmYW1wO2ZpbGVuYW1lPScgLiAkbS0+RmlsZU5hbWUpIC4gJyI+PGltZyBzcmM9Ii4uL2ltYWdlL2FkbWluL2RlbGV0ZS5wbmciIGFsdD0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydkZWwnXSAuICciIHRpdGxlPSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2RlbCddIC4gJyIgd2lkdGg9IjE2IiAvPjwvYT4nOw0KICAgICAgICB9DQogICAgICAgIGlmICgkbS0+U291cmNlVHlwZSA9PSAndXNlcicpIHsNCiAgICAgICAgICAgIGVjaG8gJyZuYnNwOzxhIG9uY2xpY2s9InJldHVybiB3aW5kb3cuY29uZmlybShcJycgLiAkemJwLT5sYW5nWydtc2cnXVsnY29uZmlybV9vcGVyYXRpbmcnXSAuICdcJyk7IiBocmVmPSInIC4gQnVpbGRTYWZlQ21kVVJMKCdhY3Q9TW9kdWxlRGVsJmFtcDtpZD0nIC4gJG0tPklEKSAuICciPjxpbWcgc3JjPSIuLi9pbWFnZS9hZG1pbi9kZWxldGUucG5nIiBhbHQ9IicgLiAkemJwLT5sYW5nWydtc2cnXVsnZGVsJ10gLiAnIiB0aXRsZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydkZWwnXSAuICciIHdpZHRoPSIxNiIgLz48L2E+JzsNCiAgICAgICAgfQ0KICAgICAgICBlY2hvICc8L3NwYW4+JzsNCiAgICB9DQoNCiAgICBlY2hvICc8L2Rpdj4nOw0KICAgIGVjaG8gJzxkaXYgY2xhc3M9ImZ1bmlkIiBzdHlsZT0iZGlzcGxheTpub25lIj4nIC4gJG0tPkZpbGVOYW1lIC4gJzwvZGl2Pic7DQogICAgZWNobyAnPC9kaXY+JzsNCg0KfQ0KDQovKioNCiAqIOeUn+aIkOaXtuWMunNlbGVjdOihqOWNlS4NCiAqDQogKiBAcGFyYW0gJGRlZmF1bHQNCiAqDQogKiBAcmV0dXJuIHN0cmluZw0KICovDQpmdW5jdGlvbiBDcmVhdGVPcHRpb25zT2ZUaW1lWm9uZSgkZGVmYXVsdCkNCnsNCiAgICAkcyA9ICcnOw0KICAgICR0eiA9IGFycmF5KA0KICAgICAgICAnRXRjL0dNVCsxMicgICAgICAgICAgICAgICAgICAgICA9PiAnLTEyOjAwJywNCiAgICAgICAgJ1BhY2lmaWMvTWlkd2F5JyAgICAgICAgICAgICAgICAgPT4gJy0xMTowMCcsDQogICAgICAgICdQYWNpZmljL0hvbm9sdWx1JyAgICAgICAgICAgICAgID0+ICctMTA6MDAnLA0KICAgICAgICAnQW1lcmljYS9BbmNob3JhZ2UnICAgICAgICAgICAgICA9PiAnLTA5OjAwJywNCiAgICAgICAgJ0FtZXJpY2EvTG9zX0FuZ2VsZXMnICAgICAgICAgICAgPT4gJy0wODowMCcsDQogICAgICAgICdBbWVyaWNhL0RlbnZlcicgICAgICAgICAgICAgICAgID0+ICctMDc6MDAnLA0KICAgICAgICAnQW1lcmljYS9UZWd1Y2lnYWxwYScgICAgICAgICAgICA9PiAnLTA2OjAwJywNCiAgICAgICAgJ0FtZXJpY2EvTmV3X1lvcmsnICAgICAgICAgICAgICAgPT4gJy0wNTowMCcsDQogICAgICAgICdBbWVyaWNhL0hhbGlmYXgnICAgICAgICAgICAgICAgID0+ICctMDQ6MDAnLA0KICAgICAgICAnQW1lcmljYS9BcmdlbnRpbmEvQnVlbm9zX0FpcmVzJyA9PiAnLTAzOjAwJywNCiAgICAgICAgJ0F0bGFudGljL1NvdXRoX0dlb3JnaWEnICAgICAgICAgPT4gJy0wMjowMCcsDQogICAgICAgICdBdGxhbnRpYy9Bem9yZXMnICAgICAgICAgICAgICAgID0+ICctMDE6MDAnLA0KICAgICAgICAnVVRDJyAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnMDA6MDAnLA0KICAgICAgICAnRXVyb3BlL0JlcmxpbicgICAgICAgICAgICAgICAgICA9PiAnKzAxOjAwJywNCiAgICAgICAgJ0V1cm9wZS9Tb2ZpYScgICAgICAgICAgICAgICAgICAgPT4gJyswMjowMCcsDQogICAgICAgICdBZnJpY2EvTmFpcm9iaScgICAgICAgICAgICAgICAgID0+ICcrMDM6MDAnLA0KICAgICAgICAnRXVyb3BlL01vc2NvdycgICAgICAgICAgICAgICAgICA9PiAnKzA0OjAwJywNCiAgICAgICAgJ0FzaWEvS2FyYWNoaScgICAgICAgICAgICAgICAgICAgPT4gJyswNTowMCcsDQogICAgICAgICdBc2lhL0RoYWthJyAgICAgICAgICAgICAgICAgICAgID0+ICcrMDY6MDAnLA0KICAgICAgICAnQXNpYS9CYW5na29rJyAgICAgICAgICAgICAgICAgICA9PiAnKzA3OjAwJywNCiAgICAgICAgJ0FzaWEvU2hhbmdoYWknICAgICAgICAgICAgICAgICAgPT4gJyswODowMCcsDQogICAgICAgICdBc2lhL1Rva3lvJyAgICAgICAgICAgICAgICAgICAgID0+ICcrMDk6MDAnLA0KICAgICAgICAnUGFjaWZpYy9HdWFtJyAgICAgICAgICAgICAgICAgICA9PiAnKzEwOjAwJywNCiAgICAgICAgJ0F1c3RyYWxpYS9TeWRuZXknICAgICAgICAgICAgICAgPT4gJysxMTowMCcsDQogICAgICAgICdQYWNpZmljL0ZpamknICAgICAgICAgICAgICAgICAgID0+ICcrMTI6MDAnLA0KICAgICAgICAnUGFjaWZpYy9Ub25nYXRhcHUnICAgICAgICAgICAgICA9PiAnKzEzOjAwJywNCiAgICApOw0KDQogICAgZm9yZWFjaCAoJHR6IGFzICRrZXkgPT4gJHZhbHVlKSB7DQogICAgICAgICRzIC49ICc8b3B0aW9uIHZhbHVlPSInIC4gJGtleSAuICciICcgLiAoJGRlZmF1bHQgPT0gJGtleSA/ICdzZWxlY3RlZD0ic2VsZWN0ZWQiJyA6ICcnKSAuICcgPicgLiAka2V5IC4gJyAnIC4gJHZhbHVlIC4gJzwvb3B0aW9uPic7DQogICAgfQ0KDQogICAgcmV0dXJuICRzOw0KfQ0KDQovKioNCiAqIOeUn+aIkOivreiogHNlbGVjdOihqOWNlS4NCiAqDQogKiBAcGFyYW0gJGRlZmF1bHQNCiAqDQogKiBAcmV0dXJuIHN0cmluZw0KICovDQpmdW5jdGlvbiBDcmVhdGVPcHRpb25zT2ZMYW5nKCRkZWZhdWx0KQ0Kew0KICAgIGdsb2JhbCAkemJwOw0KICAgICRzID0gJyc7DQogICAgJGRpciA9ICR6YnAtPnVzZXJzZGlyIC4gJ2xhbmd1YWdlLyc7DQogICAgJGZpbGVzID0gR2V0RmlsZXNJbkRpcigkZGlyLCAncGhwJyk7DQogICAgZm9yZWFjaCAoJGZpbGVzIGFzICRmKSB7DQogICAgICAgICRuID0gYmFzZW5hbWUoJGYsICcucGhwJyk7DQogICAgICAgIC8vZml4IDEuMyB0byAxLjQgd2FybmluZw0KICAgICAgICBpZiAoJ1NpbXBDaGluZXNlJyA9PSAkbikgew0KICAgICAgICAgICAgY29udGludWU7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoJ1RyYWRDaGluZXNlJyA9PSAkbikgew0KICAgICAgICAgICAgY29udGludWU7DQogICAgICAgIH0NCg0KICAgICAgICAkdCA9IHJlcXVpcmUgJGY7DQogICAgICAgICRzIC49ICc8b3B0aW9uIHZhbHVlPSInIC4gJG4gLiAnIiAnIC4gKCRkZWZhdWx0ID09ICRuID8gJ3NlbGVjdGVkPSJzZWxlY3RlZCInIDogJycpIC4gJyA+JyAuICR0WydsYW5nX25hbWUnXSAuICcgKCcgLiAkbiAuICcpJyAuICc8L29wdGlvbj4nOw0KICAgIH0NCg0KICAgIHJldHVybiAkczsNCn0NCg0KLyoqDQogKiDnlJ/miJBHdWVzdFR5cGXooajljZUuDQogKg0KICogQHBhcmFtICRkZWZhdWx0DQogKg0KICogQHJldHVybiBzdHJpbmcNCiAqLw0KZnVuY3Rpb24gQ3JlYXRlT3B0aW9uc09mR3Vlc3RJUFR5cGUoJGRlZmF1bHQpDQp7DQogICAgZ2xvYmFsICR6YnA7DQogICAgJHMgPSAnJzsNCiAgICAkdHogPSBhcnJheSgNCiAgICAgICAgJ1JFTU9URV9BRERSJyAgICAgICAgICAgICAgICAgICAgPT4gJ1JFTU9URV9BRERSICgnIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2RlZmF1bHQnXSAuICcpJywNCiAgICAgICAgJ0hUVFBfWF9SRUFMX0lQJyAgICAgICAgICAgICAgICAgPT4gJ0hUVFBfWF9SRUFMX0lQJywNCiAgICAgICAgJ0hUVFBfQ0xJRU5UX0lQJyAgICAgICAgICAgICAgICAgPT4gJ0hUVFBfQ0xJRU5UX0lQJywNCiAgICAgICAgJ0hUVFBfWF9GT1JXQVJERURfRk9SJyAgICAgICAgICAgPT4gJ0hUVFBfWF9GT1JXQVJERURfRk9SJywNCiAgICAgICAgJ0hUVFBfQ0ZfQ09OTkVDVElOR19JUCcgICAgICAgICAgPT4gJ0hUVFBfQ0ZfQ09OTkVDVElOR19JUCcsDQogICAgKTsNCg0KICAgIGZvcmVhY2ggKCR0eiBhcyAka2V5ID0+ICR2YWx1ZSkgew0KICAgICAgICAkcyAuPSAnPG9wdGlvbiB2YWx1ZT0iJyAuICRrZXkgLiAnIiAnIC4gKCRkZWZhdWx0ID09ICRrZXkgPyAnc2VsZWN0ZWQ9InNlbGVjdGVkIicgOiAnJykgLiAnID4nIC4gJHZhbHVlIC4gJzwvb3B0aW9uPic7DQogICAgfQ0KDQogICAgcmV0dXJuICRzOw0KfQ0KDQovLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KLyoqDQogKiDlkI7lj7DnrqHnkIbmmL7npLrnvZHnq5nkv6Hmga8uDQogKi8NCmZ1bmN0aW9uIEFkbWluX1NpdGVJbmZvKCkNCnsNCiAgICBnbG9iYWwgJHpicDsNCg0KICAgICRlY2hvU3RhdGlzdGljID0gZmFsc2U7DQoNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJkaXZIZWFkZXIiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnaW5mb19pbnRybyddIC4gJzwvZGl2Pic7DQogICAgZWNobyAnPGRpdiBjbGFzcz0iU3ViTWVudSI+JzsNCiAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9BZG1pbl9TaXRlSW5mb19TdWJNZW51J10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICRmcG5hbWUoKTsNCiAgICB9DQogICAgZWNobyAnPC9kaXY+JzsNCiAgICBlY2hvICc8ZGl2IGlkPSJkaXZNYWluMiI+JzsNCg0KICAgIGVjaG8gJzx0YWJsZSBjbGFzcz0idGFibGVGdWxsIHRhYmxlQm9yZGVyIHRhYmxlX3N0cmlwZWQgdGFibGVfaG92ZXIiIGlkPSJ0YlN0YXRpc3RpYyI+PHRyPjx0aCBjb2xzcGFuPSI0IiAgc2NvcGU9ImNvbCI+Jm5ic3A7JyAuICR6YnAtPmxhbmdbJ21zZyddWydzaXRlX2FuYWx5emUnXTsNCiAgICBpZiAoJHpicC0+Q2hlY2tSaWdodHMoJ3Jvb3QnKSkgew0KICAgICAgICBlY2hvICcmbmJzcDs8YSBocmVmPSJqYXZhc2NyaXB0OnN0YXRpc3RpYyhcJycgLiBCdWlsZFNhZmVDbWRVUkwoJ2FjdD1taXNjJnR5cGU9c3RhdGlzdGljJmZvcmNlZD0xJykgLiAnXCcpOyIgaWQ9InN0YXRpc3RpYyI+WycgLiAkemJwLT5sYW5nWydtc2cnXVsncmVmcmVzaF9jYWNoZSddIC4gJ108L2E+JzsNCiAgICB9DQogICAgZWNobyAnIDxpbWcgaWQ9InN0YXRsb2FkaW5nIiBzdHlsZT0iZGlzcGxheTpub25lIiBzcmM9Ii4uL2ltYWdlL2FkbWluL2xvYWRpbmcuZ2lmIiBhbHQ9IiIvPjwvdGg+PC90cj4nOw0KDQogICAgaWYgKCh0aW1lKCkgLSAoaW50KSAkemJwLT5jYWNoZS0+cmVsb2FkX3N0YXRpc3RpY190aW1lKSA+ICgyMyAqIDYwICogNjApKSB7DQogICAgICAgIGVjaG8gJzxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpeyBzdGF0aXN0aWMoXCcnIC4gQnVpbGRTYWZlQ21kVVJMKCdhY3Q9bWlzYyZ0eXBlPXN0YXRpc3RpYycpIC4gJ1wnKTsgfSk7PC9zY3JpcHQ+JzsNCiAgICB9IGVsc2Ugew0KICAgICAgICAkZWNob1N0YXRpc3RpYyA9IHRydWU7DQogICAgICAgICRyID0gJHpicC0+Y2FjaGUtPnJlbG9hZF9zdGF0aXN0aWM7DQogICAgICAgIGlmICghJHpicC0+Q2hlY2tSaWdodHMoJ3Jvb3QnKSkgew0KICAgICAgICAgICAgJGEgPSBleHBsb2RlKCc8IS0tZGVidWdfbW9kZV9tb3JlaW5mby0tPicsICRyKTsNCiAgICAgICAgICAgICRyID0gJGFbMF07DQogICAgICAgIH0NCiAgICAgICAgJHIgPSBzdHJfcmVwbGFjZSgneyR6YnAtPnVzZXItPk5hbWV9JywgJHpicC0+dXNlci0+TmFtZSwgJHIpOw0KICAgICAgICAkciA9IHN0cl9yZXBsYWNlKCd7JHpicC0+dGhlbWV9JywgJHpicC0+dGhlbWUsICRyKTsNCiAgICAgICAgJHIgPSBzdHJfcmVwbGFjZSgneyR6YnAtPnN0eWxlfScsICR6YnAtPnN0eWxlLCAkcik7DQogICAgICAgICRyID0gc3RyX3JlcGxhY2UoJ3skc3lzdGVtX2Vudmlyb25tZW50fScsIEdldEVudmlyb25tZW50KCksICRyKTsNCiAgICAgICAgJGFwcCA9ICR6YnAtPkxvYWRBcHAoJ3BsdWdpbicsJ0FwcENlbnRyZScpOw0KICAgICAgICAkc3YgPSBaQ19WRVJTSU9OX0ZVTEw7DQogICAgICAgIGlmICgkYXBwLT5pc2xvYWRlZCA9PSB0cnVlICYmICRhcHAtPklzVXNlZCgpKSB7DQogICAgICAgICAgICAkc3YgLj0gJzsgQXBwQ2VudHJlJyAuICRhcHAtPnZlcnNpb247DQogICAgICAgIH0NCiAgICAgICAgJHIgPSBzdHJfcmVwbGFjZSgneyR6YnAtPnZlcnNpb259JywgJHN2LCAkcik7DQogICAgICAgICRyID0gc3RyX3JlcGxhY2UoJ3skdGhlbWVfdmVyc2lvbn0nLCAnKHYnIC4gJHpicC0+dGhlbWVhcHAtPnZlcnNpb24gLiAnKScsICRyKTsNCiAgICAgICAgZWNobyAkcjsNCiAgICB9DQoNCiAgICBlY2hvICc8L3RhYmxlPic7DQoNCiAgICBlY2hvICc8dGFibGUgY2xhc3M9InRhYmxlRnVsbCB0YWJsZUJvcmRlciB0YWJsZV9zdHJpcGVkIHRhYmxlX2hvdmVyIiBpZD0idGJVcGRhdGVJbmZvIj48dHI+PHRoPiZuYnNwOycgLiAkemJwLT5sYW5nWydtc2cnXVsnbGF0ZXN0X25ld3MnXTsNCiAgICBpZiAoJHpicC0+Q2hlY2tSaWdodHMoJ3Jvb3QnKSkgew0KICAgICAgICBlY2hvICcmbmJzcDs8YSBocmVmPSJqYXZhc2NyaXB0OnVwZGF0ZWluZm8oXCcnIC4gQnVpbGRTYWZlQ21kVVJMKCdhY3Q9bWlzYyZ0eXBlPXVwZGF0ZWluZm8nKSAuICdcJyk7Ij5bJyAuICR6YnAtPmxhbmdbJ21zZyddWydyZWZyZXNoJ10gLiAnXTwvYT4nOw0KICAgIH0NCiAgICBlY2hvICcgPGltZyBpZD0iaW5mb2xvYWRpbmciIHN0eWxlPSJkaXNwbGF5Om5vbmUiIHNyYz0iLi4vaW1hZ2UvYWRtaW4vbG9hZGluZy5naWYiIGFsdD0iIi8+PC90aD48L3RyPic7DQoNCiAgICBpZiAoKHRpbWUoKSAtIChpbnQpICR6YnAtPmNhY2hlLT5yZWxvYWRfdXBkYXRlaW5mb190aW1lKSA+ICg0NyAqIDYwICogNjApICYmICR6YnAtPkNoZWNrUmlnaHRzKCdyb290JykgJiYgJGVjaG9TdGF0aXN0aWMgPT0gdHJ1ZSkgew0KICAgICAgICBlY2hvICc8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+JChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXsgdXBkYXRlaW5mbyhcJycgLiBCdWlsZFNhZmVDbWRVUkwoJ2FjdD1taXNjJnR5cGU9dXBkYXRlaW5mbycpIC4gJ1wnKTsgfSk7PC9zY3JpcHQ+JzsNCiAgICB9IGVsc2Ugew0KICAgICAgICBlY2hvICR6YnAtPmNhY2hlLT5yZWxvYWRfdXBkYXRlaW5mbzsNCiAgICB9DQoNCiAgICBlY2hvICc8L3RhYmxlPic7DQoNCiAgICBlY2hvICc8L2Rpdj4nOw0KDQogICAgJHMgPSBmaWxlX2dldF9jb250ZW50cygkemJwLT5wYXRoIC4gInpiX3N5c3RlbS9kZWZlbmQvdGhhbmtzLmh0bWwiKTsNCiAgICAkcyA9IHN0cl9yZXBsYWNlKCdaLUJsb2dQSFDnvZHnq5nlkoznqIvluo/lvIDlj5EnLCAkemJwLT5sYW5nWydtc2cnXVsnZGV2ZWxvcF9pbnRybyddLCAkcyk7DQogICAgJHMgPSBzdHJfcmVwbGFjZSgn56iL5bqPJywgJHpicC0+bGFuZ1snbXNnJ11bJ3Byb2dyYW0nXSwgJHMpOw0KICAgICRzID0gc3RyX3JlcGxhY2UoJ+eVjOmdoicsICR6YnAtPmxhbmdbJ21zZyddWydpbnRlcmZhY2UnXSwgJHMpOw0KICAgICRzID0gc3RyX3JlcGxhY2UoJ+aUr+aMgScsICR6YnAtPmxhbmdbJ21zZyddWydzdXBwb3J0J10sICRzKTsNCiAgICAkcyA9IHN0cl9yZXBsYWNlKCfmhJ/osKInLCAkemJwLT5sYW5nWydtc2cnXVsndGhhbmtzJ10sICRzKTsNCiAgICAkcyA9IHN0cl9yZXBsYWNlKCfnm7jlhbPpk77mjqUnLCAkemJwLT5sYW5nWydtc2cnXVsnd2Vic2l0ZSddLCAkcyk7DQogICAgZWNobyAkczsNCiAgICBlY2hvICc8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+QWN0aXZlVG9wTWVudSgidG9wbWVudTEiKTs8L3NjcmlwdD4nOw0KICAgIGVjaG8gJzxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5BZGRIZWFkZXJJY29uKCInIC4gJHpicC0+aG9zdCAuICd6Yl9zeXN0ZW0vaW1hZ2UvY29tbW9uL2hvbWVfMzIucG5nJyAuICciKTs8L3NjcmlwdD4nOw0KfQ0KDQovLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KLyoqDQogKiDlkI7lj7Dmlofnq6DnrqHnkIYuDQogKi8NCmZ1bmN0aW9uIEFkbWluX0FydGljbGVNbmcoKQ0Kew0KICAgIGdsb2JhbCAkemJwOw0KDQogICAgZWNobyAnPGRpdiBjbGFzcz0iZGl2SGVhZGVyIj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2FydGljbGVfbWFuYWdlJ10gLiAnPC9kaXY+JzsNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJTdWJNZW51Ij4nOw0KICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX0FkbWluX0FydGljbGVNbmdfU3ViTWVudSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAkZnBuYW1lKCk7DQogICAgfQ0KICAgIGVjaG8gJzwvZGl2Pic7DQogICAgZWNobyAnPGRpdiBpZD0iZGl2TWFpbjIiPic7DQogICAgZWNobyAnPGZvcm0gY2xhc3M9InNlYXJjaCIgaWQ9InNlYXJjaCIgbWV0aG9kPSJwb3N0IiBhY3Rpb249IiMiPic7DQoNCiAgICBlY2hvICc8cD4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3NlYXJjaCddIC4gJzombmJzcDsmbmJzcDsnIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2NhdGVnb3J5J10gLiAnIDxzZWxlY3QgY2xhc3M9ImVkaXQiIHNpemU9IjEiIG5hbWU9ImNhdGVnb3J5IiBzdHlsZT0id2lkdGg6MTQwcHg7IiA+PG9wdGlvbiB2YWx1ZT0iIj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2FueSddIC4gJzwvb3B0aW9uPic7DQogICAgZm9yZWFjaCAoJHpicC0+Y2F0ZWdvcmllc2J5b3JkZXIgYXMgJGlkID0+ICRjYXRlKSB7DQogICAgICAgIGVjaG8gJzxvcHRpb24gdmFsdWU9IicgLiAkY2F0ZS0+SUQgLiAnIj4nIC4gJGNhdGUtPlN5bWJvbE5hbWUgLiAnPC9vcHRpb24+JzsNCiAgICB9DQogICAgZWNobyAnPC9zZWxlY3Q+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7JyAuICR6YnAtPmxhbmdbJ21zZyddWyd0eXBlJ10gLiAnIDxzZWxlY3QgY2xhc3M9ImVkaXQiIHNpemU9IjEiIG5hbWU9InN0YXR1cyIgc3R5bGU9IndpZHRoOjEwMHB4OyIgPjxvcHRpb24gdmFsdWU9IiI+JyAuICR6YnAtPmxhbmdbJ21zZyddWydhbnknXSAuICc8L29wdGlvbj4gPG9wdGlvbiB2YWx1ZT0iMCIgPicgLiAkemJwLT5sYW5nWydwb3N0X3N0YXR1c19uYW1lJ11bJzAnXSAuICc8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxIiA+JyAuICR6YnAtPmxhbmdbJ3Bvc3Rfc3RhdHVzX25hbWUnXVsnMSddIC4gJzwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjIiID4nIC4gJHpicC0+bGFuZ1sncG9zdF9zdGF0dXNfbmFtZSddWycyJ10gLiAnPC9vcHRpb24+PC9zZWxlY3Q+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7DQoJPGxhYmVsPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0iaXN0b3AiIHZhbHVlPSJUcnVlIi8+Jm5ic3A7JyAuICR6YnAtPmxhbmdbJ21zZyddWyd0b3AnXSAuICc8L2xhYmVsPiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOw0KCTxpbnB1dCBuYW1lPSJzZWFyY2giIHN0eWxlPSJ3aWR0aDoyNTBweDsiIHR5cGU9InRleHQiIHZhbHVlPSIiIC8+ICZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOzxpbnB1dCB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidXR0b24iIHZhbHVlPSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3N1Ym1pdCddIC4gJyIvPjwvcD4nOw0KICAgIGVjaG8gJzwvZm9ybT4nOw0KDQogICAgJHAgPSBuZXcgUGFnZWJhcigneyVob3N0JX16Yl9zeXN0ZW0vY21kLnBocD9hY3Q9QXJ0aWNsZU1uZ3smcGFnZT0lcGFnZSV9eyZzdGF0dXM9JXN0YXR1cyV9eyZpc3RvcD0laXN0b3AlfXsmY2F0ZWdvcnk9JWNhdGVnb3J5JX17JnNlYXJjaD0lc2VhcmNoJX0nLCBmYWxzZSk7DQogICAgJHAtPlBhZ2VDb3VudCA9ICR6YnAtPm1hbmFnZWNvdW50Ow0KICAgICRwLT5QYWdlTm93ID0gKGludCkgR2V0VmFycygncGFnZScsICdHRVQnKSA9PSAwID8gMSA6IChpbnQpIEdldFZhcnMoJ3BhZ2UnLCAnR0VUJyk7DQogICAgaWYgKEdldFZhcnMoJ3NlYXJjaCcpICE9PSBHZXRWYXJzKCdzZWFyY2gnLCAnR0VUJykpIHsNCiAgICAgICAgJHAtPlBhZ2VOb3cgPSAxOw0KICAgIH0NCiAgICAkcC0+UGFnZUJhckNvdW50ID0gJHpicC0+cGFnZWJhcmNvdW50Ow0KDQogICAgJHAtPlVybFJ1bGUtPlJ1bGVzWyd7JWNhdGVnb3J5JX0nXSA9IEdldFZhcnMoJ2NhdGVnb3J5Jyk7DQogICAgJHAtPlVybFJ1bGUtPlJ1bGVzWyd7JXNlYXJjaCV9J10gPSByYXd1cmxlbmNvZGUoR2V0VmFycygnc2VhcmNoJykpOw0KICAgICRwLT5VcmxSdWxlLT5SdWxlc1sneyVzdGF0dXMlfSddID0gR2V0VmFycygnc3RhdHVzJyk7DQogICAgJHAtPlVybFJ1bGUtPlJ1bGVzWyd7JWlzdG9wJX0nXSA9IChib29sKSBHZXRWYXJzKCdpc3RvcCcpOw0KDQogICAgJHcgPSBhcnJheSgpOw0KICAgIGlmICghJHpicC0+Q2hlY2tSaWdodHMoJ0FydGljbGVBbGwnKSkgew0KICAgICAgICAkd1tdID0gYXJyYXkoJz0nLCAnbG9nX0F1dGhvcklEJywgJHpicC0+dXNlci0+SUQpOw0KICAgIH0NCiAgICBpZiAoR2V0VmFycygnc2VhcmNoJykpIHsNCiAgICAgICAgJHdbXSA9IGFycmF5KCdzZWFyY2gnLCAnbG9nX0NvbnRlbnQnLCAnbG9nX0ludHJvJywgJ2xvZ19UaXRsZScsIEdldFZhcnMoJ3NlYXJjaCcpKTsNCiAgICB9DQogICAgaWYgKEdldFZhcnMoJ2lzdG9wJykpIHsNCiAgICAgICAgJHdbXSA9IGFycmF5KCc8PicsICdsb2dfSXN0b3AnLCAnMCcpOw0KICAgIH0NCiAgICBpZiAoR2V0VmFycygnc3RhdHVzJykgIT09IG51bGwgJiYgR2V0VmFycygnc3RhdHVzJykgIT09ICcnKSB7DQogICAgICAgICR3W10gPSBhcnJheSgnPScsICdsb2dfU3RhdHVzJywgKGludCkgR2V0VmFycygnc3RhdHVzJykpOw0KICAgIH0NCiAgICBpZiAoR2V0VmFycygnY2F0ZWdvcnknKSkgew0KICAgICAgICAkd1tdID0gYXJyYXkoJz0nLCAnbG9nX0NhdGVJRCcsIEdldFZhcnMoJ2NhdGVnb3J5JykpOw0KICAgIH0NCg0KICAgICRzID0gJyc7DQogICAgJG9yID0gYXJyYXkoJ2xvZ19Qb3N0VGltZScgPT4gJ0RFU0MnKTsNCiAgICAkbCA9IGFycmF5KCgkcC0+UGFnZU5vdyAtIDEpICogJHAtPlBhZ2VDb3VudCwgJHAtPlBhZ2VDb3VudCk7DQogICAgJG9wID0gYXJyYXkoJ3BhZ2ViYXInID0+ICRwKTsNCg0KICAgICR0eXBlID0gbnVsbDsNCiAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9MYXJnZURhdGFfQXJ0aWNsZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAkZnByZXR1cm4gPSAkZnBuYW1lKCRzLCAkdywgJG9yLCAkbCwgJG9wLCAkdHlwZSk7DQogICAgfQ0KDQogICAgJGFycmF5ID0gJHpicC0+R2V0QXJ0aWNsZUxpc3QoDQogICAgICAgICRzLA0KICAgICAgICAkdywNCiAgICAgICAgJG9yLA0KICAgICAgICAkbCwNCiAgICAgICAgJG9wLA0KICAgICAgICBmYWxzZQ0KICAgICk7DQoNCiAgICBlY2hvICc8dGFibGUgYm9yZGVyPSIxIiBjbGFzcz0idGFibGVGdWxsIHRhYmxlQm9yZGVyIHRhYmxlX2hvdmVyIHRhYmxlX3N0cmlwZWQgdGFibGVCb3JkZXItdGhjZW50ZXIiPic7DQoNCiAgICAkdGFibGVzID0gJyc7DQogICAgJHRhYmxldGhzID0gYXJyYXkoKTsNCiAgICAkdGFibGV0aHNbXSA9ICc8dHI+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydpZCddIC4gJzwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydjYXRlZ29yeSddIC4gJzwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydhdXRob3InXSAuICc8L3RoPic7DQogICAgJHRhYmxldGhzW10gPSAnPHRoPicgLiAkemJwLT5sYW5nWydtc2cnXVsndGl0bGUnXSAuICc8L3RoPic7DQogICAgJHRhYmxldGhzW10gPSAnPHRoPicgLiAkemJwLT5sYW5nWydtc2cnXVsnZGF0ZSddIC4gJzwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydjb21tZW50J10gLiAnPC90aD4nOw0KICAgICR0YWJsZXRoc1tdID0gJzx0aD4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3N0YXR1cyddIC4gJzwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+PC90aD4nOw0KICAgICR0YWJsZXRoc1tdID0gJzwvdHI+JzsNCg0KICAgIGZvcmVhY2ggKCRhcnJheSBhcyAkYXJ0aWNsZSkgew0KICAgICAgICAkdGFibGV0ZHMgPSBhcnJheSgpOyAvL3RhYmxlIHN0cmluZw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dHI+JzsNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPHRkIGNsYXNzPSJ0ZDUiPicgLiAkYXJ0aWNsZS0+SUQgLiAnPC90ZD4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQgY2xhc3M9InRkMTAiPicgLiAkYXJ0aWNsZS0+Q2F0ZWdvcnktPk5hbWUgLiAnPC90ZD4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQgY2xhc3M9InRkMTAiPicgLiAkYXJ0aWNsZS0+QXV0aG9yLT5OYW1lIC4gJzwvdGQ+JzsNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPHRkPjxhIGhyZWY9IicgLiAkYXJ0aWNsZS0+VXJsIC4gJyIgdGFyZ2V0PSJfYmxhbmsiPjxpbWcgc3JjPSIuLi9pbWFnZS9hZG1pbi9saW5rLnBuZyIgYWx0PSIiIHRpdGxlPSIiIHdpZHRoPSIxNiIgLz48L2E+ICcgLiAkYXJ0aWNsZS0+VGl0bGUgLiAnPC90ZD4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQgY2xhc3M9InRkMjAiPicgLiAkYXJ0aWNsZS0+VGltZSgpIC4gJzwvdGQ+JzsNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPHRkIGNsYXNzPSJ0ZDUiPicgLiAkYXJ0aWNsZS0+Q29tbU51bXMgLiAnPC90ZD4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQgY2xhc3M9InRkNSI+JyAuICgkYXJ0aWNsZS0+SXNUb3AgPyAkemJwLT5sYW5nWydtc2cnXVsndG9wJ10gLiAnfCcgOiAnJykgLiAkYXJ0aWNsZS0+U3RhdHVzTmFtZSAuICc8L3RkPic7DQogICAgICAgICR0YWJsZXRkc1tdID0gJzx0ZCBjbGFzcz0idGQxMCB0ZENlbnRlciI+JyAuDQogICAgICAgICc8YSBocmVmPSIuLi9jbWQucGhwP2FjdD1BcnRpY2xlRWR0JmFtcDtpZD0nIC4gJGFydGljbGUtPklEIC4gJyI+PGltZyBzcmM9Ii4uL2ltYWdlL2FkbWluL3BhZ2VfZWRpdC5wbmciIGFsdD0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydlZGl0J10gLiAnIiB0aXRsZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydlZGl0J10gLiAnIiB3aWR0aD0iMTYiIC8+PC9hPicgLg0KICAgICAgICAnJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7JyAuDQogICAgICAgICc8YSBvbmNsaWNrPSJyZXR1cm4gd2luZG93LmNvbmZpcm0oXCcnIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2NvbmZpcm1fb3BlcmF0aW5nJ10gLiAnXCcpOyIgaHJlZj0iJyAuIEJ1aWxkU2FmZUNtZFVSTCgnYWN0PUFydGljbGVEZWwmYW1wO2lkPScgLiAkYXJ0aWNsZS0+SUQpIC4gJyI+PGltZyBzcmM9Ii4uL2ltYWdlL2FkbWluL2RlbGV0ZS5wbmciIGFsdD0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydkZWwnXSAuICciIHRpdGxlPSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2RlbCddIC4gJyIgd2lkdGg9IjE2IiAvPjwvYT4nIC4NCiAgICAgICAgJzwvdGQ+JzsNCg0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8L3RyPic7DQoNCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fQWRtaW5fQXJ0aWNsZU1uZ19UYWJsZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgLy/kvKDlhaUg5b2T5YmNcG9zdO+8jOW9k+WJjeihjO+8jOihqOWktA0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkYXJ0aWNsZSwgJHRhYmxldGRzLCAkdGFibGV0aHMpOw0KICAgICAgICB9DQoNCiAgICAgICAgJHRhYmxlcyAuPSBpbXBsb2RlKCR0YWJsZXRkcyk7DQogICAgfQ0KDQogICAgZWNobyBpbXBsb2RlKCR0YWJsZXRocykgLiAkdGFibGVzOw0KDQogICAgZWNobyAnPC90YWJsZT4nOw0KICAgIGVjaG8gJzxoci8+PHAgY2xhc3M9InBhZ2ViYXIiPic7DQoNCiAgICBmb3JlYWNoICgkcC0+QnV0dG9ucyBhcyAka2V5ID0+ICR2YWx1ZSkgew0KICAgICAgICBpZiAoJHAtPlBhZ2VOb3cgPT0gJGtleSkgew0KICAgICAgICAgICAgZWNobyAnPHNwYW4gY2xhc3M9Im5vdy1wYWdlIj4nIC4gJGtleSAuICc8L3NwYW4+Jm5ic3A7Jm5ic3A7JzsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGVjaG8gJzxhIGhyZWY9IicgLiAkdmFsdWUgLiAnIj4nIC4gJGtleSAuICc8L2E+Jm5ic3A7Jm5ic3A7JzsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGVjaG8gJzwvcD48L2Rpdj4nOw0KICAgIGVjaG8gJzxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5BY3RpdmVMZWZ0TWVudSgiYUFydGljbGVNbmciKTs8L3NjcmlwdD4nOw0KICAgIGVjaG8gJzxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5BZGRIZWFkZXJJY29uKCInIC4gJHpicC0+aG9zdCAuICd6Yl9zeXN0ZW0vaW1hZ2UvY29tbW9uL2FydGljbGVfMzIucG5nJyAuICciKTs8L3NjcmlwdD4nOw0KfQ0KDQovLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KLyoqDQogKiDlkI7lj7DpobXpnaLnrqHnkIYuDQogKi8NCmZ1bmN0aW9uIEFkbWluX1BhZ2VNbmcoKQ0Kew0KICAgIGdsb2JhbCAkemJwOw0KDQogICAgZWNobyAnPGRpdiBjbGFzcz0iZGl2SGVhZGVyIj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3BhZ2VfbWFuYWdlJ10gLiAnPC9kaXY+JzsNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJTdWJNZW51Ij4nOw0KICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX0FkbWluX1BhZ2VNbmdfU3ViTWVudSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAkZnBuYW1lKCk7DQogICAgfQ0KICAgIGVjaG8gJzwvZGl2Pic7DQogICAgZWNobyAnPGRpdiBpZD0iZGl2TWFpbjIiPic7DQogICAgZWNobyAnPCEtLTxmb3JtIGNsYXNzPSJzZWFyY2giIGlkPSJzZWFyY2giIG1ldGhvZD0icG9zdCIgYWN0aW9uPSIjIj48L2Zvcm0+LS0+JzsNCg0KICAgICRwID0gbmV3IFBhZ2ViYXIoJ3slaG9zdCV9emJfc3lzdGVtL2NtZC5waHA/YWN0PVBhZ2VNbmd7JnBhZ2U9JXBhZ2UlfScsIGZhbHNlKTsNCiAgICAkcC0+UGFnZUNvdW50ID0gJHpicC0+bWFuYWdlY291bnQ7DQogICAgJHAtPlBhZ2VOb3cgPSAoaW50KSBHZXRWYXJzKCdwYWdlJywgJ0dFVCcpID09IDAgPyAxIDogKGludCkgR2V0VmFycygncGFnZScsICdHRVQnKTsNCiAgICAkcC0+UGFnZUJhckNvdW50ID0gJHpicC0+cGFnZWJhcmNvdW50Ow0KDQogICAgJHcgPSBhcnJheSgpOw0KICAgIGlmICghJHpicC0+Q2hlY2tSaWdodHMoJ1BhZ2VBbGwnKSkgew0KICAgICAgICAkd1tdID0gYXJyYXkoJz0nLCAnbG9nX0F1dGhvcklEJywgJHpicC0+dXNlci0+SUQpOw0KICAgIH0NCg0KICAgICRzID0gJyc7DQogICAgJG9yID0gYXJyYXkoJ2xvZ19Qb3N0VGltZScgPT4gJ0RFU0MnKTsNCiAgICAkbCA9IGFycmF5KCgkcC0+UGFnZU5vdyAtIDEpICogJHAtPlBhZ2VDb3VudCwgJHAtPlBhZ2VDb3VudCk7DQogICAgJG9wID0gYXJyYXkoJ3BhZ2ViYXInID0+ICRwKTsNCg0KICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX0xhcmdlRGF0YV9QYWdlJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHMsICR3LCAkb3IsICRsLCAkb3ApOw0KICAgIH0NCg0KICAgICRhcnJheSA9ICR6YnAtPkdldFBhZ2VMaXN0KA0KICAgICAgICAkcywNCiAgICAgICAgJHcsDQogICAgICAgICRvciwNCiAgICAgICAgJGwsDQogICAgICAgICRvcA0KICAgICk7DQoNCiAgICBlY2hvICc8dGFibGUgYm9yZGVyPSIxIiBjbGFzcz0idGFibGVGdWxsIHRhYmxlQm9yZGVyIHRhYmxlQm9yZGVyLXRoY2VudGVyIHRhYmxlX2hvdmVyIHRhYmxlX3N0cmlwZWQiPic7DQoNCiAgICAkdGFibGVzID0gJyc7DQogICAgJHRhYmxldGhzID0gYXJyYXkoKTsNCiAgICAkdGFibGV0aHNbXSA9ICc8dHI+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydpZCddIC4gJzwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydhdXRob3InXSAuICc8L3RoPic7DQogICAgJHRhYmxldGhzW10gPSAnPHRoPicgLiAkemJwLT5sYW5nWydtc2cnXVsndGl0bGUnXSAuICc8L3RoPic7DQogICAgJHRhYmxldGhzW10gPSAnPHRoPicgLiAkemJwLT5sYW5nWydtc2cnXVsnZGF0ZSddIC4gJzwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydjb21tZW50J10gLiAnPC90aD4nOw0KICAgICR0YWJsZXRoc1tdID0gJzx0aD4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3N0YXR1cyddIC4gJzwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+PC90aD4nOw0KICAgICR0YWJsZXRoc1tdID0gJzwvdHI+JzsNCg0KICAgIGZvcmVhY2ggKCRhcnJheSBhcyAkYXJ0aWNsZSkgew0KICAgICAgICAkdGFibGV0ZHMgPSBhcnJheSgpOyAvL3RhYmxlIHN0cmluZw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dHI+JzsNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPHRkIGNsYXNzPSJ0ZDUiPicgLiAkYXJ0aWNsZS0+SUQgLiAnPC90ZD4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQgY2xhc3M9InRkMTAiPicgLiAkYXJ0aWNsZS0+QXV0aG9yLT5OYW1lIC4gJzwvdGQ+JzsNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPHRkPjxhIGhyZWY9IicgLiAkYXJ0aWNsZS0+VXJsIC4gJyIgdGFyZ2V0PSJfYmxhbmsiPjxpbWcgc3JjPSIuLi9pbWFnZS9hZG1pbi9saW5rLnBuZyIgYWx0PSIiIHRpdGxlPSIiIHdpZHRoPSIxNiIgLz48L2E+ICcgLiAkYXJ0aWNsZS0+VGl0bGUgLiAnPC90ZD4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQgY2xhc3M9InRkMjAiPicgLiAkYXJ0aWNsZS0+VGltZSgpIC4gJzwvdGQ+JzsNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPHRkIGNsYXNzPSJ0ZDUiPicgLiAkYXJ0aWNsZS0+Q29tbU51bXMgLiAnPC90ZD4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQgY2xhc3M9InRkNSI+JyAuICRhcnRpY2xlLT5TdGF0dXNOYW1lIC4gJzwvdGQ+JzsNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPHRkIGNsYXNzPSJ0ZDEwIHRkQ2VudGVyIj4nIC4NCiAgICAgICAgICAgICc8YSBocmVmPSIuLi9jbWQucGhwP2FjdD1QYWdlRWR0JmFtcDtpZD0nIC4gJGFydGljbGUtPklEIC4gJyI+PGltZyBzcmM9Ii4uL2ltYWdlL2FkbWluL3BhZ2VfZWRpdC5wbmciIGFsdD0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydlZGl0J10gLiAnIiB0aXRsZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydlZGl0J10gLiAnIiB3aWR0aD0iMTYiIC8+PC9hPicgLg0KICAgICAgICAgICAgJyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOycgLg0KICAgICAgICAgICAgJzxhIG9uY2xpY2s9InJldHVybiB3aW5kb3cuY29uZmlybShcJycgLiAkemJwLT5sYW5nWydtc2cnXVsnY29uZmlybV9vcGVyYXRpbmcnXSAuICdcJyk7IiBocmVmPSInIC4gQnVpbGRTYWZlQ21kVVJMKCdhY3Q9UGFnZURlbCZpZD0nIC4gJGFydGljbGUtPklEKSAuICciPjxpbWcgc3JjPSIuLi9pbWFnZS9hZG1pbi9kZWxldGUucG5nIiBhbHQ9IicgLiAkemJwLT5sYW5nWydtc2cnXVsnZGVsJ10gLiAnIiB0aXRsZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydkZWwnXSAuICciIHdpZHRoPSIxNiIgLz48L2E+JyAuDQogICAgICAgICAgICAgJzwvdGQ+JzsNCg0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8L3RyPic7DQoNCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fQWRtaW5fUGFnZU1uZ19UYWJsZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgLy/kvKDlhaUg5b2T5YmNcG9zdO+8jOW9k+WJjeihjO+8jOihqOWktA0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkYXJ0aWNsZSwgJHRhYmxldGRzLCAkdGFibGV0aHMpOw0KICAgICAgICB9DQoNCiAgICAgICAgJHRhYmxlcyAuPSBpbXBsb2RlKCR0YWJsZXRkcyk7DQogICAgfQ0KICAgIGVjaG8gaW1wbG9kZSgkdGFibGV0aHMpIC4gJHRhYmxlczsNCg0KICAgIGVjaG8gJzwvdGFibGU+JzsNCiAgICBlY2hvICc8aHIvPjxwIGNsYXNzPSJwYWdlYmFyIj4nOw0KICAgIGZvcmVhY2ggKCRwLT5CdXR0b25zIGFzICRrZXkgPT4gJHZhbHVlKSB7DQogICAgICAgIGlmICgkcC0+UGFnZU5vdyA9PSAka2V5KSB7DQogICAgICAgICAgICBlY2hvICc8c3BhbiBjbGFzcz0ibm93LXBhZ2UiPicgLiAka2V5IC4gJzwvc3Bhbj4mbmJzcDsmbmJzcDsnOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgZWNobyAnPGEgaHJlZj0iJyAuICR2YWx1ZSAuICciPicgLiAka2V5IC4gJzwvYT4mbmJzcDsmbmJzcDsnOw0KICAgICAgICB9DQogICAgfQ0KICAgIGVjaG8gJzwvcD48L2Rpdj4nOw0KICAgIGVjaG8gJzxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5BY3RpdmVMZWZ0TWVudSgiYVBhZ2VNbmciKTs8L3NjcmlwdD4nOw0KICAgIGVjaG8gJzxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5BZGRIZWFkZXJJY29uKCInIC4gJHpicC0+aG9zdCAuICd6Yl9zeXN0ZW0vaW1hZ2UvY29tbW9uL3BhZ2VfMzIucG5nJyAuICciKTs8L3NjcmlwdD4nOw0KfQ0KDQovLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KLyoqDQogKiDlkI7lj7DliIbnsbvnrqHnkIYuDQogKi8NCmZ1bmN0aW9uIEFkbWluX0NhdGVnb3J5TW5nKCkNCnsNCiAgICBnbG9iYWwgJHpicDsNCg0KICAgIGVjaG8gJzxkaXYgY2xhc3M9ImRpdkhlYWRlciI+JyAuICR6YnAtPmxhbmdbJ21zZyddWydjYXRlZ29yeV9tYW5hZ2UnXSAuICc8L2Rpdj4nOw0KICAgIGVjaG8gJzxkaXYgY2xhc3M9IlN1Yk1lbnUiPic7DQogICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fQWRtaW5fQ2F0ZWdvcnlNbmdfU3ViTWVudSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAkZnBuYW1lKCk7DQogICAgfQ0KICAgIGVjaG8gJzwvZGl2Pic7DQogICAgZWNobyAnPGRpdiBpZD0iZGl2TWFpbjIiPic7DQogICAgZWNobyAnPHRhYmxlIGJvcmRlcj0iMSIgY2xhc3M9InRhYmxlRnVsbCB0YWJsZUJvcmRlciB0YWJsZUJvcmRlci10aGNlbnRlciB0YWJsZV9ob3ZlciB0YWJsZV9zdHJpcGVkIj4nOw0KDQogICAgJHRhYmxlcyA9ICcnOw0KICAgICR0YWJsZXRocyA9IGFycmF5KCk7DQogICAgJHRhYmxldGhzW10gPSAnPHRyPic7DQogICAgJHRhYmxldGhzW10gPSAnPHRoPicgLiAkemJwLT5sYW5nWydtc2cnXVsnaWQnXSAuICc8L3RoPic7DQogICAgJHRhYmxldGhzW10gPSAnPHRoPicgLiAkemJwLT5sYW5nWydtc2cnXVsnb3JkZXInXSAuICc8L3RoPic7DQogICAgJHRhYmxldGhzW10gPSAnPHRoPicgLiAkemJwLT5sYW5nWydtc2cnXVsnbmFtZSddIC4gJzwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydhbGlhcyddIC4gJzwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydwb3N0X2NvdW50J10gLiAnPC90aD4nOw0KICAgICR0YWJsZXRoc1tdID0gJzx0aD48L3RoPic7DQogICAgJHRhYmxldGhzW10gPSAnPC90cj4nOw0KDQogICAgZm9yZWFjaCAoJHpicC0+Y2F0ZWdvcmllc2J5b3JkZXIgYXMgJGNhdGVnb3J5KSB7DQogICAgICAgICR0YWJsZXRkcyA9IGFycmF5KCk7IC8vdGFibGUgc3RyaW5nDQogICAgICAgICR0YWJsZXRkc1tdID0gJzx0cj4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQgY2xhc3M9InRkNSI+JyAuICRjYXRlZ29yeS0+SUQgLiAnPC90ZD4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQgY2xhc3M9InRkNSI+JyAuICRjYXRlZ29yeS0+T3JkZXIgLiAnPC90ZD4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQgY2xhc3M9InRkMjUiPjxhIGhyZWY9IicgLiAkY2F0ZWdvcnktPlVybCAuICciIHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0iLi4vaW1hZ2UvYWRtaW4vbGluay5wbmciIGFsdD0iIiB0aXRsZT0iIiB3aWR0aD0iMTYiIC8+PC9hPiAnIC4gJGNhdGVnb3J5LT5TeW1ib2wgLiAkY2F0ZWdvcnktPk5hbWUgLiAnPC90ZD4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQgY2xhc3M9InRkMjAiPicgLiAkY2F0ZWdvcnktPkFsaWFzIC4gJzwvdGQ+JzsNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPHRkIGNsYXNzPSJ0ZDEwIj4nIC4gJGNhdGVnb3J5LT5Db3VudCAuICc8L3RkPic7DQogICAgICAgICR0YWJsZXRkc1tdID0gJzx0ZCBjbGFzcz0idGQxMCB0ZENlbnRlciI+JyAuDQogICAgICAgICAgICAnPGEgaHJlZj0iLi4vY21kLnBocD9hY3Q9Q2F0ZWdvcnlFZHQmYW1wO2lkPScgLiAkY2F0ZWdvcnktPklEIC4gJyI+PGltZyBzcmM9Ii4uL2ltYWdlL2FkbWluL2ZvbGRlcl9lZGl0LnBuZyIgYWx0PSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2VkaXQnXSAuICciIHRpdGxlPSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2VkaXQnXSAuICciIHdpZHRoPSIxNiIgLz48L2E+JyAuDQogICAgICAgICAgICAnJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7JyAuDQogICAgICAgICgoY291bnQoJGNhdGVnb3J5LT5TdWJDYXRlZ29yaWVzKSA9PSAwKSA/DQogICAgICAgICAgICAnPGEgb25jbGljaz0icmV0dXJuIHdpbmRvdy5jb25maXJtKFwnJyAuICR6YnAtPmxhbmdbJ21zZyddWydjb25maXJtX29wZXJhdGluZyddIC4gJ1wnKTsiIGhyZWY9IicgLiBCdWlsZFNhZmVDbWRVUkwoJ2FjdD1DYXRlZ29yeURlbCZhbXA7aWQ9JyAuICRjYXRlZ29yeS0+SUQpIC4gJyI+PGltZyBzcmM9Ii4uL2ltYWdlL2FkbWluL2RlbGV0ZS5wbmciIGFsdD0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydkZWwnXSAuICciIHRpdGxlPSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2RlbCddIC4gJyIgd2lkdGg9IjE2IiAvPjwvYT4nIDogJycpIC4NCiAgICAgICAgICAgICc8L3RkPic7DQoNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPC90cj4nOw0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9BZG1pbl9DYXRlZ29yeU1uZ19UYWJsZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgLy/kvKDlhaUg5b2T5YmNJGNhdGVnb3J577yM5b2T5YmN6KGM77yM6KGo5aS0DQogICAgICAgICAgICAkZnByZXR1cm4gPSAkZnBuYW1lKCRjYXRlZ29yeSwgJHRhYmxldGRzLCAkdGFibGV0aHMpOw0KICAgICAgICB9DQoNCiAgICAgICAgJHRhYmxlcyAuPSBpbXBsb2RlKCR0YWJsZXRkcyk7DQogICAgfQ0KDQogICAgZWNobyBpbXBsb2RlKCR0YWJsZXRocykgLiAkdGFibGVzOw0KDQogICAgZWNobyAnPC90YWJsZT4nOw0KICAgIGVjaG8gJzwvZGl2Pic7DQogICAgZWNobyAnPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPkFjdGl2ZUxlZnRNZW51KCJhQ2F0ZWdvcnlNbmciKTs8L3NjcmlwdD4nOw0KICAgIGVjaG8gJzxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5BZGRIZWFkZXJJY29uKCInIC4gJHpicC0+aG9zdCAuICd6Yl9zeXN0ZW0vaW1hZ2UvY29tbW9uL2NhdGVnb3J5XzMyLnBuZycgLiAnIik7PC9zY3JpcHQ+JzsNCn0NCg0KLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCi8qKg0KICog5ZCO5Y+w6K+E6K66566h55CGLg0KICovDQpmdW5jdGlvbiBBZG1pbl9Db21tZW50TW5nKCkNCnsNCiAgICBnbG9iYWwgJHpicDsNCg0KICAgIGVjaG8gJzxkaXYgY2xhc3M9ImRpdkhlYWRlciI+JyAuICR6YnAtPmxhbmdbJ21zZyddWydjb21tZW50X21hbmFnZSddIC4gJzwvZGl2Pic7DQogICAgZWNobyAnPGRpdiBjbGFzcz0iU3ViTWVudSI+JzsNCiAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9BZG1pbl9Db21tZW50TW5nX1N1Yk1lbnUnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgJGZwbmFtZSgpOw0KICAgIH0NCiAgICBlY2hvICc8L2Rpdj4nOw0KICAgIGVjaG8gJzxkaXYgaWQ9ImRpdk1haW4yIj4nOw0KDQogICAgZWNobyAnPGZvcm0gY2xhc3M9InNlYXJjaCIgaWQ9InNlYXJjaCIgbWV0aG9kPSJwb3N0IiBhY3Rpb249IiMiPic7DQogICAgZWNobyAnPHA+JyAuICR6YnAtPmxhbmdbJ21zZyddWydzZWFyY2gnXSAuICcmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDs8aW5wdXQgbmFtZT0ic2VhcmNoIiBzdHlsZT0id2lkdGg6NDUwcHg7IiB0eXBlPSJ0ZXh0IiB2YWx1ZT0iIiAvPiAmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDs8aW5wdXQgdHlwZT0ic3VibWl0IiBjbGFzcz0iYnV0dG9uIiB2YWx1ZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydzdWJtaXQnXSAuICciLz48L3A+JzsNCiAgICBlY2hvICc8L2Zvcm0+JzsNCiAgICBlY2hvICc8Zm9ybSBtZXRob2Q9InBvc3QiIGFjdGlvbj0iJyAuICR6YnAtPmhvc3QgLiAnemJfc3lzdGVtL2NtZC5waHA/YWN0PUNvbW1lbnRCYXQiPic7DQogICAgZWNobyAnPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3NyZlRva2VuIiB2YWx1ZT0iJyAuICR6YnAtPkdldENTUkZUb2tlbigpIC4gJyI+JzsNCg0KICAgICRwID0gbmV3IFBhZ2ViYXIoJ3slaG9zdCV9emJfc3lzdGVtL2NtZC5waHA/YWN0PUNvbW1lbnRNbmd7JnBhZ2U9JXBhZ2UlfXsmaXNjaGVja2luZz0laXNjaGVja2luZyV9eyZzZWFyY2g9JXNlYXJjaCV9JywgZmFsc2UpOw0KICAgICRwLT5QYWdlQ291bnQgPSAkemJwLT5tYW5hZ2Vjb3VudDsNCiAgICAkcC0+UGFnZU5vdyA9IChpbnQpIEdldFZhcnMoJ3BhZ2UnLCAnR0VUJykgPT0gMCA/IDEgOiAoaW50KSBHZXRWYXJzKCdwYWdlJywgJ0dFVCcpOw0KICAgIGlmIChHZXRWYXJzKCdzZWFyY2gnKSAhPT0gR2V0VmFycygnc2VhcmNoJywgJ0dFVCcpKSB7DQogICAgICAgICRwLT5QYWdlTm93ID0gMTsNCiAgICB9DQogICAgJHAtPlBhZ2VCYXJDb3VudCA9ICR6YnAtPnBhZ2ViYXJjb3VudDsNCg0KICAgICRwLT5VcmxSdWxlLT5SdWxlc1sneyVzZWFyY2glfSddID0gcmF3dXJsZW5jb2RlKEdldFZhcnMoJ3NlYXJjaCcpKTsNCiAgICAkcC0+VXJsUnVsZS0+UnVsZXNbJ3slaXNjaGVja2luZyV9J10gPSAoYm9vbCkgR2V0VmFycygnaXNjaGVja2luZycpOw0KDQogICAgJHcgPSBhcnJheSgpOw0KICAgIGlmICghJHpicC0+Q2hlY2tSaWdodHMoJ0NvbW1lbnRBbGwnKSkgew0KICAgICAgICAkd1tdID0gYXJyYXkoJz0nLCAnY29tbV9BdXRob3JJRCcsICR6YnAtPnVzZXItPklEKTsNCiAgICB9DQogICAgaWYgKEdldFZhcnMoJ3NlYXJjaCcpKSB7DQogICAgICAgICR3W10gPSBhcnJheSgnc2VhcmNoJywgJ2NvbW1fQ29udGVudCcsICdjb21tX05hbWUnLCBHZXRWYXJzKCdzZWFyY2gnKSk7DQogICAgfQ0KICAgIGlmIChHZXRWYXJzKCdpZCcpKSB7DQogICAgICAgICR3W10gPSBhcnJheSgnPScsICdjb21tX0lEJywgR2V0VmFycygnaWQnKSk7DQogICAgfQ0KDQogICAgJHdbXSA9IGFycmF5KCc9JywgJ2NvbW1fSXNjaGVja2luZycsIChpbnQpIEdldFZhcnMoJ2lzY2hlY2tpbmcnKSk7DQoNCiAgICAkcyA9ICcnOw0KICAgICRvciA9IGFycmF5KCdjb21tX0lEJyA9PiAnREVTQycpOw0KICAgICRsID0gYXJyYXkoKCRwLT5QYWdlTm93IC0gMSkgKiAkcC0+UGFnZUNvdW50LCAkcC0+UGFnZUNvdW50KTsNCiAgICAkb3AgPSBhcnJheSgncGFnZWJhcicgPT4gJHApOw0KDQogICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fTGFyZ2VEYXRhX0NvbW1lbnQnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkcywgJHcsICRvciwgJGwsICRvcCk7DQogICAgfQ0KDQogICAgJGFycmF5ID0gJHpicC0+R2V0Q29tbWVudExpc3QoDQogICAgICAgICRzLA0KICAgICAgICAkdywNCiAgICAgICAgJG9yLA0KICAgICAgICAkbCwNCiAgICAgICAgJG9wDQogICAgKTsNCg0KICAgIGVjaG8gJzx0YWJsZSBib3JkZXI9IjEiIGNsYXNzPSJ0YWJsZUZ1bGwgdGFibGVCb3JkZXIgdGFibGVCb3JkZXItdGhjZW50ZXIgdGFibGVfaG92ZXIgdGFibGVfc3RyaXBlZCI+JzsNCiAgICAkdGFibGVzID0gJyc7DQogICAgJHRhYmxldGhzID0gYXJyYXkoKTsNCiAgICAkdGFibGV0aHNbXSA9ICc8dHI+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydpZCddIC4gJzwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydwYXJlbmRfaWQnXSAuICc8L3RoPic7DQogICAgJHRhYmxldGhzW10gPSAnPHRoPicgLiAkemJwLT5sYW5nWydtc2cnXVsnbmFtZSddIC4gJzwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydjb250ZW50J10gLiAnPC90aD4nOw0KICAgICR0YWJsZXRoc1tdID0gJzx0aD4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2FydGljbGUnXSAuICc8L3RoPic7DQogICAgJHRhYmxldGhzW10gPSAnPHRoPicgLiAkemJwLT5sYW5nWydtc2cnXVsnZGF0ZSddIC4gJzwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+PC90aD4nOw0KICAgICR0YWJsZXRoc1tdID0gJzx0aD48YSBocmVmPSIiIG9uY2xpY2s9IkJhdGNoU2VsZWN0QWxsKCk7cmV0dXJuIGZhbHNlOyI+JyAuICR6YnAtPmxhbmdbJ21zZyddWydzZWxlY3RfYWxsJ10gLiAnPC9hPjwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8L3RyPic7DQoNCiAgICBmb3JlYWNoICgkYXJyYXkgYXMgJGNtdCkgew0KICAgICAgICAkYXJ0aWNsZSA9ICR6YnAtPkdldFBvc3RCeUlEKCRjbXQtPkxvZ0lEKTsNCiAgICAgICAgaWYgKCRhcnRpY2xlLT5JRCA9PSAwKSB7DQogICAgICAgICAgICAkYXJ0aWNsZSA9IG51bGw7DQogICAgICAgIH0NCg0KICAgICAgICAkdGFibGV0ZHMgPSBhcnJheSgpOyAvL3RhYmxlIHN0cmluZw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dHI+JzsNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPHRkIGNsYXNzPSJ0ZDUiPjxhIGhyZWY9Ij9hY3Q9Q29tbWVudE1uZyZpZD0nIC4gJGNtdC0+SUQgLiAnIiB0aXRsZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydqdW1wX2NvbW1lbnQnXSAuICRjbXQtPklEIC4gJyI+JyAuICRjbXQtPklEIC4gJzwvYT48L3RkPic7DQogICAgICAgIGlmICgkY210LT5QYXJlbnRJRCA+IDApIHsNCiAgICAgICAgICAgICR0YWJsZXRkc1tdID0gJzx0ZCBjbGFzcz0idGQ1Ij48YSBocmVmPSI/YWN0PUNvbW1lbnRNbmcmaWQ9JyAuICRjbXQtPlBhcmVudElEIC4gJyIgdGl0bGU9IicgLiAkemJwLT5sYW5nWydtc2cnXVsnanVtcF9jb21tZW50J10gLiAkY210LT5QYXJlbnRJRCAuICciPicgLiAkY210LT5QYXJlbnRJRCAuICc8L2E+PC90ZD4nOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgJHRhYmxldGRzW10gPSAnPHRkIGNsYXNzPSJ0ZDUiPjwvdGQ+JzsNCiAgICAgICAgfQ0KDQogICAgICAgICR0YWJsZXRkc1tdID0gJzx0ZCBjbGFzcz0idGQxMCI+PHNwYW4gY2xhc3M9ImNtdC1ub3RlIiB0aXRsZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydlbWFpbCddIC4gJzonIC4gaHRtbHNwZWNpYWxjaGFycygkY210LT5FbWFpbCkgLiAnIj48YSBocmVmPSJtYWlsdG86JyAuIGh0bWxzcGVjaWFsY2hhcnMoJGNtdC0+RW1haWwpIC4gJyI+JyAuICRjbXQtPkF1dGhvci0+TmFtZSAuICc8L2E+PC9zcGFuPjwvdGQ+JzsNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPHRkPjxkaXYgc3R5bGU9Im92ZXJmbG93OmhpZGRlbjttYXgtd2lkdGg6NTAwcHg7Ij4nIC4NCiAgICAgICAgKA0KICAgICAgICAgICAgKCRhcnRpY2xlKSA/DQogICAgICAgICAgICAnPGEgaHJlZj0iJyAuICRhcnRpY2xlLT5VcmwgLiAnIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9Ii4uL2ltYWdlL2FkbWluL2xpbmsucG5nIiBhbHQ9IiIgdGl0bGU9IiIgd2lkdGg9IjE2IiAvPjwvYT4gJw0KICAgICAgICA6DQogICAgICAgICAgICAnPGEgaHJlZj0iamF2YXNjcmlwdDo7Ij48aW1nIHNyYz0iLi4vaW1hZ2UvYWRtaW4vZGVsZXRlLnBuZyIgYWx0PSJubyBleGlzdHMiIHRpdGxlPSJubyBleGlzdHMiIHdpZHRoPSIxNiIgLz48L2E+Jw0KICAgICAgICApIC4NCiAgICAgICAgICAgICRjbXQtPkNvbnRlbnQgLiAnPGRpdj48L3RkPic7DQogICAgICAgICR0YWJsZXRkc1tdID0gJzx0ZCBjbGFzcz0idGQ1Ij4nIC4gJGNtdC0+TG9nSUQgLiAnPC90ZD4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQgY2xhc3M9InRkMTUiPicgLiAkY210LT5UaW1lKCkgLiAnPC90ZD4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQgY2xhc3M9InRkMTAgdGRDZW50ZXIiPicgLg0KICAgICAgICAgICAgJzxhIG9uY2xpY2s9InJldHVybiB3aW5kb3cuY29uZmlybShcJycgLiAkemJwLT5sYW5nWydtc2cnXVsnY29uZmlybV9vcGVyYXRpbmcnXSAuICdcJyk7IiBocmVmPSInIC4gQnVpbGRTYWZlQ21kVVJMKCdhY3Q9Q29tbWVudERlbCZhbXA7aWQ9JyAuICRjbXQtPklEKSAuICciPjxpbWcgc3JjPSIuLi9pbWFnZS9hZG1pbi9kZWxldGUucG5nIiBhbHQ9IicgLiAkemJwLT5sYW5nWydtc2cnXVsnZGVsJ10gLiAnIiB0aXRsZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydkZWwnXSAuICciIHdpZHRoPSIxNiIgLz48L2E+JyAuDQogICAgICAgICAgICAnJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7JyAuDQogICAgICAgICAgICAoDQogICAgICAgICAgICAgICAgIUdldFZhcnMoJ2lzY2hlY2tpbmcnLCAnR0VUJykgPw0KICAgICAgICAgICAgICAgICc8YSBocmVmPSInIC4gQnVpbGRTYWZlQ21kVVJMKCdhY3Q9Q29tbWVudENoayZhbXA7aWQ9JyAuICRjbXQtPklEIC4gJyZhbXA7aXNjaGVja2luZz0nIC4gKGludCkgIUdldFZhcnMoJ2lzY2hlY2tpbmcnLCAnR0VUJykpIC4gJyI+PGltZyBzcmM9Ii4uL2ltYWdlL2FkbWluL21pbnVzLXNoaWVsZC5wbmciIGFsdD0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydhdWRpdCddIC4gJyIgdGl0bGU9IicgLiAkemJwLT5sYW5nWydtc2cnXVsnYXVkaXQnXSAuICciIHdpZHRoPSIxNiIgLz48L2E+Jw0KICAgICAgICAgICAgICAgIDoNCiAgICAgICAgICAgICAgICAnPGEgaHJlZj0iJyAuIEJ1aWxkU2FmZUNtZFVSTCgnYWN0PUNvbW1lbnRDaGsmYW1wO2lkPScgLiAkY210LT5JRCAuICcmYW1wO2lzY2hlY2tpbmc9JyAuIChpbnQpICFHZXRWYXJzKCdpc2NoZWNraW5nJywgJ0dFVCcpKSAuICciPjxpbWcgc3JjPSIuLi9pbWFnZS9hZG1pbi9vay5wbmciIGFsdD0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydwYXNzJ10gLiAnIiB0aXRsZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydwYXNzJ10gLiAnIiB3aWR0aD0iMTYiIC8+PC9hPicNCiAgICAgICAgICAgICkgLg0KICAgICAgICAgICAgJzwvdGQ+JzsNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPHRkIGNsYXNzPSJ0ZDUgdGRDZW50ZXIiPicgLiAnPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0iaWQnIC4gJGNtdC0+SUQgLiAnIiBuYW1lPSJpZFtdIiB2YWx1ZT0iJyAuICRjbXQtPklEIC4gJyIvPicgLiAnPC90ZD4nOw0KDQogICAgICAgICR0YWJsZXRkc1tdID0gJzwvdHI+JzsNCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fQWRtaW5fQ29tbWVudE1uZ19UYWJsZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgLy/kvKDlhaUg5b2T5YmNJGNtdO+8jOW9k+WJjeihjO+8jOihqOWktA0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkY210LCAkdGFibGV0ZHMsICR0YWJsZXRocywgJGFydGljbGUpOw0KICAgICAgICB9DQoNCiAgICAgICAgJHRhYmxlcyAuPSBpbXBsb2RlKCR0YWJsZXRkcyk7DQogICAgfQ0KDQogICAgZWNobyBpbXBsb2RlKCR0YWJsZXRocykgLiAkdGFibGVzOw0KICAgIGVjaG8gJzwvdGFibGU+JzsNCiAgICBlY2hvICc8aHIvPic7DQoNCiAgICBlY2hvICc8cCBzdHlsZT0iZmxvYXQ6cmlnaHQ7Ij4nOw0KDQogICAgaWYgKChib29sKSBHZXRWYXJzKCdpc2NoZWNraW5nJykpIHsNCiAgICAgICAgZWNobyAnPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0iYWxsX2RlbCIgb25jbGljaz0icmV0dXJuIHdpbmRvdy5jb25maXJtKFwnJyAuICR6YnAtPmxhbmdbJ21zZyddWydjb25maXJtX29wZXJhdGluZyddIC4gJ1wnKTsiICB2YWx1ZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydhbGxfZGVsJ10gLiAnIi8+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7JzsNCiAgICAgICAgZWNobyAnPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0iYWxsX3Bhc3MiICB2YWx1ZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydhbGxfcGFzcyddIC4gJyIvPiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyc7DQogICAgfSBlbHNlIHsNCiAgICAgICAgZWNobyAnPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0iYWxsX2RlbCIgb25jbGljaz0icmV0dXJuIHdpbmRvdy5jb25maXJtKFwnJyAuICR6YnAtPmxhbmdbJ21zZyddWydjb25maXJtX29wZXJhdGluZyddIC4gJ1wnKTsiICB2YWx1ZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydhbGxfZGVsJ10gLiAnIi8+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7JzsNCiAgICAgICAgZWNobyAnPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0iYWxsX2F1ZGl0IiAgdmFsdWU9IicgLiAkemJwLT5sYW5nWydtc2cnXVsnYWxsX2F1ZGl0J10gLiAnIi8+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7JzsNCiAgICB9DQoNCiAgICBlY2hvICc8L3A+JzsNCg0KICAgIGVjaG8gJzxwIGNsYXNzPSJwYWdlYmFyIj4nOw0KDQogICAgZm9yZWFjaCAoJHAtPkJ1dHRvbnMgYXMgJGtleSA9PiAkdmFsdWUpIHsNCiAgICAgICAgaWYgKCRwLT5QYWdlTm93ID09ICRrZXkpIHsNCiAgICAgICAgICAgIGVjaG8gJzxzcGFuIGNsYXNzPSJub3ctcGFnZSI+JyAuICRrZXkgLiAnPC9zcGFuPiZuYnNwOyZuYnNwOyc7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICBlY2hvICc8YSBocmVmPSInIC4gJHZhbHVlIC4gJyI+JyAuICRrZXkgLiAnPC9hPiZuYnNwOyZuYnNwOyc7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBlY2hvICc8L3A+JzsNCg0KICAgIGVjaG8gJzxoci8+PC9mb3JtPic7DQoNCiAgICBlY2hvICc8L2Rpdj4nOw0KICAgIGVjaG8gJzxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5BY3RpdmVMZWZ0TWVudSgiYUNvbW1lbnRNbmciKTs8L3NjcmlwdD4nOw0KICAgIGVjaG8gJzxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5BZGRIZWFkZXJJY29uKCInIC4gJHpicC0+aG9zdCAuICd6Yl9zeXN0ZW0vaW1hZ2UvY29tbW9uL2NvbW1lbnRzXzMyLnBuZycgLiAnIik7JCgiLmNtdC1ub3RlIikudG9vbHRpcCgpOzwvc2NyaXB0Pic7DQp9DQoNCi8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQovKioNCiAqIOWQjuWPsOeUqOaIt+euoeeQhi4NCiAqLw0KZnVuY3Rpb24gQWRtaW5fTWVtYmVyTW5nKCkNCnsNCiAgICBnbG9iYWwgJHpicDsNCg0KICAgIGVjaG8gJzxkaXYgY2xhc3M9ImRpdkhlYWRlciI+JyAuICR6YnAtPmxhbmdbJ21zZyddWydtZW1iZXJfbWFuYWdlJ10gLiAnPC9kaXY+JzsNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJTdWJNZW51Ij4nOw0KICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX0FkbWluX01lbWJlck1uZ19TdWJNZW51J10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICRmcG5hbWUoKTsNCiAgICB9DQogICAgZWNobyAnPC9kaXY+JzsNCiAgICBlY2hvICc8ZGl2IGlkPSJkaXZNYWluMiI+JzsNCiAgICBlY2hvICc8Zm9ybSBjbGFzcz0ic2VhcmNoIiBpZD0ic2VhcmNoIiBtZXRob2Q9InBvc3QiIGFjdGlvbj0iIyI+JzsNCg0KICAgIGVjaG8gJzxwPicgLiAkemJwLT5sYW5nWydtc2cnXVsnc2VhcmNoJ10gLiAnOiZuYnNwOyZuYnNwOycgLiAkemJwLT5sYW5nWydtc2cnXVsnbWVtYmVyX2xldmVsJ10gLiAnIDxzZWxlY3QgY2xhc3M9ImVkaXQiIHNpemU9IjEiIG5hbWU9ImxldmVsIiBzdHlsZT0id2lkdGg6MTQwcHg7IiA+PG9wdGlvbiB2YWx1ZT0iIj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2FueSddIC4gJzwvb3B0aW9uPic7DQogICAgZm9yZWFjaCAoJHpicC0+bGFuZ1sndXNlcl9sZXZlbF9uYW1lJ10gYXMgJGlkID0+ICRuYW1lKSB7DQogICAgICAgIGVjaG8gJzxvcHRpb24gdmFsdWU9IicgLiAkaWQgLiAnIj4nIC4gJG5hbWUgLiAnPC9vcHRpb24+JzsNCiAgICB9DQogICAgZWNobyAnPC9zZWxlY3Q+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7DQoJPGlucHV0IG5hbWU9InNlYXJjaCIgc3R5bGU9IndpZHRoOjI1MHB4OyIgdHlwZT0idGV4dCIgdmFsdWU9IiIgLz4gJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7PGlucHV0IHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ1dHRvbiIgdmFsdWU9IicgLiAkemJwLT5sYW5nWydtc2cnXVsnc3VibWl0J10gLiAnIi8+PC9wPic7DQogICAgZWNobyAnPC9mb3JtPic7DQoNCiAgICAkcCA9IG5ldyBQYWdlYmFyKCd7JWhvc3QlfXpiX3N5c3RlbS9jbWQucGhwP2FjdD1NZW1iZXJNbmd7JnBhZ2U9JXBhZ2UlfScsIGZhbHNlKTsNCiAgICAkcC0+UGFnZUNvdW50ID0gJHpicC0+bWFuYWdlY291bnQ7DQogICAgJHAtPlBhZ2VOb3cgPSAoaW50KSBHZXRWYXJzKCdwYWdlJywgJ0dFVCcpID09IDAgPyAxIDogKGludCkgR2V0VmFycygncGFnZScsICdHRVQnKTsNCiAgICBpZiAoR2V0VmFycygnc2VhcmNoJykgIT09IEdldFZhcnMoJ3NlYXJjaCcsICdHRVQnKSkgew0KICAgICAgICAkcC0+UGFnZU5vdyA9IDE7DQogICAgfQ0KICAgICRwLT5QYWdlQmFyQ291bnQgPSAkemJwLT5wYWdlYmFyY291bnQ7DQoNCiAgICAkdyA9IGFycmF5KCk7DQogICAgaWYgKCEkemJwLT5DaGVja1JpZ2h0cygnTWVtYmVyQWxsJykpIHsNCiAgICAgICAgJHdbXSA9IGFycmF5KCc9JywgJ21lbV9JRCcsICR6YnAtPnVzZXItPklEKTsNCiAgICB9DQogICAgaWYgKEdldFZhcnMoJ2xldmVsJykpIHsNCiAgICAgICAgJHdbXSA9IGFycmF5KCc9JywgJ21lbV9MZXZlbCcsIEdldFZhcnMoJ2xldmVsJykpOw0KICAgIH0NCiAgICBpZiAoR2V0VmFycygnc2VhcmNoJykpIHsNCiAgICAgICAgJHdbXSA9IGFycmF5KCdzZWFyY2gnLCAnbWVtX05hbWUnLCAnbWVtX0FsaWFzJywgJ21lbV9FbWFpbCcsIEdldFZhcnMoJ3NlYXJjaCcpKTsNCiAgICB9DQogICAgJGFycmF5ID0gJHpicC0+R2V0TWVtYmVyTGlzdCgNCiAgICAgICAgJycsDQogICAgICAgICR3LA0KICAgICAgICBhcnJheSgnbWVtX0lEJyA9PiAnQVNDJyksDQogICAgICAgIGFycmF5KCgkcC0+UGFnZU5vdyAtIDEpICogJHAtPlBhZ2VDb3VudCwgJHAtPlBhZ2VDb3VudCksDQogICAgICAgIGFycmF5KCdwYWdlYmFyJyA9PiAkcCkNCiAgICApOw0KDQogICAgZWNobyAnPHRhYmxlIGJvcmRlcj0iMSIgY2xhc3M9InRhYmxlRnVsbCB0YWJsZUJvcmRlciB0YWJsZUJvcmRlci10aGNlbnRlciB0YWJsZV9ob3ZlciB0YWJsZV9zdHJpcGVkIj4nOw0KICAgICR0YWJsZXMgPSAnJzsNCiAgICAkdGFibGV0aHMgPSBhcnJheSgpOw0KICAgICR0YWJsZXRoc1tdID0gJzx0cj4nOw0KICAgICR0YWJsZXRoc1tdID0gJzx0aD4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2lkJ10gLiAnPC90aD4nOw0KICAgICR0YWJsZXRoc1tdID0gJzx0aD4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ21lbWJlcl9sZXZlbCddIC4gJzwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWyduYW1lJ10gLiAnPC90aD4nOw0KICAgICR0YWJsZXRoc1tdID0gJzx0aD4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2FsaWFzJ10gLiAnPC90aD4nOw0KICAgICR0YWJsZXRoc1tdID0gJzx0aD4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2FsbF9hcnRpbGVzJ10gLiAnPC90aD4nOw0KICAgICR0YWJsZXRoc1tdID0gJzx0aD4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2FsbF9wYWdlcyddIC4gJzwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydhbGxfY29tbWVudHMnXSAuICc8L3RoPic7DQogICAgJHRhYmxldGhzW10gPSAnPHRoPicgLiAkemJwLT5sYW5nWydtc2cnXVsnYWxsX3VwbG9hZHMnXSAuICc8L3RoPic7DQogICAgJHRhYmxldGhzW10gPSAnPHRoPjwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8L3RyPic7DQoNCiAgICBmb3JlYWNoICgkYXJyYXkgYXMgJG1lbWJlcikgew0KICAgICAgICAkdGFibGV0ZHMgPSBhcnJheSgpOyAvL3RhYmxlIHN0cmluZw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dHI+JzsNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPHRkIGNsYXNzPSJ0ZDUiPicgLiAkbWVtYmVyLT5JRCAuICc8L3RkPic7DQogICAgICAgICR0YWJsZXRkc1tdID0gJzx0ZCBjbGFzcz0idGQxMCI+JyAuICRtZW1iZXItPkxldmVsTmFtZSAuICgkbWVtYmVyLT5TdGF0dXMgPiAwID8gJygnIC4gJHpicC0+bGFuZ1sndXNlcl9zdGF0dXNfbmFtZSddWyRtZW1iZXItPlN0YXR1c10gLiAnKScgOiAnJykgLiAnPC90ZD4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQ+PGEgaHJlZj0iJyAuICRtZW1iZXItPlVybCAuICciIHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0iLi4vaW1hZ2UvYWRtaW4vbGluay5wbmciIGFsdD0iIiB0aXRsZT0iIiB3aWR0aD0iMTYiIC8+PC9hPiAnIC4gJG1lbWJlci0+TmFtZSAuICc8L3RkPic7DQogICAgICAgICR0YWJsZXRkc1tdID0gJzx0ZCBjbGFzcz0idGQxNSI+JyAuICRtZW1iZXItPkFsaWFzIC4gJzwvdGQ+JzsNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPHRkIGNsYXNzPSJ0ZDEwIj4nIC4gJG1lbWJlci0+QXJ0aWNsZXMgLiAnPC90ZD4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQgY2xhc3M9InRkMTAiPicgLiAkbWVtYmVyLT5QYWdlcyAuICc8L3RkPic7DQogICAgICAgICR0YWJsZXRkc1tdID0gJzx0ZCBjbGFzcz0idGQxMCI+JyAuICRtZW1iZXItPkNvbW1lbnRzIC4gJzwvdGQ+JzsNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPHRkIGNsYXNzPSJ0ZDEwIj4nIC4gJG1lbWJlci0+VXBsb2FkcyAuICc8L3RkPic7DQogICAgICAgICR0YWJsZXRkc1tdID0gJzx0ZCBjbGFzcz0idGQxMCB0ZENlbnRlciI+JyAuDQogICAgICAgICAgICAnPGEgaHJlZj0iLi4vY21kLnBocD9hY3Q9TWVtYmVyRWR0JmFtcDtpZD0nIC4gJG1lbWJlci0+SUQgLiAnIj48aW1nIHNyYz0iLi4vaW1hZ2UvYWRtaW4vdXNlcl9lZGl0LnBuZyIgYWx0PSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2VkaXQnXSAuICciIHRpdGxlPSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2VkaXQnXSAuICciIHdpZHRoPSIxNiIgLz48L2E+JyAuDQogICAgICAgICgoJHpicC0+Q2hlY2tSaWdodHMoJ01lbWJlckRlbCcpICYmICgkbWVtYmVyLT5Jc0dvZCAhPT0gdHJ1ZSkpID8NCiAgICAgICAgICAgICcmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsnIC4NCiAgICAgICAgICAgICc8YSBvbmNsaWNrPSJyZXR1cm4gd2luZG93LmNvbmZpcm0oXCcnIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2NvbmZpcm1fb3BlcmF0aW5nJ10gLiAnXCcpOyIgaHJlZj0iJyAuIEJ1aWxkU2FmZUNtZFVSTCgnYWN0PU1lbWJlckRlbCZhbXA7aWQ9JyAuICRtZW1iZXItPklEKSAuICciPjxpbWcgc3JjPSIuLi9pbWFnZS9hZG1pbi9kZWxldGUucG5nIiBhbHQ9IicgLiAkemJwLT5sYW5nWydtc2cnXVsnZGVsJ10gLiAnIiB0aXRsZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydkZWwnXSAuICciIHdpZHRoPSIxNiIgLz48L2E+Jw0KDQogICAgICAgIDogJycpIC4NCiAgICAgICAgICAgICc8L3RkPic7DQoNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPC90cj4nOw0KDQogICAgICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX0FkbWluX01lbWJlck1uZ19UYWJsZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgLy/kvKDlhaUg5b2T5YmNJG1lbWJlcu+8jOW9k+WJjeihjO+8jOihqOWktA0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkbWVtYmVyLCAkdGFibGV0ZHMsICR0YWJsZXRocyk7DQogICAgICAgIH0NCg0KICAgICAgICAkdGFibGVzIC49IGltcGxvZGUoJHRhYmxldGRzKTsNCiAgICB9DQoNCiAgICBlY2hvIGltcGxvZGUoJHRhYmxldGhzKSAuICR0YWJsZXM7DQoNCiAgICBlY2hvICc8L3RhYmxlPic7DQogICAgZWNobyAnPGhyLz48cCBjbGFzcz0icGFnZWJhciI+JzsNCiAgICBmb3JlYWNoICgkcC0+QnV0dG9ucyBhcyAka2V5ID0+ICR2YWx1ZSkgew0KICAgICAgICBpZiAoJHAtPlBhZ2VOb3cgPT0gJGtleSkgew0KICAgICAgICAgICAgZWNobyAnPHNwYW4gY2xhc3M9Im5vdy1wYWdlIj4nIC4gJGtleSAuICc8L3NwYW4+Jm5ic3A7Jm5ic3A7JzsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGVjaG8gJzxhIGhyZWY9IicgLiAkdmFsdWUgLiAnIj4nIC4gJGtleSAuICc8L2E+Jm5ic3A7Jm5ic3A7JzsNCiAgICAgICAgfQ0KICAgIH0NCiAgICBlY2hvICc8L3A+PC9kaXY+JzsNCiAgICBlY2hvICc8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+QWN0aXZlTGVmdE1lbnUoImFNZW1iZXJNbmciKTs8L3NjcmlwdD4nOw0KICAgIGVjaG8gJzxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5BZGRIZWFkZXJJY29uKCInIC4gJHpicC0+aG9zdCAuICd6Yl9zeXN0ZW0vaW1hZ2UvY29tbW9uL3VzZXJfMzIucG5nJyAuICciKTs8L3NjcmlwdD4nOw0KfQ0KDQovLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KLyoqDQogKiAg5ZCO5Y+w5LiK5Lyg6ZmE5Lu2566h55CGLg0KICovDQpmdW5jdGlvbiBBZG1pbl9VcGxvYWRNbmcoKQ0Kew0KICAgIGdsb2JhbCAkemJwOw0KDQogICAgZWNobyAnPGRpdiBjbGFzcz0iZGl2SGVhZGVyIj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3VwbG9hZF9tYW5hZ2UnXSAuICc8L2Rpdj4nOw0KICAgIGVjaG8gJzxkaXYgY2xhc3M9IlN1Yk1lbnUiPic7DQogICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fQWRtaW5fVXBsb2FkTW5nX1N1Yk1lbnUnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgJGZwbmFtZSgpOw0KICAgIH0NCiAgICBlY2hvICc8L2Rpdj4nOw0KICAgIGVjaG8gJzxkaXYgaWQ9ImRpdk1haW4yIj4nOw0KDQogICAgZWNobyAnPGZvcm0gY2xhc3M9InNlYXJjaCIgbmFtZT0idXBsb2FkIiBpZD0idXBsb2FkIiBtZXRob2Q9InBvc3QiIGVuY3R5cGU9Im11bHRpcGFydC9mb3JtLWRhdGEiIGFjdGlvbj0iJyAuIEJ1aWxkU2FmZUNtZFVSTCgnYWN0PVVwbG9hZFBzdCcpIC4gJyI+JzsNCiAgICBlY2hvICc8cD4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3VwbG9hZF9maWxlJ10gLiAnOiA8L3A+JzsNCiAgICBlY2hvICc8cD48aW5wdXQgdHlwZT0iZmlsZSIgbmFtZT0iZmlsZSIgc2l6ZT0iNjAiIC8+Jm5ic3A7Jm5ic3A7JzsNCiAgICBlY2hvICc8bGFiZWw+PGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSJhdXRvX3JlbmFtZSIgY2hlY2tlZC8+JyAuICR6YnAtPmxhbmdbJ21zZyddWydhdXRvX3JlbmFtZV91cGxvYWRmaWxlJ10gLiAnPC9sYWJlbD4mbmJzcDsmbmJzcDsnOw0KICAgIGVjaG8gJzxpbnB1dCB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidXR0b24iIHZhbHVlPSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3N1Ym1pdCddIC4gJyIgb25jbGljaz0iIiAvPiZuYnNwOyZuYnNwOyc7DQogICAgZWNobyAnPGlucHV0IGNsYXNzPSJidXR0b24iIHR5cGU9InJlc2V0IiB2YWx1ZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydyZXNldCddIC4gJyIgLz48L3A+JzsNCiAgICBlY2hvICc8L2Zvcm0+JzsNCg0KICAgICR3ID0gYXJyYXkoKTsNCiAgICBpZiAoISR6YnAtPkNoZWNrUmlnaHRzKCdVcGxvYWRBbGwnKSkgew0KICAgICAgICAkd1tdID0gYXJyYXkoJz0nLCAndWxfQXV0aG9ySUQnLCAkemJwLT51c2VyLT5JRCk7DQogICAgfQ0KDQogICAgJHAgPSBuZXcgUGFnZWJhcigneyVob3N0JX16Yl9zeXN0ZW0vY21kLnBocD9hY3Q9VXBsb2FkTW5neyZwYWdlPSVwYWdlJX0nLCBmYWxzZSk7DQogICAgJHAtPlBhZ2VDb3VudCA9ICR6YnAtPm1hbmFnZWNvdW50Ow0KICAgICRwLT5QYWdlTm93ID0gKGludCkgR2V0VmFycygncGFnZScsICdHRVQnKSA9PSAwID8gMSA6IChpbnQpIEdldFZhcnMoJ3BhZ2UnLCAnR0VUJyk7DQogICAgJHAtPlBhZ2VCYXJDb3VudCA9ICR6YnAtPnBhZ2ViYXJjb3VudDsNCg0KICAgICRhcnJheSA9ICR6YnAtPkdldFVwbG9hZExpc3QoDQogICAgICAgICcnLA0KICAgICAgICAkdywNCiAgICAgICAgYXJyYXkoJ3VsX1Bvc3RUaW1lJyA9PiAnREVTQycpLA0KICAgICAgICBhcnJheSgoJHAtPlBhZ2VOb3cgLSAxKSAqICRwLT5QYWdlQ291bnQsICRwLT5QYWdlQ291bnQpLA0KICAgICAgICBhcnJheSgncGFnZWJhcicgPT4gJHApDQogICAgKTsNCg0KICAgIGVjaG8gJzx0YWJsZSBib3JkZXI9IjEiIGNsYXNzPSJ0YWJsZUZ1bGwgdGFibGVCb3JkZXIgdGFibGVCb3JkZXItdGhjZW50ZXIgdGFibGVfaG92ZXIgdGFibGVfc3RyaXBlZCI+JzsNCiAgICAkdGFibGVzID0gJyc7DQogICAgJHRhYmxlSGVhZGVycyA9IGFycmF5KCk7DQogICAgJHRhYmxlSGVhZGVyc1tdID0gJzx0cj4nOw0KICAgICR0YWJsZUhlYWRlcnNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydpZCddIC4gJzwvdGg+JzsNCiAgICAkdGFibGVIZWFkZXJzW10gPSAnPHRoPicgLiAkemJwLT5sYW5nWydtc2cnXVsnYXV0aG9yJ10gLiAnPC90aD4nOw0KICAgICR0YWJsZUhlYWRlcnNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWyduYW1lJ10gLiAnPC90aD4nOw0KICAgICR0YWJsZUhlYWRlcnNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydkYXRlJ10gLiAnPC90aD4nOw0KICAgICR0YWJsZUhlYWRlcnNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydzaXplJ10gLiAnPC90aD4nOw0KICAgICR0YWJsZUhlYWRlcnNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWyd0eXBlJ10gLiAnPC90aD4nOw0KICAgICR0YWJsZUhlYWRlcnNbXSA9ICc8dGg+PC90aD4nOw0KICAgICR0YWJsZUhlYWRlcnNbXSA9ICc8L3RyPic7DQoNCiAgICBmb3JlYWNoICgkYXJyYXkgYXMgJHVwbG9hZCkgew0KICAgICAgICAkcmV0ID0gYXJyYXkoKTsgLy90YWJsZSBzdHJpbmcNCiAgICAgICAgJHJldFtdID0gJzx0cj4nOw0KICAgICAgICAkcmV0W10gPSAnPHRkIGNsYXNzPSJ0ZDUiPicgLiAkdXBsb2FkLT5JRCAuICc8L3RkPic7DQogICAgICAgICRyZXRbXSA9ICc8dGQgY2xhc3M9InRkMTAiPicgLiBodG1sc3BlY2lhbGNoYXJzKCR1cGxvYWQtPkF1dGhvci0+TmFtZSkgLiAnPC90ZD4nOw0KICAgICAgICAkcmV0W10gPSAnPHRkPjxhIGhyZWY9IicgLiBodG1sc3BlY2lhbGNoYXJzKCR1cGxvYWQtPlVybCkgLiAnIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9Ii4uL2ltYWdlL2FkbWluL2xpbmsucG5nIiBhbHQ9IiIgdGl0bGU9IiIgd2lkdGg9IjE2IiAvPjwvYT4gJyAuIGh0bWxzcGVjaWFsY2hhcnMoJHVwbG9hZC0+TmFtZSkgLiAnPC90ZD4nOw0KICAgICAgICAkcmV0W10gPSAnPHRkIGNsYXNzPSJ0ZDE1Ij4nIC4gJHVwbG9hZC0+VGltZSgpIC4gJzwvdGQ+JzsNCiAgICAgICAgJHJldFtdID0gJzx0ZCBjbGFzcz0idGQxMCI+JyAuICR1cGxvYWQtPlNpemUgLiAnPC90ZD4nOw0KICAgICAgICAkcmV0W10gPSAnPHRkIGNsYXNzPSJ0ZDIwIj4nIC4gaHRtbHNwZWNpYWxjaGFycygkdXBsb2FkLT5NaW1lVHlwZSkgLiAnPC90ZD4nOw0KICAgICAgICAkcmV0W10gPSAnPHRkIGNsYXNzPSJ0ZDEwIHRkQ2VudGVyIj4nIC4NCiAgICAgICAgICAgICc8YSBvbmNsaWNrPSJyZXR1cm4gd2luZG93LmNvbmZpcm0oXCcnIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2NvbmZpcm1fb3BlcmF0aW5nJ10gLiAnXCcpOyIgaHJlZj0iJyAuIEJ1aWxkU2FmZUNtZFVSTCgnYWN0PVVwbG9hZERlbCZhbXA7aWQ9JyAuICR1cGxvYWQtPklEKSAuICciPjxpbWcgc3JjPSIuLi9pbWFnZS9hZG1pbi9kZWxldGUucG5nIiBhbHQ9IicgLiAkemJwLT5sYW5nWydtc2cnXVsnZGVsJ10gLiAnIiB0aXRsZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydkZWwnXSAuICciIHdpZHRoPSIxNiIgLz48L2E+JyAuDQogICAgICAgICAgICAnPC90ZD4nOw0KDQogICAgICAgICRyZXRbXSA9ICc8L3RyPic7DQogICAgICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX0FkbWluX1VwbG9hZE1uZ19UYWJsZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgLy/kvKDlhaUg5b2T5YmNJHVwbG9hZO+8jOW9k+WJjeihjO+8jOihqOWktA0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkdXBsb2FkLCAkcmV0LCAkdGFibGVIZWFkZXJzKTsNCiAgICAgICAgfQ0KDQogICAgICAgICR0YWJsZXMgLj0gaW1wbG9kZSgkcmV0KTsNCiAgICB9DQoNCiAgICBlY2hvIGltcGxvZGUoJHRhYmxlSGVhZGVycykgLiAkdGFibGVzOw0KICAgIGVjaG8gJzwvdGFibGU+JzsNCiAgICBlY2hvICc8aHIvPjxwIGNsYXNzPSJwYWdlYmFyIj4nOw0KICAgIGZvcmVhY2ggKCRwLT5CdXR0b25zIGFzICRrZXkgPT4gJHZhbHVlKSB7DQogICAgICAgIGlmICgkcC0+UGFnZU5vdyA9PSAka2V5KSB7DQogICAgICAgICAgICBlY2hvICc8c3BhbiBjbGFzcz0ibm93LXBhZ2UiPicgLiAka2V5IC4gJzwvc3Bhbj4mbmJzcDsmbmJzcDsnOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgZWNobyAnPGEgaHJlZj0iJyAuICR2YWx1ZSAuICciPicgLiAka2V5IC4gJzwvYT4mbmJzcDsmbmJzcDsnOw0KICAgICAgICB9DQogICAgfQ0KICAgIGVjaG8gJzwvcD48L2Rpdj4nOw0KICAgIGVjaG8gJzxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5BY3RpdmVMZWZ0TWVudSgiYVVwbG9hZE1uZyIpOzwvc2NyaXB0Pic7DQogICAgZWNobyAnPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPkFkZEhlYWRlckljb24oIicgLiAkemJwLT5ob3N0IC4gJ3piX3N5c3RlbS9pbWFnZS9jb21tb24vYWNjZXNzb3JpZXNfMzIucG5nJyAuICciKTs8L3NjcmlwdD4nOw0KfQ0KDQovLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KLyoqDQogKiDlkI7lj7DmoIfnrb7nrqHnkIYuDQogKi8NCmZ1bmN0aW9uIEFkbWluX1RhZ01uZygpDQp7DQogICAgZ2xvYmFsICR6YnA7DQoNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJkaXZIZWFkZXIiPicgLiAkemJwLT5sYW5nWydtc2cnXVsndGFnX21hbmFnZSddIC4gJzwvZGl2Pic7DQogICAgZWNobyAnPGRpdiBjbGFzcz0iU3ViTWVudSI+JzsNCiAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9BZG1pbl9UYWdNbmdfU3ViTWVudSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAkZnBuYW1lKCk7DQogICAgfQ0KICAgIGVjaG8gJzwvZGl2Pic7DQoNCiAgICBlY2hvICc8ZGl2IGlkPSJkaXZNYWluMiI+JzsNCiAgICBlY2hvICc8IS0tPGZvcm0gY2xhc3M9InNlYXJjaCIgaWQ9ImVkaXQiIG1ldGhvZD0icG9zdCIgYWN0aW9uPSIjIj48L2Zvcm0+LS0+JzsNCg0KICAgICRwID0gbmV3IFBhZ2ViYXIoJ3slaG9zdCV9emJfc3lzdGVtL2NtZC5waHA/YWN0PVRhZ01uZyZwYWdlPXslcGFnZSV9JywgZmFsc2UpOw0KICAgICRwLT5QYWdlQ291bnQgPSAkemJwLT5tYW5hZ2Vjb3VudDsNCiAgICAkcC0+UGFnZU5vdyA9IChpbnQpIEdldFZhcnMoJ3BhZ2UnLCAnR0VUJykgPT0gMCA/IDEgOiAoaW50KSBHZXRWYXJzKCdwYWdlJywgJ0dFVCcpOw0KICAgICRwLT5QYWdlQmFyQ291bnQgPSAkemJwLT5wYWdlYmFyY291bnQ7DQoNCiAgICAkYXJyYXkgPSAkemJwLT5HZXRUYWdMaXN0KA0KICAgICAgICAnJywNCiAgICAgICAgJycsDQogICAgICAgIGFycmF5KCd0YWdfSUQnID0+ICdBU0MnKSwNCiAgICAgICAgYXJyYXkoKCRwLT5QYWdlTm93IC0gMSkgKiAkcC0+UGFnZUNvdW50LCAkcC0+UGFnZUNvdW50KSwNCiAgICAgICAgYXJyYXkoJ3BhZ2ViYXInID0+ICRwKQ0KICAgICk7DQoNCiAgICBlY2hvICc8dGFibGUgYm9yZGVyPSIxIiBjbGFzcz0idGFibGVGdWxsIHRhYmxlQm9yZGVyIHRhYmxlQm9yZGVyLXRoY2VudGVyIHRhYmxlX2hvdmVyIHRhYmxlX3N0cmlwZWQiPic7DQogICAgJHRhYmxlcyA9ICcnOw0KICAgICR0YWJsZXRocyA9IGFycmF5KCk7DQogICAgJHRhYmxldGhzW10gPSAnPHRyPic7DQogICAgJHRhYmxldGhzW10gPSAnPHRoPicgLiAkemJwLT5sYW5nWydtc2cnXVsnaWQnXSAuICc8L3RoPic7DQogICAgJHRhYmxldGhzW10gPSAnPHRoPicgLiAkemJwLT5sYW5nWydtc2cnXVsnbmFtZSddIC4gJzwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydhbGlhcyddIC4gJzwvdGg+JzsNCiAgICAkdGFibGV0aHNbXSA9ICc8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydwb3N0X2NvdW50J10gLiAnPC90aD4nOw0KICAgICR0YWJsZXRoc1tdID0gJzx0aD48L3RoPic7DQogICAgJHRhYmxldGhzW10gPSAnPC90cj4nOw0KDQogICAgZm9yZWFjaCAoJGFycmF5IGFzICR0YWcpIHsNCiAgICAgICAgJHRhYmxldGRzID0gYXJyYXkoKTsgLy90YWJsZSBzdHJpbmcNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPHRyPic7DQogICAgICAgICR0YWJsZXRkc1tdID0gJzx0ZCBjbGFzcz0idGQ1Ij4nIC4gJHRhZy0+SUQgLiAnPC90ZD4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQgY2xhc3M9InRkMjUiPjxhIGhyZWY9IicgLiAkdGFnLT5VcmwgLiAnIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9Ii4uL2ltYWdlL2FkbWluL2xpbmsucG5nIiBhbHQ9IiIgdGl0bGU9IiIgd2lkdGg9IjE2IiAvPjwvYT4gJyAuICR0YWctPk5hbWUgLiAnPC90ZD4nOw0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8dGQgY2xhc3M9InRkMjAiPicgLiAkdGFnLT5BbGlhcyAuICc8L3RkPic7DQogICAgICAgICR0YWJsZXRkc1tdID0gJzx0ZCBjbGFzcz0idGQxMCI+JyAuICR0YWctPkNvdW50IC4gJzwvdGQ+JzsNCiAgICAgICAgJHRhYmxldGRzW10gPSAnPHRkIGNsYXNzPSJ0ZDEwIHRkQ2VudGVyIj4nIC4NCiAgICAgICAgICAgICc8YSBocmVmPSIuLi9jbWQucGhwP2FjdD1UYWdFZHQmYW1wO2lkPScgLiAkdGFnLT5JRCAuICciPjxpbWcgc3JjPSIuLi9pbWFnZS9hZG1pbi90YWdfYmx1ZV9lZGl0LnBuZyIgYWx0PSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2VkaXQnXSAuICciIHRpdGxlPSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2VkaXQnXSAuICciIHdpZHRoPSIxNiIgLz48L2E+JyAuDQogICAgICAgICAgICAnJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7JyAuDQogICAgICAgICAgICAnPGEgb25jbGljaz0icmV0dXJuIHdpbmRvdy5jb25maXJtKFwnJyAuICR6YnAtPmxhbmdbJ21zZyddWydjb25maXJtX29wZXJhdGluZyddIC4gJ1wnKTsiIGhyZWY9IicgLiBCdWlsZFNhZmVDbWRVUkwoJ2FjdD1UYWdEZWwmYW1wO2lkPScgLiAkdGFnLT5JRCkgLiAnIj48aW1nIHNyYz0iLi4vaW1hZ2UvYWRtaW4vZGVsZXRlLnBuZyIgYWx0PSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2RlbCddIC4gJyIgdGl0bGU9IicgLiAkemJwLT5sYW5nWydtc2cnXVsnZGVsJ10gLiAnIiB3aWR0aD0iMTYiIC8+PC9hPicgLg0KICAgICAgICAgICAgJzwvdGQ+JzsNCg0KICAgICAgICAkdGFibGV0ZHNbXSA9ICc8L3RyPic7DQoNCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fQWRtaW5fVGFnTW5nX1RhYmxlJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAvL+S8oOWFpSDlvZPliY0kdGFn77yM5b2T5YmN6KGM77yM6KGo5aS0DQogICAgICAgICAgICAkZnByZXR1cm4gPSAkZnBuYW1lKCR0YWcsICR0YWJsZXRkcywgJHRhYmxldGhzKTsNCiAgICAgICAgfQ0KDQogICAgICAgICR0YWJsZXMgLj0gaW1wbG9kZSgkdGFibGV0ZHMpOw0KICAgIH0NCg0KICAgIGVjaG8gaW1wbG9kZSgkdGFibGV0aHMpIC4gJHRhYmxlczsNCiAgICBlY2hvICc8L3RhYmxlPic7DQogICAgZWNobyAnPGhyLz48cCBjbGFzcz0icGFnZWJhciI+JzsNCiAgICBmb3JlYWNoICgkcC0+QnV0dG9ucyBhcyAka2V5ID0+ICR2YWx1ZSkgew0KICAgICAgICBpZiAoJHAtPlBhZ2VOb3cgPT0gJGtleSkgew0KICAgICAgICAgICAgZWNobyAnPHNwYW4gY2xhc3M9Im5vdy1wYWdlIj4nIC4gJGtleSAuICc8L3NwYW4+Jm5ic3A7Jm5ic3A7JzsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGVjaG8gJzxhIGhyZWY9IicgLiAkdmFsdWUgLiAnIj4nIC4gJGtleSAuICc8L2E+Jm5ic3A7Jm5ic3A7JzsNCiAgICAgICAgfQ0KICAgIH0NCiAgICBlY2hvICc8L3A+PC9kaXY+JzsNCg0KICAgIGVjaG8gJzxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5BY3RpdmVMZWZ0TWVudSgiYVRhZ01uZyIpOzwvc2NyaXB0Pic7DQogICAgZWNobyAnPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPkFkZEhlYWRlckljb24oIicgLiAkemJwLT5ob3N0IC4gJ3piX3N5c3RlbS9pbWFnZS9jb21tb24vdGFnXzMyLnBuZycgLiAnIik7PC9zY3JpcHQ+JzsNCn0NCg0KLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCi8qKg0KICog5ZCO5Y+w5Li76aKY566h55CGLg0KICovDQpmdW5jdGlvbiBBZG1pbl9UaGVtZU1uZygpDQp7DQogICAgZ2xvYmFsICR6YnA7DQoNCiAgICAkYWxsdGhlbWVzID0gJHpicC0+TG9hZFRoZW1lcygpOw0KDQogICAgZWNobyAnPGRpdiBjbGFzcz0iZGl2SGVhZGVyIj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3RoZW1lX21hbmFnZSddIC4gJzwvZGl2Pic7DQogICAgZWNobyAnPGRpdiBjbGFzcz0iU3ViTWVudSI+JzsNCiAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9BZG1pbl9UaGVtZU1uZ19TdWJNZW51J10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICRmcG5hbWUoKTsNCiAgICB9DQogICAgZWNobyAnPC9kaXY+JzsNCiAgICBlY2hvICc8ZGl2IGlkPSJkaXZNYWluMiI+PGZvcm0gaWQ9ImZybVRoZW1lIiBtZXRob2Q9InBvc3QiIGFjdGlvbj0iLi4vY21kLnBocD9hY3Q9VGhlbWVTZXQiPic7DQogICAgZWNobyAnPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3NyZlRva2VuIiB2YWx1ZT0iJyAuICR6YnAtPkdldENTUkZUb2tlbigpIC4gJyI+JzsNCiAgICBlY2hvICc8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJ0aGVtZSIgaWQ9InRoZW1lIiB2YWx1ZT0iIiAvPic7DQogICAgZWNobyAnPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ic3R5bGUiIGlkPSJzdHlsZSIgdmFsdWU9IiIgLz4nOw0KDQogICAgZm9yZWFjaCAoJGFsbHRoZW1lcyBhcyAkdGhlbWUpIHsNCiAgICAgICAgZWNobyAiXG5cbiI7DQoNCiAgICAgICAgZWNobyAnPGRpdiBjbGFzcz0idGhlbWUgJyAuICgkdGhlbWUtPklzVXNlZCgpID8gJ3RoZW1lLW5vdycgOiAndGhlbWUtb3RoZXInKSAuICciJzsNCiAgICAgICAgZWNobyAnIGRhdGEtdGhlbWVpZD0iJyAuIGh0bWxzcGVjaWFsY2hhcnMoJHRoZW1lLT5pZCkgLiAnIic7DQogICAgICAgIGVjaG8gJyBkYXRhLXRoZW1lbmFtZT0iJyAuIGh0bWxzcGVjaWFsY2hhcnMoJHRoZW1lLT5uYW1lKSAuICciJzsNCiAgICAgICAgZWNobyAnPic7DQogICAgICAgIGVjaG8gJzxkaXYgY2xhc3M9InRoZW1lLW5hbWUiPic7DQoNCiAgICAgICAgaWYgKCR0aGVtZS0+SXNVc2VkKCkgJiYgJHRoZW1lLT5wYXRoKSB7DQogICAgICAgICAgICBlY2hvICc8YSBocmVmPSInIC4gJHRoZW1lLT5HZXRNYW5hZ2VVcmwoKSAuICciIHRpdGxlPSLnrqHnkIYiIGNsYXNzPSJidXR0b24iPjxpbWcgd2lkdGg9IjE2IiB0aXRsZT0iIiBhbHQ9IiIgc3JjPSIuLi9pbWFnZS9hZG1pbi9zZXR0aW5nX3Rvb2xzLnBuZyIvPjwvYT4mbmJzcDsmbmJzcDsnOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgZWNobyAnPGltZyB3aWR0aD0iMTYiIHRpdGxlPSIiIGFsdD0iIiBzcmM9Ii4uL2ltYWdlL2FkbWluL2xheW91dC5wbmciLz4mbmJzcDsmbmJzcDsnOw0KICAgICAgICB9DQogICAgICAgIGVjaG8gJzxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSInIC4gaHRtbHNwZWNpYWxjaGFycygkdGhlbWUtPnVybCkgLiAnIiB0aXRsZT0iIj48c3Ryb25nIHN0eWxlPSJkaXNwbGF5Om5vbmU7Ij4nIC4gaHRtbHNwZWNpYWxjaGFycygkdGhlbWUtPmlkKSAuICc8L3N0cm9uZz4nOw0KICAgICAgICBlY2hvICc8Yj4nIC4gaHRtbHNwZWNpYWxjaGFycygkdGhlbWUtPm5hbWUpIC4gJzwvYj48L2E+PC9kaXY+JzsNCiAgICAgICAgZWNobyAnPGRpdj48aW1nIHNyYz0iJyAuICR0aGVtZS0+R2V0U2NyZWVuc2hvdCgpIC4gJyIgdGl0bGU9IicgLiBodG1sc3BlY2lhbGNoYXJzKCR0aGVtZS0+bmFtZSkgLiAnIiBhbHQ9IicgLiBodG1sc3BlY2lhbGNoYXJzKCR0aGVtZS0+bmFtZSkgLiAnIiB3aWR0aD0iMjAwIiBoZWlnaHQ9IjE1MCIgLz48L2Rpdj4nOw0KICAgICAgICBlY2hvICc8ZGl2IGNsYXNzPSJ0aGVtZS1hdXRob3IiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnYXV0aG9yJ10gLiAnOiA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iJyAuIGh0bWxzcGVjaWFsY2hhcnMoJHRoZW1lLT5hdXRob3JfdXJsKSAuICciPicgLiBodG1sc3BlY2lhbGNoYXJzKCR0aGVtZS0+YXV0aG9yX25hbWUpIC4gJzwvYT48L2Rpdj4nOw0KICAgICAgICBlY2hvICc8ZGl2IGNsYXNzPSJ0aGVtZS1zdHlsZSI+JzsNCiAgICAgICAgZWNobyAnPHNlbGVjdCBjbGFzcz0iZWRpdCIgc2l6ZT0iMSIgdGl0bGU9IicgLiAkemJwLT5sYW5nWydtc2cnXVsnc3R5bGUnXSAuICciPic7DQogICAgICAgIGZvcmVhY2ggKCR0aGVtZS0+R2V0Q3NzRmlsZXMoKSBhcyAka2V5ID0+ICR2YWx1ZSkgew0KICAgICAgICAgICAgZWNobyAnPG9wdGlvbiB2YWx1ZT0iJyAuIGh0bWxzcGVjaWFsY2hhcnMoJGtleSkgLiAnIiAnIC4gKCR0aGVtZS0+SXNVc2VkKCkgPyAoJGtleSA9PSAkemJwLT5zdHlsZSA/ICdzZWxlY3RlZD0ic2VsZWN0ZWQiJyA6ICcnKSA6ICcnKSAuICc+JyAuIGJhc2VuYW1lKCR2YWx1ZSkgLiAnPC9vcHRpb24+JzsNCiAgICAgICAgfQ0KICAgICAgICBlY2hvICc8L3NlbGVjdD4nOw0KICAgICAgICBlY2hvICc8aW5wdXQgdHlwZT0iYnV0dG9uIiBvbmNsaWNrPSIkKFwnI3N0eWxlXCcpLnZhbCgkKHRoaXMpLnByZXYoKS52YWwoKSk7JChcJyN0aGVtZVwnKS52YWwoXCcnIC4gJHRoZW1lLT5pZCAuICdcJyk7JChcJyNmcm1UaGVtZVwnKS5zdWJtaXQoKTsiIGNsYXNzPSJ0aGVtZS1hY3RpdmF0ZSBidXR0b24iIHZhbHVlPSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2VuYWJsZSddIC4gJyI+JzsNCiAgICAgICAgZWNobyAnPC9kaXY+JzsNCiAgICAgICAgZWNobyAnPC9kaXY+JzsNCiAgICB9DQoNCiAgICBlY2hvICc8L2Zvcm0+PC9kaXY+JzsNCiAgICBlY2hvICc8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+QWN0aXZlTGVmdE1lbnUoImFUaGVtZU1uZyIpOzwvc2NyaXB0Pic7DQogICAgZWNobyAnPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPkFkZEhlYWRlckljb24oIicgLiAkemJwLT5ob3N0IC4gJ3piX3N5c3RlbS9pbWFnZS9jb21tb24vdGhlbWVzXzMyLnBuZycgLiAnIik7PC9zY3JpcHQ+JzsNCn0NCg0KLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCi8qKg0KICog5ZCO5Y+w5qih5Z2X566h55CGLg0KICovDQpmdW5jdGlvbiBBZG1pbl9Nb2R1bGVNbmcoKQ0Kew0KICAgIGdsb2JhbCAkemJwOw0KDQogICAgZWNobyAnPGRpdiBjbGFzcz0iZGl2SGVhZGVyIj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ21vZHVsZV9tYW5hZ2UnXSAuICc8L2Rpdj4nOw0KICAgIGVjaG8gJzxkaXYgY2xhc3M9IlN1Yk1lbnUiPic7DQogICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fQWRtaW5fTW9kdWxlTW5nX1N1Yk1lbnUnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgJGZwbmFtZSgpOw0KICAgIH0NCiAgICBlY2hvICc8L2Rpdj4nOw0KICAgIGVjaG8gJzxkaXYgaWQ9ImRpdk1haW4yIj4nOw0KDQogICAgJHNtID0gYXJyYXkoKTsNCiAgICAkdW0gPSBhcnJheSgpOw0KICAgICR0bSA9IGFycmF5KCk7DQogICAgJHBtID0gYXJyYXkoKTsNCg0KICAgIGZvcmVhY2ggKCR6YnAtPm1vZHVsZXMgYXMgJG0pIHsNCiAgICAgICAgaWYgKCRtLT5Tb3VyY2VUeXBlID09ICdzeXN0ZW0nKSB7DQogICAgICAgICAgICAkc21bXSA9ICRtOw0KICAgICAgICB9IGVsc2VpZiAoJG0tPlNvdXJjZVR5cGUgPT0gJ3VzZXInKSB7DQogICAgICAgICAgICAkdW1bXSA9ICRtOw0KICAgICAgICB9IGVsc2VpZiAoJG0tPlNvdXJjZVR5cGUgPT0gJ3RoZW1lJyB8fCAkbS0+U291cmNlVHlwZSA9PSAndGhlbWVpbmNsdWRlJykgew0KICAgICAgICAgICAgLy/liKTmlq3mqKHlnZflvZLlsZ7lvZPliY3kuLvpopgNCiAgICAgICAgICAgIGlmICgkbS0+U291cmNlID09ICd0aGVtZScgfHwgKHN1YnN0cigkbS0+U291cmNlLCAtMS1zdHJsZW4oJHpicC0+dGhlbWUpKSkgPT0gKCdfJyAuICR6YnAtPnRoZW1lKSApIHsNCiAgICAgICAgICAgICAgICAkdG1bXSA9ICRtOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICRwbVtdID0gJG07DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvL3dpZGdldC1saXN0IGJlZ2luDQogICAgZWNobyAnPGRpdiBjbGFzcz0id2lkZ2V0LWxlZnQiPic7DQogICAgZWNobyAnPGRpdiBjbGFzcz0id2lkZ2V0LWxpc3QiPic7DQoNCiAgICBlY2hvICc8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+JzsNCiAgICBlY2hvICd2YXIgZnVuY3Rpb25zID0geyc7DQogICAgZm9yZWFjaCAoJHpicC0+bW9kdWxlcyBhcyAka2V5ID0+ICR2YWx1ZSkgew0KICAgICAgICBlY2hvICInIiAuICR2YWx1ZS0+RmlsZU5hbWUgLiAiJzonIiAuICR2YWx1ZS0+U291cmNlIC4gIicgLCI7DQogICAgfQ0KICAgIGVjaG8gIicnOicnfTsiOw0KICAgIGVjaG8gJzwvc2NyaXB0Pic7DQogICAgZWNobyAiXHJcbiI7DQogICAgZWNobyAnPGRpdiBjbGFzcz0id2lkZ2V0LWxpc3QtaGVhZGVyIj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3N5c3RlbV9tb2R1bGUnXSAuICc8L2Rpdj4nOw0KICAgIGVjaG8gJzxkaXYgY2xhc3M9IndpZGdldC1saXN0LW5vdGUiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnZHJhZ19tb2R1bGVfdG9fc2lkZWJhciddIC4gJzwvZGl2Pic7DQogICAgZWNobyAiXHJcbiI7DQogICAgZm9yZWFjaCAoJHNtIGFzICRtKSB7DQogICAgICAgIENyZWF0ZU1vZHVsZURpdigkbSk7DQogICAgfQ0KDQogICAgZWNobyAnPGRpdiBjbGFzcz0id2lkZ2V0LWxpc3QtaGVhZGVyIj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3VzZXJfbW9kdWxlJ10gLiAnPC9kaXY+JzsNCiAgICBlY2hvICJcclxuIjsNCiAgICBmb3JlYWNoICgkdW0gYXMgJG0pIHsNCiAgICAgICAgQ3JlYXRlTW9kdWxlRGl2KCRtKTsNCiAgICB9DQoNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJ3aWRnZXQtbGlzdC1oZWFkZXIiPicgLiAkemJwLT5sYW5nWydtc2cnXVsncGx1Z2luX21vZHVsZSddIC4gJzwvZGl2Pic7DQogICAgZWNobyAiXHJcbiI7DQogICAgZm9yZWFjaCAoJHBtIGFzICRtKSB7DQogICAgICAgIENyZWF0ZU1vZHVsZURpdigkbSk7DQogICAgfQ0KDQogICAgZWNobyAnPGRpdiBjbGFzcz0id2lkZ2V0LWxpc3QtaGVhZGVyIj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3RoZW1lX21vZHVsZSddIC4gJzwvZGl2Pic7DQogICAgZWNobyAiXHJcbiI7DQogICAgZm9yZWFjaCAoJHRtIGFzICRtKSB7DQogICAgICAgIENyZWF0ZU1vZHVsZURpdigkbSk7DQogICAgfQ0KDQogICAgZWNobyAnPGhyLz4nOw0KICAgIGVjaG8gIlxyXG4iOw0KICAgIGVjaG8gJzxmb3JtIGlkPSJlZGl0IiBtZXRob2Q9InBvc3QiIGFjdGlvbj0iJyAuIEJ1aWxkU2FmZUNtZFVSTCgnYWN0PVNpZGViYXJTZXQnKSAuICciPic7DQogICAgZWNobyAnPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9InN0cnNpZGViYXIiIG5hbWU9ImVkdFNpZGViYXIiIHZhbHVlPSInIC4gJHpicC0+b3B0aW9uWydaQ19TSURFQkFSX09SREVSJ10gLiAnIi8+JzsNCiAgICBlY2hvICc8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0ic3Ryc2lkZWJhcjIiIG5hbWU9ImVkdFNpZGViYXIyIiB2YWx1ZT0iJyAuICR6YnAtPm9wdGlvblsnWkNfU0lERUJBUjJfT1JERVInXSAuICciLz4nOw0KICAgIGVjaG8gJzxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJzdHJzaWRlYmFyMyIgbmFtZT0iZWR0U2lkZWJhcjMiIHZhbHVlPSInIC4gJHpicC0+b3B0aW9uWydaQ19TSURFQkFSM19PUkRFUiddIC4gJyIvPic7DQogICAgZWNobyAnPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9InN0cnNpZGViYXI0IiBuYW1lPSJlZHRTaWRlYmFyNCIgdmFsdWU9IicgLiAkemJwLT5vcHRpb25bJ1pDX1NJREVCQVI0X09SREVSJ10gLiAnIi8+JzsNCiAgICBlY2hvICc8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0ic3Ryc2lkZWJhcjUiIG5hbWU9ImVkdFNpZGViYXI1IiB2YWx1ZT0iJyAuICR6YnAtPm9wdGlvblsnWkNfU0lERUJBUjVfT1JERVInXSAuICciLz4nOw0KICAgIGVjaG8gJzxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJzdHJzaWRlYmFyNiIgbmFtZT0iZWR0U2lkZWJhcjYiIHZhbHVlPSInIC4gJHpicC0+b3B0aW9uWydaQ19TSURFQkFSNl9PUkRFUiddIC4gJyIvPic7DQogICAgZWNobyAnPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9InN0cnNpZGViYXI3IiBuYW1lPSJlZHRTaWRlYmFyNyIgdmFsdWU9IicgLiAkemJwLT5vcHRpb25bJ1pDX1NJREVCQVI3X09SREVSJ10gLiAnIi8+JzsNCiAgICBlY2hvICc8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0ic3Ryc2lkZWJhcjgiIG5hbWU9ImVkdFNpZGViYXI4IiB2YWx1ZT0iJyAuICR6YnAtPm9wdGlvblsnWkNfU0lERUJBUjhfT1JERVInXSAuICciLz4nOw0KICAgIGVjaG8gJzxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJzdHJzaWRlYmFyOSIgbmFtZT0iZWR0U2lkZWJhcjkiIHZhbHVlPSInIC4gJHpicC0+b3B0aW9uWydaQ19TSURFQkFSOV9PUkRFUiddIC4gJyIvPic7DQogICAgZWNobyAnPC9mb3JtPic7DQogICAgZWNobyAiXHJcbiI7DQogICAgZWNobyAnPGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PjwvZGl2Pic7DQogICAgZWNobyAnPC9kaXY+JzsNCiAgICAvL3dpZGdldC1saXN0IGVuZA0KICAgIGVjaG8gIlxyXG4iOw0KICAgIC8vc2lkZXJiYXItbGlzdCBiZWdpbg0KICAgIGVjaG8gJzxkaXYgY2xhc3M9InNpZGVyYmFyLWxpc3QiPic7DQogICAgZWNobyAnPGRpdiBjbGFzcz0ic2lkZXJiYXItZHJvcCIgaWQ9InNpZGVyYmFyIj48ZGl2IGNsYXNzPSJzaWRlcmJhci1oZWFkZXIiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhciddIC4gJyZuYnNwOzxpbWcgY2xhc3M9InJvbGwiIHNyYz0iLi4vaW1hZ2UvYWRtaW4vbG9hZGluZy5naWYiIHdpZHRoPSIxNiIgYWx0PSIiIC8+PHNwYW4gY2xhc3M9InVpLWljb24gdWktaWNvbi10cmlhbmdsZS0xLXMiPjwvc3Bhbj48L2Rpdj48ZGl2ICBjbGFzcz0ic2lkZXJiYXItc29ydC1saXN0IiA+JzsNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJzaWRlcmJhci1ub3RlIiA+JyAuIHN0cl9yZXBsYWNlKCclcycsIGNvdW50KCR6YnAtPnRlbXBsYXRlLT5zaWRlYmFyKSwgJHpicC0+bGFuZ1snbXNnJ11bJ3NpZGViYXJfbW9kdWxlX2NvdW50J10pIC4gJzwvZGl2Pic7DQogICAgZm9yZWFjaCAoJHpicC0+dGVtcGxhdGUtPnNpZGViYXIgYXMgJG0pIHsNCiAgICAgICAgQ3JlYXRlTW9kdWxlRGl2KCRtLCBmYWxzZSk7DQogICAgfQ0KICAgIGVjaG8gJzwvZGl2PjwvZGl2Pic7DQogICAgZWNobyAiXHJcbiI7DQoNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJzaWRlcmJhci1kcm9wIiBpZD0ic2lkZXJiYXIyIj48ZGl2IGNsYXNzPSJzaWRlcmJhci1oZWFkZXIiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhcjInXSAuICcmbmJzcDs8aW1nIGNsYXNzPSJyb2xsIiBzcmM9Ii4uL2ltYWdlL2FkbWluL2xvYWRpbmcuZ2lmIiB3aWR0aD0iMTYiIGFsdD0iIiAvPjxzcGFuIGNsYXNzPSJ1aS1pY29uIHVpLWljb24tdHJpYW5nbGUtMS1zIj48L3NwYW4+PC9kaXY+PGRpdiAgY2xhc3M9InNpZGVyYmFyLXNvcnQtbGlzdCIgPic7DQogICAgZWNobyAnPGRpdiBjbGFzcz0ic2lkZXJiYXItbm90ZSIgPicgLiBzdHJfcmVwbGFjZSgnJXMnLCBjb3VudCgkemJwLT50ZW1wbGF0ZS0+c2lkZWJhcjIpLCAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhcl9tb2R1bGVfY291bnQnXSkgLiAnPC9kaXY+JzsNCiAgICBmb3JlYWNoICgkemJwLT50ZW1wbGF0ZS0+c2lkZWJhcjIgYXMgJG0pIHsNCiAgICAgICAgQ3JlYXRlTW9kdWxlRGl2KCRtLCBmYWxzZSk7DQogICAgfQ0KICAgIGVjaG8gJzwvZGl2PjwvZGl2Pic7DQogICAgZWNobyAiXHJcbiI7DQoNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJzaWRlcmJhci1kcm9wIiBpZD0ic2lkZXJiYXIzIj48ZGl2IGNsYXNzPSJzaWRlcmJhci1oZWFkZXIiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhcjMnXSAuICcmbmJzcDs8aW1nIGNsYXNzPSJyb2xsIiBzcmM9Ii4uL2ltYWdlL2FkbWluL2xvYWRpbmcuZ2lmIiB3aWR0aD0iMTYiIGFsdD0iIiAvPjxzcGFuIGNsYXNzPSJ1aS1pY29uIHVpLWljb24tdHJpYW5nbGUtMS1zIj48L3NwYW4+PC9kaXY+PGRpdiAgY2xhc3M9InNpZGVyYmFyLXNvcnQtbGlzdCIgPic7DQogICAgZWNobyAnPGRpdiBjbGFzcz0ic2lkZXJiYXItbm90ZSIgPicgLiBzdHJfcmVwbGFjZSgnJXMnLCBjb3VudCgkemJwLT50ZW1wbGF0ZS0+c2lkZWJhcjMpLCAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhcl9tb2R1bGVfY291bnQnXSkgLiAnPC9kaXY+JzsNCiAgICBmb3JlYWNoICgkemJwLT50ZW1wbGF0ZS0+c2lkZWJhcjMgYXMgJG0pIHsNCiAgICAgICAgQ3JlYXRlTW9kdWxlRGl2KCRtLCBmYWxzZSk7DQogICAgfQ0KICAgIGVjaG8gJzwvZGl2PjwvZGl2Pic7DQogICAgZWNobyAiXHJcbiI7DQoNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJzaWRlcmJhci1kcm9wIiBpZD0ic2lkZXJiYXI0Ij48ZGl2IGNsYXNzPSJzaWRlcmJhci1oZWFkZXIiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhcjQnXSAuICcmbmJzcDs8aW1nIGNsYXNzPSJyb2xsIiBzcmM9Ii4uL2ltYWdlL2FkbWluL2xvYWRpbmcuZ2lmIiB3aWR0aD0iMTYiIGFsdD0iIiAvPjxzcGFuIGNsYXNzPSJ1aS1pY29uIHVpLWljb24tdHJpYW5nbGUtMS1zIj48L3NwYW4+PC9kaXY+PGRpdiAgY2xhc3M9InNpZGVyYmFyLXNvcnQtbGlzdCIgPic7DQogICAgZWNobyAnPGRpdiBjbGFzcz0ic2lkZXJiYXItbm90ZSIgPicgLiBzdHJfcmVwbGFjZSgnJXMnLCBjb3VudCgkemJwLT50ZW1wbGF0ZS0+c2lkZWJhcjQpLCAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhcl9tb2R1bGVfY291bnQnXSkgLiAnPC9kaXY+JzsNCiAgICBmb3JlYWNoICgkemJwLT50ZW1wbGF0ZS0+c2lkZWJhcjQgYXMgJG0pIHsNCiAgICAgICAgQ3JlYXRlTW9kdWxlRGl2KCRtLCBmYWxzZSk7DQogICAgfQ0KICAgIGVjaG8gJzwvZGl2PjwvZGl2Pic7DQogICAgZWNobyAiXHJcbiI7DQoNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJzaWRlcmJhci1kcm9wIiBpZD0ic2lkZXJiYXI1Ij48ZGl2IGNsYXNzPSJzaWRlcmJhci1oZWFkZXIiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhcjUnXSAuICcmbmJzcDs8aW1nIGNsYXNzPSJyb2xsIiBzcmM9Ii4uL2ltYWdlL2FkbWluL2xvYWRpbmcuZ2lmIiB3aWR0aD0iMTYiIGFsdD0iIiAvPjxzcGFuIGNsYXNzPSJ1aS1pY29uIHVpLWljb24tdHJpYW5nbGUtMS1zIj48L3NwYW4+PC9kaXY+PGRpdiAgY2xhc3M9InNpZGVyYmFyLXNvcnQtbGlzdCIgPic7DQogICAgZWNobyAnPGRpdiBjbGFzcz0ic2lkZXJiYXItbm90ZSIgPicgLiBzdHJfcmVwbGFjZSgnJXMnLCBjb3VudCgkemJwLT50ZW1wbGF0ZS0+c2lkZWJhcjUpLCAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhcl9tb2R1bGVfY291bnQnXSkgLiAnPC9kaXY+JzsNCiAgICBmb3JlYWNoICgkemJwLT50ZW1wbGF0ZS0+c2lkZWJhcjUgYXMgJG0pIHsNCiAgICAgICAgQ3JlYXRlTW9kdWxlRGl2KCRtLCBmYWxzZSk7DQogICAgfQ0KICAgIGVjaG8gJzwvZGl2PjwvZGl2Pic7DQogICAgZWNobyAiXHJcbiI7DQoNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJzaWRlcmJhci1kcm9wIiBpZD0ic2lkZXJiYXI2Ij48ZGl2IGNsYXNzPSJzaWRlcmJhci1oZWFkZXIiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhcjYnXSAuICcmbmJzcDs8aW1nIGNsYXNzPSJyb2xsIiBzcmM9Ii4uL2ltYWdlL2FkbWluL2xvYWRpbmcuZ2lmIiB3aWR0aD0iMTYiIGFsdD0iIiAvPjxzcGFuIGNsYXNzPSJ1aS1pY29uIHVpLWljb24tdHJpYW5nbGUtMS1zIj48L3NwYW4+PC9kaXY+PGRpdiAgY2xhc3M9InNpZGVyYmFyLXNvcnQtbGlzdCIgPic7DQogICAgZWNobyAnPGRpdiBjbGFzcz0ic2lkZXJiYXItbm90ZSIgPicgLiBzdHJfcmVwbGFjZSgnJXMnLCBjb3VudCgkemJwLT50ZW1wbGF0ZS0+c2lkZWJhcjYpLCAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhcl9tb2R1bGVfY291bnQnXSkgLiAnPC9kaXY+JzsNCiAgICBmb3JlYWNoICgkemJwLT50ZW1wbGF0ZS0+c2lkZWJhcjYgYXMgJG0pIHsNCiAgICAgICAgQ3JlYXRlTW9kdWxlRGl2KCRtLCBmYWxzZSk7DQogICAgfQ0KICAgIGVjaG8gJzwvZGl2PjwvZGl2Pic7DQogICAgZWNobyAiXHJcbiI7DQoNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJzaWRlcmJhci1kcm9wIiBpZD0ic2lkZXJiYXI3Ij48ZGl2IGNsYXNzPSJzaWRlcmJhci1oZWFkZXIiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhcjcnXSAuICcmbmJzcDs8aW1nIGNsYXNzPSJyb2xsIiBzcmM9Ii4uL2ltYWdlL2FkbWluL2xvYWRpbmcuZ2lmIiB3aWR0aD0iMTYiIGFsdD0iIiAvPjxzcGFuIGNsYXNzPSJ1aS1pY29uIHVpLWljb24tdHJpYW5nbGUtMS1zIj48L3NwYW4+PC9kaXY+PGRpdiAgY2xhc3M9InNpZGVyYmFyLXNvcnQtbGlzdCIgPic7DQogICAgZWNobyAnPGRpdiBjbGFzcz0ic2lkZXJiYXItbm90ZSIgPicgLiBzdHJfcmVwbGFjZSgnJXMnLCBjb3VudCgkemJwLT50ZW1wbGF0ZS0+c2lkZWJhcjcpLCAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhcl9tb2R1bGVfY291bnQnXSkgLiAnPC9kaXY+JzsNCiAgICBmb3JlYWNoICgkemJwLT50ZW1wbGF0ZS0+c2lkZWJhcjcgYXMgJG0pIHsNCiAgICAgICAgQ3JlYXRlTW9kdWxlRGl2KCRtLCBmYWxzZSk7DQogICAgfQ0KICAgIGVjaG8gJzwvZGl2PjwvZGl2Pic7DQogICAgZWNobyAiXHJcbiI7DQoNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJzaWRlcmJhci1kcm9wIiBpZD0ic2lkZXJiYXI4Ij48ZGl2IGNsYXNzPSJzaWRlcmJhci1oZWFkZXIiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhcjgnXSAuICcmbmJzcDs8aW1nIGNsYXNzPSJyb2xsIiBzcmM9Ii4uL2ltYWdlL2FkbWluL2xvYWRpbmcuZ2lmIiB3aWR0aD0iMTYiIGFsdD0iIiAvPjxzcGFuIGNsYXNzPSJ1aS1pY29uIHVpLWljb24tdHJpYW5nbGUtMS1zIj48L3NwYW4+PC9kaXY+PGRpdiAgY2xhc3M9InNpZGVyYmFyLXNvcnQtbGlzdCIgPic7DQogICAgZWNobyAnPGRpdiBjbGFzcz0ic2lkZXJiYXItbm90ZSIgPicgLiBzdHJfcmVwbGFjZSgnJXMnLCBjb3VudCgkemJwLT50ZW1wbGF0ZS0+c2lkZWJhcjgpLCAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhcl9tb2R1bGVfY291bnQnXSkgLiAnPC9kaXY+JzsNCiAgICBmb3JlYWNoICgkemJwLT50ZW1wbGF0ZS0+c2lkZWJhcjggYXMgJG0pIHsNCiAgICAgICAgQ3JlYXRlTW9kdWxlRGl2KCRtLCBmYWxzZSk7DQogICAgfQ0KICAgIGVjaG8gJzwvZGl2PjwvZGl2Pic7DQogICAgZWNobyAiXHJcbiI7DQoNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJzaWRlcmJhci1kcm9wIiBpZD0ic2lkZXJiYXI5Ij48ZGl2IGNsYXNzPSJzaWRlcmJhci1oZWFkZXIiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhcjknXSAuICcmbmJzcDs8aW1nIGNsYXNzPSJyb2xsIiBzcmM9Ii4uL2ltYWdlL2FkbWluL2xvYWRpbmcuZ2lmIiB3aWR0aD0iMTYiIGFsdD0iIiAvPjxzcGFuIGNsYXNzPSJ1aS1pY29uIHVpLWljb24tdHJpYW5nbGUtMS1zIj48L3NwYW4+PC9kaXY+PGRpdiAgY2xhc3M9InNpZGVyYmFyLXNvcnQtbGlzdCIgPic7DQogICAgZWNobyAnPGRpdiBjbGFzcz0ic2lkZXJiYXItbm90ZSIgPicgLiBzdHJfcmVwbGFjZSgnJXMnLCBjb3VudCgkemJwLT50ZW1wbGF0ZS0+c2lkZWJhcjkpLCAkemJwLT5sYW5nWydtc2cnXVsnc2lkZWJhcl9tb2R1bGVfY291bnQnXSkgLiAnPC9kaXY+JzsNCiAgICBmb3JlYWNoICgkemJwLT50ZW1wbGF0ZS0+c2lkZWJhcjkgYXMgJG0pIHsNCiAgICAgICAgQ3JlYXRlTW9kdWxlRGl2KCRtLCBmYWxzZSk7DQogICAgfQ0KICAgIGVjaG8gJzwvZGl2PjwvZGl2Pic7DQogICAgZWNobyAiXHJcbiI7DQoNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+PC9kaXY+JzsNCiAgICAvL3NpZGVyYmFyLWxpc3QgZW5kDQogICAgZWNobyAiXHJcbiI7DQogICAgZWNobyAnPGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2Pic7DQoNCiAgICBlY2hvICc8L2Rpdj4nOw0KICAgIGVjaG8gIlxyXG4iOw0KDQogICAgZWNobyAnPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPkFjdGl2ZUxlZnRNZW51KCJhTW9kdWxlTW5nIik7PC9zY3JpcHQ+JzsgPz4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4NCiAgICAkKGZ1bmN0aW9uKCkgew0KICAgICAgICBmdW5jdGlvbiBzb3J0RnVuY3Rpb24oKXsNCiAgICAgICAgICAgIHZhciBzMT0iIjsNCiAgICAgICAgICAgICQoIiNzaWRlcmJhciIpLmZpbmQoImRpdi5mdW5pZCIpLmVhY2goZnVuY3Rpb24oaSl7DQogICAgICAgICAgICAgICBzMSArPSAkKHRoaXMpLmh0bWwoKSArInwiOw0KICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgdmFyIHMyPSIiOw0KICAgICAgICAgICAgJCgiI3NpZGVyYmFyMiIpLmZpbmQoImRpdi5mdW5pZCIpLmVhY2goZnVuY3Rpb24oaSl7DQogICAgICAgICAgICAgICBzMiArPSAkKHRoaXMpLmh0bWwoKSArInwiOw0KICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgdmFyIHMzPSIiOw0KICAgICAgICAgICAgJCgiI3NpZGVyYmFyMyIpLmZpbmQoImRpdi5mdW5pZCIpLmVhY2goZnVuY3Rpb24oaSl7DQogICAgICAgICAgICAgICBzMyArPSAkKHRoaXMpLmh0bWwoKSArInwiOw0KICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgdmFyIHM0PSIiOw0KICAgICAgICAgICAgJCgiI3NpZGVyYmFyNCIpLmZpbmQoImRpdi5mdW5pZCIpLmVhY2goZnVuY3Rpb24oaSl7DQogICAgICAgICAgICAgICBzNCArPSAkKHRoaXMpLmh0bWwoKSArInwiOw0KICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgdmFyIHM1PSIiOw0KICAgICAgICAgICAgJCgiI3NpZGVyYmFyNSIpLmZpbmQoImRpdi5mdW5pZCIpLmVhY2goZnVuY3Rpb24oaSl7DQogICAgICAgICAgICAgICBzNSArPSAkKHRoaXMpLmh0bWwoKSArInwiOw0KICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgdmFyIHM2PSIiOw0KICAgICAgICAgICAgJCgiI3NpZGVyYmFyNiIpLmZpbmQoImRpdi5mdW5pZCIpLmVhY2goZnVuY3Rpb24oaSl7DQogICAgICAgICAgICAgICBzNiArPSAkKHRoaXMpLmh0bWwoKSArInwiOw0KICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgdmFyIHM3PSIiOw0KICAgICAgICAgICAgJCgiI3NpZGVyYmFyNyIpLmZpbmQoImRpdi5mdW5pZCIpLmVhY2goZnVuY3Rpb24oaSl7DQogICAgICAgICAgICAgICBzNyArPSAkKHRoaXMpLmh0bWwoKSArInwiOw0KICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgdmFyIHM4PSIiOw0KICAgICAgICAgICAgJCgiI3NpZGVyYmFyOCIpLmZpbmQoImRpdi5mdW5pZCIpLmVhY2goZnVuY3Rpb24oaSl7DQogICAgICAgICAgICAgICBzOCArPSAkKHRoaXMpLmh0bWwoKSArInwiOw0KICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgdmFyIHM5PSIiOw0KICAgICAgICAgICAgJCgiI3NpZGVyYmFyOSIpLmZpbmQoImRpdi5mdW5pZCIpLmVhY2goZnVuY3Rpb24oaSl7DQogICAgICAgICAgICAgICBzOSArPSAkKHRoaXMpLmh0bWwoKSArInwiOw0KICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAkKCIjc3Ryc2lkZWJhciIgKS52YWwoczEpOw0KICAgICAgICAgICAgJCgiI3N0cnNpZGViYXIyIikudmFsKHMyKTsNCiAgICAgICAgICAgICQoIiNzdHJzaWRlYmFyMyIpLnZhbChzMyk7DQogICAgICAgICAgICAkKCIjc3Ryc2lkZWJhcjQiKS52YWwoczQpOw0KICAgICAgICAgICAgJCgiI3N0cnNpZGViYXI1IikudmFsKHM1KTsNCiAgICAgICAgICAgICQoIiNzdHJzaWRlYmFyNiIpLnZhbChzNik7DQogICAgICAgICAgICAkKCIjc3Ryc2lkZWJhcjciKS52YWwoczcpOw0KICAgICAgICAgICAgJCgiI3N0cnNpZGViYXI4IikudmFsKHM4KTsNCiAgICAgICAgICAgICQoIiNzdHJzaWRlYmFyOSIpLnZhbChzOSk7DQoNCiAgICAgICAgICAgICQucG9zdCgkKCIjZWRpdCIpLmF0dHIoImFjdGlvbiIpLA0KICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAic2lkZWJhciI6IHMxLA0KICAgICAgICAgICAgICAgICJzaWRlYmFyMiI6IHMyLA0KICAgICAgICAgICAgICAgICJzaWRlYmFyMyI6IHMzLA0KICAgICAgICAgICAgICAgICJzaWRlYmFyNCI6IHM0LA0KICAgICAgICAgICAgICAgICJzaWRlYmFyNSI6IHM1LA0KICAgICAgICAgICAgICAgICJzaWRlYmFyNiI6IHM2LA0KICAgICAgICAgICAgICAgICJzaWRlYmFyNyI6IHM3LA0KICAgICAgICAgICAgICAgICJzaWRlYmFyOCI6IHM4LA0KICAgICAgICAgICAgICAgICJzaWRlYmFyOSI6IHM5DQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgIGZ1bmN0aW9uKGRhdGEpew0KICAgICAgICAgICAgICAgICAvL2FsZXJ0KCJEYXRhIExvYWRlZDogIiArIGRhdGEpOw0KICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgfTsNCg0KICAgICAgICB2YXIgdCxmPTE7DQogICAgICAgIGZ1bmN0aW9uIGhpZGVXaWRnZXQoaXRlbSl7DQogICAgICAgICAgICAgICAgaXRlbS5maW5kKCIudWktaWNvbiIpLnJlbW92ZUNsYXNzKCJ1aS1pY29uLXRyaWFuZ2xlLTEtcyIpLmFkZENsYXNzKCJ1aS1pY29uLXRyaWFuZ2xlLTEtdyIpOw0KICAgICAgICAgICAgICAgIHQ9aXRlbS5uZXh0KCk7DQogICAgICAgICAgICAgICAgdC5maW5kKCIud2lkZ2V0IikuaGlkZSgiZmFzdCIpLmVuZCgpLnNob3coKTsNCiAgICAgICAgICAgICAgICB0LmZpbmQoIi5zaWRlcmJhci1ub3RlPnNwYW4iKS50ZXh0KHQuZmluZCgiLndpZGdldCIpLmxlbmd0aCk7DQogICAgICAgIH0NCiAgICAgICAgZnVuY3Rpb24gc2hvd1dpZGdldChpdGVtKXsNCiAgICAgICAgICAgICAgICBpdGVtLmZpbmQoIi51aS1pY29uIikucmVtb3ZlQ2xhc3MoInVpLWljb24tdHJpYW5nbGUtMS13IikuYWRkQ2xhc3MoInVpLWljb24tdHJpYW5nbGUtMS1zIik7DQogICAgICAgICAgICAgICAgdD1pdGVtLm5leHQoKTsNCiAgICAgICAgICAgICAgICB0LmZpbmQoIi53aWRnZXQiKS5zaG93KCJmYXN0Iik7DQogICAgICAgICAgICAgICAgdC5maW5kKCIuc2lkZXJiYXItbm90ZT5zcGFuIikudGV4dCh0LmZpbmQoIi53aWRnZXQiKS5sZW5ndGgpOw0KICAgICAgICB9DQoNCiAgICAgICAgJCggIi5zaWRlcmJhci1oZWFkZXIiICkuY2xpY2soZnVuY3Rpb24oKXsNCiAgICAgICAgICAgIGlmKCQodGhpcykuaGFzQ2xhc3MoImNsaWNrZWQiKSkgew0KICAgICAgICAgICAgICAgIHNob3dXaWRnZXQoJCh0aGlzKSk7DQogICAgICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcygiY2xpY2tlZCIpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgaGlkZVdpZGdldCgkKHRoaXMpKTsNCiAgICAgICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCJjbGlja2VkIik7DQogICAgICAgICAgICB9DQogICAgICAgIH0pOw0KDQogICAgICAgICQoICIuc2lkZXJiYXItc29ydC1saXN0IiApLnNvcnRhYmxlKHsNCiAgICAgICAgICAgIGl0ZW1zOicud2lkZ2V0JywNCiAgICAgICAgICAgIHN0YXJ0OmZ1bmN0aW9uKGV2ZW50LCB1aSl7DQogICAgICAgICAgICAgICAgc2hvd1dpZGdldCh1aS5pdGVtLnBhcmVudCgpLnByZXYoKSk7DQogICAgICAgICAgICAgICAgIHZhciBjPXVpLml0ZW0uZmluZCgiLmZ1bmlkIikuaHRtbCgpOw0KICAgICAgICAgICAgICAgICBpZih1aS5pdGVtLnBhcmVudCgpLmZpbmQoIi53aWRnZXQ6Y29udGFpbnMoIitjKyIpIikubGVuZ3RoPjEpew0KICAgICAgICAgICAgICAgICAgICB1aS5pdGVtLnJlbW92ZSgpOw0KICAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgfSAsDQogICAgICAgICAgICBzdG9wOmZ1bmN0aW9uKGV2ZW50LCB1aSl7JCh0aGlzKS5wYXJlbnQoKS5maW5kKCIucm9sbCIpLnNob3coInNsb3ciKTtzb3J0RnVuY3Rpb24oKTskKHRoaXMpLnBhcmVudCgpLmZpbmQoIi5yb2xsIikuaGlkZSgic2xvdyIpOw0KICAgICAgICAgICAgICAgIHNob3dXaWRnZXQoJCh0aGlzKS5wYXJlbnQoKS5wcmV2KCkpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9KS5kaXNhYmxlU2VsZWN0aW9uKCk7DQoNCiAgICAgICAgJCggIi53aWRnZXQtbGlzdD4ud2lkZ2V0IiApLmRyYWdnYWJsZSh7DQogICAgICAgICAgICBjb25uZWN0VG9Tb3J0YWJsZTogIi5zaWRlcmJhci1zb3J0LWxpc3QiLA0KICAgICAgICAgICAgcmV2ZXJ0OiAiaW52YWxpZCIsDQogICAgICAgICAgICBjb250YWlubWVudDogImRvY3VtZW50IiwNCiAgICAgICAgICAgIGhlbHBlcjogImNsb25lIiwNCiAgICAgICAgICAgIGN1cnNvcjogIm1vdmUiDQogICAgICAgIH0pLmRpc2FibGVTZWxlY3Rpb24oKTsNCg0KICAgICAgICAkKCAiLndpZGdldC1saXN0IiApLmRyb3BwYWJsZSh7DQogICAgICAgICAgICBhY2NlcHQ6Ii5zaWRlcmJhci1zb3J0LWxpc3Q+LndpZGdldCIsDQogICAgICAgICAgICBkcm9wOiBmdW5jdGlvbiggZXZlbnQsIHVpICkgew0KICAgICAgICAgICAgICAgIHVpLmRyYWdnYWJsZS5yZW1vdmUoKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSk7DQoNCn0pOw0KDQo8L3NjcmlwdD4NCjw/cGhwDQplY2hvICc8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+QWRkSGVhZGVySWNvbigiJyAuICR6YnAtPmhvc3QgLiAnemJfc3lzdGVtL2ltYWdlL2NvbW1vbi9saW5rXzMyLnBuZycgLiAnIik7PC9zY3JpcHQ+JzsNCn0NCg0KLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCi8qKg0KICog5ZCO5Y+w5o+S5Lu2566h55CGLg0KICovDQpmdW5jdGlvbiBBZG1pbl9QbHVnaW5NbmcoKQ0Kew0KICAgIGdsb2JhbCAkemJwOw0KDQogICAgJGFsbHBsdWdpbnMgPSAkemJwLT5Mb2FkUGx1Z2lucygpOw0KDQogICAgZWNobyAnPGRpdiBjbGFzcz0iZGl2SGVhZGVyIj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3BsdWdpbl9tYW5hZ2UnXSAuICc8L2Rpdj4nOw0KICAgIGVjaG8gJzxkaXYgY2xhc3M9IlN1Yk1lbnUiPic7DQogICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fQWRtaW5fUGx1Z2luTW5nX1N1Yk1lbnUnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgJGZwbmFtZSgpOw0KICAgIH0NCiAgICBlY2hvICc8L2Rpdj4nOw0KICAgIGVjaG8gJzxkaXYgaWQ9ImRpdk1haW4yIj4nOw0KICAgIGVjaG8gJzx0YWJsZSBib3JkZXI9IjEiIGNsYXNzPSJ0YWJsZUZ1bGwgdGFibGVCb3JkZXIgdGFibGVCb3JkZXItdGhjZW50ZXIgdGFibGVfaG92ZXIgdGFibGVfc3RyaXBlZCI+JzsNCiAgICBlY2hvICc8dHI+DQoNCgk8dGg+PC90aD4NCgk8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWyduYW1lJ10gLiAnPC90aD4NCgk8dGg+JyAuICR6YnAtPmxhbmdbJ21zZyddWydhdXRob3InXSAuICc8L3RoPg0KCTx0aD4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2RhdGUnXSAuICc8L3RoPg0KCTx0aD48L3RoPg0KCTwvdHI+JzsNCg0KICAgICRwbHVnaW5zID0gYXJyYXkoKTsNCg0KICAgICRhcHAgPSBuZXcgQXBwKCk7DQogICAgaWYgKCRhcHAtPkxvYWRJbmZvQnlYbWwoJ3RoZW1lJywgJHpicC0+dGhlbWUpID09IHRydWUpIHsNCiAgICAgICAgaWYgKCRhcHAtPkhhc1BsdWdpbigpKSB7DQogICAgICAgICAgICBhcnJheV91bnNoaWZ0KCRwbHVnaW5zLCAkYXBwKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgICRwbCA9ICR6YnAtPm9wdGlvblsnWkNfVVNJTkdfUExVR0lOX0xJU1QnXTsNCiAgICAkYXBsID0gZXhwbG9kZSgnfCcsICRwbCk7DQogICAgJGFwbCA9IGFycmF5X3VuaXF1ZSgkYXBsKTsNCiAgICBmb3JlYWNoICgkYXBsIGFzICRuYW1lKSB7DQogICAgICAgIGZvcmVhY2ggKCRhbGxwbHVnaW5zIGFzICRwbHVnaW4pIHsNCiAgICAgICAgICAgIGlmICgkbmFtZSA9PSAkcGx1Z2luLT5pZCkgew0KICAgICAgICAgICAgICAgICRwbHVnaW5zW10gPSAkcGx1Z2luOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KICAgIGZvcmVhY2ggKCRhbGxwbHVnaW5zIGFzICRwbHVnaW4pIHsNCiAgICAgICAgaWYgKCEkcGx1Z2luLT5Jc1VzZWQoKSkgew0KICAgICAgICAgICAgJHBsdWdpbnNbXSA9ICRwbHVnaW47DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBmb3JlYWNoICgkcGx1Z2lucyBhcyAkcGx1Z2luKSB7DQogICAgICAgIGVjaG8gJzx0cj4nOw0KICAgICAgICBlY2hvICc8dGQgY2xhc3M9InRkNSB0ZENlbnRlcicgLiAoJHBsdWdpbi0+dHlwZSA9PSAncGx1Z2luJyA/ICcgcGx1Z2luJyA6ICcnKSAuICgkcGx1Z2luLT5Jc1VzZWQoKSA/ICcgcGx1Z2luLW9uJyA6ICcnKSAuICciIGRhdGEtcGx1Z2luaWQ9IicgLiBodG1sc3BlY2lhbGNoYXJzKCRwbHVnaW4tPmlkKSAuICciPjxpbWcgJyAuICgkcGx1Z2luLT5Jc1VzZWQoKSA/ICcnIDogJ3N0eWxlPSJvcGFjaXR5OjAuMiInKSAuICcgc3JjPSInIC4gJHBsdWdpbi0+R2V0TG9nbygpIC4gJyIgYWx0PSIiIHdpZHRoPSIzMiIgaGVpZ2h0PSIzMiIgLz48L3RkPic7DQogICAgICAgIGVjaG8gJzx0ZCBjbGFzcz0idGQyNSI+PHNwYW4gY2xhc3M9InBsdWdpbi1ub3RlIiB0aXRsZT0iJyAuIGh0bWxzcGVjaWFsY2hhcnMoJHBsdWdpbi0+bm90ZSkgLiAnIj4nIC4gaHRtbHNwZWNpYWxjaGFycygkcGx1Z2luLT5uYW1lKSAuICcgJyAuIGh0bWxzcGVjaWFsY2hhcnMoJHBsdWdpbi0+dmVyc2lvbikgLiAnPC9zcGFuPjwvdGQ+JzsNCiAgICAgICAgZWNobyAnPHRkIGNsYXNzPSJ0ZDIwIj48YSBocmVmPSInIC4gaHRtbHNwZWNpYWxjaGFycygkcGx1Z2luLT5hdXRob3JfdXJsKSAuICciIHRhcmdldD0iX2JsYW5rIj4nIC4gaHRtbHNwZWNpYWxjaGFycygkcGx1Z2luLT5hdXRob3JfbmFtZSkgLiAnPC9hPjwvdGQ+JzsNCiAgICAgICAgZWNobyAnPHRkIGNsYXNzPSJ0ZDIwIj4nIC4gaHRtbHNwZWNpYWxjaGFycygkcGx1Z2luLT5tb2RpZmllZCkgLiAnPC90ZD4nOw0KICAgICAgICBlY2hvICc8dGQgY2xhc3M9InRkMTAgdGRDZW50ZXIiPic7DQoNCiAgICAgICAgaWYgKCRwbHVnaW4tPnR5cGUgPT0gJ3BsdWdpbicpIHsNCiAgICAgICAgICAgIGlmICgkcGx1Z2luLT5Jc1VzZWQoKSkgew0KICAgICAgICAgICAgICAgIGVjaG8gJzxhIGhyZWY9IicgLiBCdWlsZFNhZmVDbWRVUkwoJ2FjdD1QbHVnaW5EaXMmYW1wO25hbWU9JyAuIGh0bWxzcGVjaWFsY2hhcnMoJHBsdWdpbi0+aWQpKSAuICciIHRpdGxlPSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2Rpc2FibGUnXSAuICciPjxpbWcgd2lkdGg9IjE2IiBhbHQ9IicgLiAkemJwLT5sYW5nWydtc2cnXVsnZGlzYWJsZSddIC4gJyIgc3JjPSIuLi9pbWFnZS9hZG1pbi9jb250cm9sLXBvd2VyLnBuZyIvPjwvYT4nOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICBlY2hvICc8YSBocmVmPSInIC4gQnVpbGRTYWZlQ21kVVJMKCdhY3Q9UGx1Z2luRW5iJmFtcDtuYW1lPScgLiBodG1sc3BlY2lhbGNoYXJzKCRwbHVnaW4tPmlkKSkgLiAnIiB0aXRsZT0iJyAuICR6YnAtPmxhbmdbJ21zZyddWydlbmFibGUnXSAuICciPjxpbWcgd2lkdGg9IjE2IiBhbHQ9IicgLiAkemJwLT5sYW5nWydtc2cnXVsnZW5hYmxlJ10gLiAnIiBzcmM9Ii4uL2ltYWdlL2FkbWluL2NvbnRyb2wtcG93ZXItb2ZmLnBuZyIvPjwvYT4nOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGlmICgkcGx1Z2luLT5Jc1VzZWQoKSAmJiAkcGx1Z2luLT5DYW5NYW5hZ2UoKSkgew0KICAgICAgICAgICAgZWNobyAnJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7PGEgaHJlZj0iJyAuICRwbHVnaW4tPkdldE1hbmFnZVVybCgpIC4gJyIgdGl0bGU9IicgLiAkemJwLT5sYW5nWydtc2cnXVsnbWFuYWdlJ10gLiAnIj48aW1nIHdpZHRoPSIxNiIgYWx0PSInIC4gJHpicC0+bGFuZ1snbXNnJ11bJ21hbmFnZSddIC4gJyIgc3JjPSIuLi9pbWFnZS9hZG1pbi9zZXR0aW5nX3Rvb2xzLnBuZyIvPjwvYT4nOw0KICAgICAgICB9DQoNCiAgICAgICAgZWNobyAnPC90ZD4nOw0KDQogICAgICAgIGVjaG8gJzwvdHI+JzsNCiAgICB9DQogICAgZWNobyAnPC90YWJsZT4nOw0KICAgIGVjaG8gJzwvZGl2Pic7DQogICAgZWNobyAnPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPkFjdGl2ZUxlZnRNZW51KCJhUGx1Z2luTW5nIik7JzsNCiAgICBlY2hvICdBZGRIZWFkZXJJY29uKCInIC4gJHpicC0+aG9zdCAuICd6Yl9zeXN0ZW0vaW1hZ2UvY29tbW9uL3BsdWdpbl8zMi5wbmcnIC4gJyIpOyQoIi5wbHVnaW4tbm90ZSIpLnRvb2x0aXAoKTs8L3NjcmlwdD4nOw0KfQ0KDQovLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KLyoqDQogKiDlkI7lj7DnvZHnq5norr7nva7nrqHnkIYuDQogKi8NCmZ1bmN0aW9uIEFkbWluX1NldHRpbmdNbmcoKQ0Kew0KICAgIGdsb2JhbCAkemJwOw0KDQogICAgZWNobyAnPGRpdiBjbGFzcz0iZGl2SGVhZGVyIj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3NldHRpbmdzJ10gLiAnPC9kaXY+JzsNCiAgICBlY2hvICc8ZGl2IGNsYXNzPSJTdWJNZW51Ij4nOw0KICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX0FkbWluX1NldHRpbmdNbmdfU3ViTWVudSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAkZnBuYW1lKCk7DQogICAgfQ0KICAgIGVjaG8gJzwvZGl2Pic7ID8+DQoNCiAgICAgICAgICA8Zm9ybSBtZXRob2Q9InBvc3QiIGFjdGlvbj0iPD9waHAgZWNobyBCdWlsZFNhZmVDbWRVUkwoJ2FjdD1TZXR0aW5nU2F2Jyk7ID8+IiBvbnN1Ym1pdD0icmV0dXJuIGNoZWNrRG9tYWluKCk7Ij4NCiAgICAgICAgICAgIDxkaXYgaWQ9ImRpdk1haW4yIj4NCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudC1ib3giPjwhLS0gU3RhcnQgQ29udGVudCBCb3ggLS0+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250ZW50LWJveC1oZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJjb250ZW50LWJveC10YWJzIj4NCiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9IiN0YWIxIiBjbGFzcz0iZGVmYXVsdC10YWIiPjxzcGFuPjw/cGhwIGVjaG8gJHpicC0+bGFuZ1snbXNnJ11bJ2Jhc2ljX3NldHRpbmcnXSA/Pjwvc3Bhbj48L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9IiN0YWIyIj48c3Bhbj48P3BocCBlY2hvICR6YnAtPmxhbmdbJ21zZyddWydnbG9iYWxfc2V0dGluZyddID8+PC9zcGFuPjwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iI3RhYjMiPjxzcGFuPjw/cGhwIGVjaG8gJHpicC0+bGFuZ1snbXNnJ11bJ3BhZ2Vfc2V0dGluZyddID8+PC9zcGFuPjwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iI3RhYjQiPjxzcGFuPjw/cGhwIGVjaG8gJHpicC0+bGFuZ1snbXNnJ11bJ2NvbW1lbnRfc2V0dGluZyddID8+PC9zcGFuPjwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgPC91bD4NCiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8IS0tIEVuZCAuY29udGVudC1ib3gtaGVhZGVyIC0tPg0KDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudC1ib3gtY29udGVudCI+DQo8P3BocA0KICAgICRkZWNvZGVkQmxvZ0hvc3QgPSAkemJwLT5vcHRpb25bJ1pDX0JMT0dfSE9TVCddOw0KICAgIGlmIChzdHJpcG9zKCR6YnAtPm9wdGlvblsnWkNfQkxPR19IT1NUJ10sICcveG4tLScpICE9PSBmYWxzZSAmJiBmdW5jdGlvbl9leGlzdHMoJ21iX3N0cnRvbG93ZXInKSkgew0KICAgICAgICAkUHVueWNvZGUgPSBuZXcgUHVueWNvZGUoKTsNCiAgICAgICAgJGRlY29kZWRCbG9nSG9zdCA9ICRQdW55Y29kZS0+ZGVjb2RlKCR6YnAtPm9wdGlvblsnWkNfQkxPR19IT1NUJ10pOw0KICAgIH0NCg0KICAgIGVjaG8gJzxkaXYgY2xhc3M9InRhYi1jb250ZW50IGRlZmF1bHQtdGFiIiBzdHlsZT0iYm9yZGVyOm5vbmU7cGFkZGluZzowcHg7bWFyZ2luOjA7IiBpZD0idGFiMSI+JzsNCiAgICBlY2hvICc8dGFibGUgc3R5bGU9InBhZGRpbmc6MHB4O21hcmdpbjowcHg7d2lkdGg6MTAwJTsiIGNsYXNzPSJ0YWJsZV9ob3ZlciB0YWJsZV9zdHJpcGVkIj4nOw0KICAgIGVjaG8gJzx0cj48dGQgY2xhc3M9InRkMjUiPjxwPjxiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnYmxvZ19ob3N0J10gLiAnPC9iPjxici8+PHNwYW4gY2xhc3M9Im5vdGUiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnYmxvZ19ob3N0X2FkZCddIC4gJzwvc3Bhbj48L3A+PC90ZD48dGQ+PHA+PGlucHV0IGlkPSJaQ19CTE9HX0hPU1QiIG5hbWU9IlpDX0JMT0dfSE9TVCIgc3R5bGU9IndpZHRoOjYwMHB4OyIgdHlwZT0idGV4dCIgdmFsdWU9IicgLiAkZGVjb2RlZEJsb2dIb3N0IC4gJyIgJyAuICgkemJwLT5vcHRpb25bJ1pDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFJ10gPyAnJyA6ICdyZWFkb25seT0icmVhZG9ubHkiICcpIC4gJ29uaW5wdXQ9ImRpc2FibGVTdWJtaXQoJCh0aGlzKS52YWwoKSkiIC8+Jm5ic3A7Jm5ic3A7PHNwYW4gY2xhc3M9ImpzLXRpcCI+PC9zcGFuPic7DQogICAgZWNobyAnPHA+PGxhYmVsIG9uY2xpY2s9IiQoXCcjWkNfQkxPR19IT1NUXCcpLnByb3AoXCdyZWFkb25seVwnLCAkKFwnI1pDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFXCcpLnZhbCgpPT0wP3RydWU6ZmFsc2UpOyAgIGlmKCQoXCcjWkNfUEVSTUFORU5UX0RPTUFJTl9FTkFCTEVcJykudmFsKCk9PTApe2VuYWJsZVN1Ym1pdCgpOyQodGhpcykucGFyZW50KCkubmV4dCgpLmhpZGUoKTskKFwnLmpzLXRpcFwnKS5odG1sKFwnXCcpO31lbHNlIHtkaXNhYmxlU3VibWl0KCk7JCh0aGlzKS5wYXJlbnQoKS5uZXh0KCkuc2hvdygpO30iPjxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iWkNfUEVSTUFORU5UX0RPTUFJTl9FTkFCTEUiIG5hbWU9IlpDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFIiBjbGFzcz0iY2hlY2tib3giIHZhbHVlPSInIC4gJHpicC0+b3B0aW9uWydaQ19QRVJNQU5FTlRfRE9NQUlOX0VOQUJMRSddIC4gJyIvPjwvbGFiZWw+JyAuICR6YnAtPmxhbmdbJ21zZyddWydwZXJtYW5lbnRfZG9tYWluJ10gLiAnPHNwYW4gc3R5bGU9ImRpc3BsYXk6bm9uZTsiPjwvc3Bhbj48L3A+JzsNCiAgICBlY2hvICc8c2NyaXB0Pg0KdmFyIGJDaGVjayA9IGZhbHNlOw0KZnVuY3Rpb24gZGlzYWJsZVN1Ym1pdChuZXd1cmwpew0KICAgIGJDaGVjayA9IHRydWU7DQp9DQpmdW5jdGlvbiBlbmFibGVTdWJtaXQobmV3dXJsKXsNCiAgICBiQ2hlY2sgPSBmYWxzZTsNCn0NCmZ1bmN0aW9uIGNoZWNrRG9tYWluKCl7DQogICAgaWYoYkNoZWNrID09PSBmYWxzZSlyZXR1cm4gdHJ1ZTsNCiAgICBpZihiQ2hlY2sgPT09IHRydWUpew0KICAgICAgICB2YXIgaSA9IGNoYW5nZURvbWFpbigkKFwnI1pDX0JMT0dfSE9TVFwnKS52YWwoKSk7DQogICAgICAgIGlmKGkgPT09IHRydWUpDQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgZWxzZQ0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIH0NCn0NCmZ1bmN0aW9uIGNoYW5nZURvbWFpbihuZXd1cmwpew0KICAgIHZhciB0b2tlbiA9ICInIC4gQ3JlYXRlV2ViVG9rZW4oIiIsIHRpbWUoKSArIDM2MDApIC4gJyI7DQogICAgbmV3dXJsID0gbmV3dXJsLnJlcGxhY2UoIiAiLCIiKTsNCiAgICBpZihuZXd1cmwuc3Vic3RyKG5ld3VybC5sZW5ndGgtMSwxKSAhPSAiLyIgKXsNCiAgICAgICAgbmV3dXJsID0gbmV3dXJsICsgIi8iOw0KICAgIH0NCiAgICB1cmwgPSBibG9naG9zdCArICJ6Yl9zeXN0ZW0vY21kLnBocD9hY3Q9bWlzYyZ0eXBlPXBpbmcmdG9rZW49IiArIHRva2VuOw0KICAgICQoIi5qcy10aXAiKS5odG1sKCI8ZW0+JyAuICR6YnAtPmxhbmdbJ21zZyddWyd2ZXJpZnlpbmcnXSAuICc8L2VtPiIpOw0KICAgICQuZ2V0SlNPTih1cmwse3VybDpuZXd1cmx9LGZ1bmN0aW9uKGRhdGEpIHsNCiAgICAgICAgaWYgKGRhdGEpIHsNCiAgICAgICAgICAkKCIuanMtdGlwIikuaHRtbChkYXRhLmVyci5tc2cpOw0KICAgICAgICAgIGlmKGRhdGEuZXJyLmNvZGUgPT0gMCl7DQogICAgICAgICAgICBlbmFibGVTdWJtaXQoKTsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgIH0NCiAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsNCiAgICAgICAgICBkaXNhYmxlU3VibWl0KCk7DQogICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgICB9KS5mYWlsKGZ1bmN0aW9uKCkgew0KICAgICAgICAkKCIuanMtdGlwIikuaHRtbCgiPGVtPicgLiAkemJwLT5sYW5nWydtc2cnXVsndmVyaWZ5X2ZhaWwnXSAuICc8L2VtPiIpOw0KICAgICAgICBjb25zb2xlLmxvZyggImVycm9yIiApOw0KICAgICAgICBkaXNhYmxlU3VibWl0KCk7DQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgIH0pOw0KfQ0KICAgIDwvc2NyaXB0Pic7DQogICAgZWNobyAnPC90ZD48L3RyPic7DQogICAgZWNobyAnPHRyPjx0ZD48cD48Yj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2Jsb2dfbmFtZSddIC4gJzwvYj48L3A+PC90ZD48dGQ+PHA+PGlucHV0IGlkPSJaQ19CTE9HX05BTUUiIG5hbWU9IlpDX0JMT0dfTkFNRSIgc3R5bGU9IndpZHRoOjYwMHB4OyIgdHlwZT0idGV4dCIgdmFsdWU9IicgLiBodG1sc3BlY2lhbGNoYXJzKCR6YnAtPm9wdGlvblsnWkNfQkxPR19OQU1FJ10pIC4gJyIgLz48L3A+PC90ZD48L3RyPic7DQogICAgZWNobyAnPHRyPjx0ZD48cD48Yj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2Jsb2dfc3VibmFtZSddIC4gJzwvYj48L3A+PC90ZD48dGQ+PHA+PGlucHV0IGlkPSJaQ19CTE9HX1NVQk5BTUUiIG5hbWU9IlpDX0JMT0dfU1VCTkFNRSIgc3R5bGU9IndpZHRoOjYwMHB4OyIgIHR5cGU9InRleHQiIHZhbHVlPSInIC4gaHRtbHNwZWNpYWxjaGFycygkemJwLT5vcHRpb25bJ1pDX0JMT0dfU1VCTkFNRSddKSAuICciIC8+PC9wPjwvdGQ+PC90cj4nOw0KICAgIGVjaG8gJzx0cj48dGQ+PHA+PGI+JyAuICR6YnAtPmxhbmdbJ21zZyddWydjb3B5cmlnaHQnXSAuICc8L2I+PGJyLz48c3BhbiBjbGFzcz0ibm90ZSI+JyAuICR6YnAtPmxhbmdbJ21zZyddWydjb3B5cmlnaHRfYWRkJ10gLiAnPC9zcGFuPjwvcD48L3RkPjx0ZD48cD48dGV4dGFyZWEgY29scz0iMyIgcm93cz0iNiIgaWQ9IlpDX0JMT0dfQ09QWVJJR0hUIiBuYW1lPSJaQ19CTE9HX0NPUFlSSUdIVCIgc3R5bGU9IndpZHRoOjYwMHB4OyI+JyAuIGh0bWxzcGVjaWFsY2hhcnMoJHpicC0+b3B0aW9uWydaQ19CTE9HX0NPUFlSSUdIVCddKSAuICc8L3RleHRhcmVhPjwvcD48L3RkPjwvdHI+JzsNCg0KICAgIGVjaG8gJzwvdGFibGU+JzsNCiAgICBlY2hvICc8L2Rpdj4nOw0KDQogICAgZWNobyAnPGRpdiBjbGFzcz0idGFiLWNvbnRlbnQiIHN0eWxlPSJib3JkZXI6bm9uZTtwYWRkaW5nOjBweDttYXJnaW46MDsiIGlkPSJ0YWIyIj4nOw0KICAgIGVjaG8gJzx0YWJsZSBzdHlsZT0icGFkZGluZzowcHg7bWFyZ2luOjBweDt3aWR0aDoxMDAlOyIgY2xhc3M9InRhYmxlX2hvdmVyIHRhYmxlX3N0cmlwZWQiPic7DQoNCiAgICBlY2hvICc8dHI+PHRkIGNsYXNzPSJ0ZDI1Ij48cD48Yj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2Jsb2dfdGltZXpvbmUnXSAuICc8L2I+PC9wPjwvdGQ+PHRkPjxwPjxzZWxlY3QgaWQ9IlpDX1RJTUVfWk9ORV9OQU1FIiBuYW1lPSJaQ19USU1FX1pPTkVfTkFNRSIgc3R5bGU9IndpZHRoOjYwMHB4OyIgPic7DQogICAgZWNobyBDcmVhdGVPcHRpb25zT2ZUaW1lWm9uZSgkemJwLT5vcHRpb25bJ1pDX1RJTUVfWk9ORV9OQU1FJ10pOw0KICAgIGVjaG8gJzwvc2VsZWN0PjwvcD48L3RkPjwvdHI+JzsNCiAgICBlY2hvICc8dHI+PHRkPjxwPjxiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnYmxvZ19sYW5ndWFnZSddIC4gJzwvYj48L3A+PC90ZD48dGQ+PHA+PHNlbGVjdCBpZD0iWkNfQkxPR19MQU5HVUFHRVBBQ0siIG5hbWU9IlpDX0JMT0dfTEFOR1VBR0VQQUNLIiBzdHlsZT0id2lkdGg6NjAwcHg7IiA+JzsNCiAgICBlY2hvIENyZWF0ZU9wdGlvbnNPZkxhbmcoJHpicC0+b3B0aW9uWydaQ19CTE9HX0xBTkdVQUdFUEFDSyddKTsNCiAgICBlY2hvICc8L3NlbGVjdD48L3A+PC90ZD48L3RyPic7DQoNCiAgICBlY2hvICc8dHI+PHRkPjxwPjxiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnYWxsb3dfdXBsb2FkX3R5cGUnXSAuICc8L2I+PC9wPjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iWkNfVVBMT0FEX0ZJTEVUWVBFIiBuYW1lPSJaQ19VUExPQURfRklMRVRZUEUiIHN0eWxlPSJ3aWR0aDo2MDBweDsiIHR5cGU9InRleHQiIHZhbHVlPSInIC4gaHRtbHNwZWNpYWxjaGFycygkemJwLT5vcHRpb25bJ1pDX1VQTE9BRF9GSUxFVFlQRSddKSAuICciIC8+PC9wPjwvdGQ+PC90cj4nOw0KICAgIGVjaG8gJzx0cj48dGQ+PHA+PGI+JyAuICR6YnAtPmxhbmdbJ21zZyddWydhbGxvd191cGxvYWRfc2l6ZSddIC4gJzwvYj48L3A+PC90ZD48dGQ+PHA+PGlucHV0IGlkPSJaQ19VUExPQURfRklMRVNJWkUiIG5hbWU9IlpDX1VQTE9BRF9GSUxFU0laRSIgc3R5bGU9IndpZHRoOjYwMHB4OyIgdHlwZT0idGV4dCIgdmFsdWU9IicgLiAkemJwLT5vcHRpb25bJ1pDX1VQTE9BRF9GSUxFU0laRSddIC4gJyIgLz48L3A+PC90ZD48L3RyPic7DQogICAgZWNobyAnPHRyPjx0ZD48cD48Yj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2RlYnVnX21vZGUnXSAuICc8L2I+PC9wPjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iWkNfREVCVUdfTU9ERSIgbmFtZT0iWkNfREVCVUdfTU9ERSIgdHlwZT0idGV4dCIgdmFsdWU9IicgLiAkemJwLT5vcHRpb25bJ1pDX0RFQlVHX01PREUnXSAuICciIGNsYXNzPSJjaGVja2JveCIvPjwvcD48L3RkPjwvdHI+JzsNCiAgICBlY2hvICc8dHI+PHRkPjxwPjxiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnYWRkaXRpb25hbF9zZWN1cml0eSddIC4gJzwvYj48L3A+PC90ZD48dGQ+PHA+PGlucHV0IGlkPSJaQ19BRERJVElPTkFMX1NFQ1VSSVRZIiBuYW1lPSJaQ19BRERJVElPTkFMX1NFQ1VSSVRZIiB0eXBlPSJ0ZXh0IiB2YWx1ZT0iJyAuICR6YnAtPm9wdGlvblsnWkNfQURESVRJT05BTF9TRUNVUklUWSddIC4gJyIgY2xhc3M9ImNoZWNrYm94Ii8+PC9wPjwvdGQ+PC90cj4nOw0KICAgIC8vZWNobyAnPHRyPjx0ZD48cD48Yj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2d6aXBfY29tcHJlc3MnXSAuICc8L2I+PC9wPjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iWkNfR1pJUF9FTkFCTEUiIG5hbWU9IlpDX0daSVBfRU5BQkxFIiB0eXBlPSJ0ZXh0IiB2YWx1ZT0iJyAuICR6YnAtPm9wdGlvblsnWkNfR1pJUF9FTkFCTEUnXSAuICciIGNsYXNzPSJjaGVja2JveCIvPjwvcD48L3RkPjwvdHI+JzsNCiAgICBlY2hvICc8dHI+PHRkPjxwPjxiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnc3ludGF4X2hpZ2hfbGlnaHRlciddIC4gJzwvYj48L3A+PC90ZD48dGQ+PHA+PGlucHV0IGlkPSJaQ19TWU5UQVhISUdITElHSFRFUl9FTkFCTEUiIG5hbWU9IlpDX1NZTlRBWEhJR0hMSUdIVEVSX0VOQUJMRSIgdHlwZT0idGV4dCIgdmFsdWU9IicgLiAkemJwLT5vcHRpb25bJ1pDX1NZTlRBWEhJR0hMSUdIVEVSX0VOQUJMRSddIC4gJyIgY2xhc3M9ImNoZWNrYm94Ii8+PC9wPjwvdGQ+PC90cj4nOw0KDQogICAgZWNobyAnPHRyPjx0ZD48cD48Yj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3VzaW5nX2Nkbl9ndWVzdF90eXBlJ10gLiAnPC9iPjwvcD48L3RkPjx0ZD48cD48c2VsZWN0IGlkPSJaQ19VU0lOR19DRE5fR1VFU1RJUF9UWVBFIiBuYW1lPSJaQ19VU0lOR19DRE5fR1VFU1RJUF9UWVBFIiBzdHlsZT0id2lkdGg6NjAwcHg7IiA+JzsNCiAgICBlY2hvIENyZWF0ZU9wdGlvbnNPZkd1ZXN0SVBUeXBlKCR6YnAtPm9wdGlvblsnWkNfVVNJTkdfQ0ROX0dVRVNUSVBfVFlQRSddKTsNCiAgICBlY2hvICc8L3NlbGVjdD48L3A+PC90ZD48L3RyPic7DQoNCiAgICBlY2hvICc8dHI+PHRkPjxwPjxiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnY2xvc2Vfc2l0ZSddIC4gJzwvYj48L3A+PC90ZD48dGQ+PHA+PGlucHV0IGlkPSJaQ19DTE9TRV9TSVRFIiBuYW1lPSJaQ19DTE9TRV9TSVRFIiB0eXBlPSJ0ZXh0IiB2YWx1ZT0iJyAuICR6YnAtPm9wdGlvblsnWkNfQ0xPU0VfU0lURSddIC4gJyIgY2xhc3M9ImNoZWNrYm94Ii8+PC9wPjwvdGQ+PC90cj4nOw0KDQogICAgZWNobyAnPC90YWJsZT4nOw0KICAgIGVjaG8gJzwvZGl2Pic7DQogICAgZWNobyAnPGRpdiBjbGFzcz0idGFiLWNvbnRlbnQiIHN0eWxlPSJib3JkZXI6bm9uZTtwYWRkaW5nOjBweDttYXJnaW46MDsiIGlkPSJ0YWIzIj4nOw0KICAgIGVjaG8gJzx0YWJsZSBzdHlsZT0icGFkZGluZzowcHg7bWFyZ2luOjBweDt3aWR0aDoxMDAlOyIgY2xhc3M9InRhYmxlX2hvdmVyIHRhYmxlX3N0cmlwZWQiPic7DQoNCiAgICBlY2hvICc8dHI+PHRkPjxwPjxiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnZGlzcGxheV9jb3VudCddIC4gJzwvYj48L3A+PC90ZD48dGQ+PHA+PGlucHV0IGlkPSJaQ19ESVNQTEFZX0NPVU5UIiBuYW1lPSJaQ19ESVNQTEFZX0NPVU5UIiBzdHlsZT0id2lkdGg6NjAwcHg7IiB0eXBlPSJ0ZXh0IiB2YWx1ZT0iJyAuICR6YnAtPm9wdGlvblsnWkNfRElTUExBWV9DT1VOVCddIC4gJyIgLz48L3A+PC90ZD48L3RyPic7DQogICAgZWNobyAnPHRyPjx0ZD48cD48Yj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2Rpc3BsYXlfc3ViY2F0ZWdvcnlzJ10gLiAnPC9iPjwvcD48L3RkPjx0ZD48cD48aW5wdXQgaWQ9IlpDX0RJU1BMQVlfU1VCQ0FURUdPUllTIiBuYW1lPSJaQ19ESVNQTEFZX1NVQkNBVEVHT1JZUyIgdHlwZT0idGV4dCIgdmFsdWU9IicgLiAkemJwLT5vcHRpb25bJ1pDX0RJU1BMQVlfU1VCQ0FURUdPUllTJ10gLiAnIiBjbGFzcz0iY2hlY2tib3giLz48L3A+PC90ZD48L3RyPic7DQogICAgZWNobyAnPHRyPjx0ZD48cD48Yj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ3BhZ2ViYXJfY291bnQnXSAuICc8L2I+PC9wPjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iWkNfUEFHRUJBUl9DT1VOVCIgbmFtZT0iWkNfUEFHRUJBUl9DT1VOVCIgc3R5bGU9IndpZHRoOjYwMHB4OyIgdHlwZT0idGV4dCIgdmFsdWU9IicgLiAkemJwLT5vcHRpb25bJ1pDX1BBR0VCQVJfQ09VTlQnXSAuICciIC8+PC9wPjwvdGQ+PC90cj4nOw0KICAgIGVjaG8gJzx0cj48dGQ+PHA+PGI+JyAuICR6YnAtPmxhbmdbJ21zZyddWydzZWFyY2hfY291bnQnXSAuICc8L2I+PC9wPjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iWkNfU0VBUkNIX0NPVU5UIiBuYW1lPSJaQ19TRUFSQ0hfQ09VTlQiIHN0eWxlPSJ3aWR0aDo2MDBweDsiIHR5cGU9InRleHQiIHZhbHVlPSInIC4gJHpicC0+b3B0aW9uWydaQ19TRUFSQ0hfQ09VTlQnXSAuICciIC8+PC9wPjwvdGQ+PC90cj4nOw0KICAgIGVjaG8gJzx0cj48dGQ+PHA+PGI+JyAuICR6YnAtPmxhbmdbJ21zZyddWydtYW5hZ2VfY291bnQnXSAuICc8L2I+PC9wPjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iWkNfTUFOQUdFX0NPVU5UIiBuYW1lPSJaQ19NQU5BR0VfQ09VTlQiIHN0eWxlPSJ3aWR0aDo2MDBweDsiIHR5cGU9InRleHQiIHZhbHVlPSInIC4gJHpicC0+b3B0aW9uWydaQ19NQU5BR0VfQ09VTlQnXSAuICciIC8+PC9wPjwvdGQ+PC90cj4nOw0KICAgIGVjaG8gJzwvdGFibGU+JzsNCiAgICBlY2hvICc8L2Rpdj4nOw0KICAgIGVjaG8gJzxkaXYgY2xhc3M9InRhYi1jb250ZW50IiBzdHlsZT0iYm9yZGVyOm5vbmU7cGFkZGluZzowcHg7bWFyZ2luOjA7IiBpZD0idGFiNCI+JzsNCiAgICBlY2hvICc8dGFibGUgc3R5bGU9InBhZGRpbmc6MHB4O21hcmdpbjowcHg7d2lkdGg6MTAwJTsiIGNsYXNzPSJ0YWJsZV9ob3ZlciB0YWJsZV9zdHJpcGVkIj4nOw0KDQogICAgZWNobyAnPHRyPjx0ZCBjbGFzcz0idGQyNSI+PHA+PGI+JyAuICR6YnAtPmxhbmdbJ21zZyddWydjb21tZW50X3R1cm5vZmYnXSAuICc8L2I+PC9wPjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iWkNfQ09NTUVOVF9UVVJOT0ZGIiBuYW1lPSJaQ19DT01NRU5UX1RVUk5PRkYiIHR5cGU9InRleHQiIHZhbHVlPSInIC4gJHpicC0+b3B0aW9uWydaQ19DT01NRU5UX1RVUk5PRkYnXSAuICciIGNsYXNzPSJjaGVja2JveCIvPjwvcD48L3RkPjwvdHI+JzsNCiAgICBlY2hvICc8dHI+PHRkIGNsYXNzPSJ0ZDI1Ij48cD48Yj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2NvbW1lbnRfYXVkaXQnXSAuICc8L2I+PGJyLz48c3BhbiBjbGFzcz0ibm90ZSI+JyAuICR6YnAtPmxhbmdbJ21zZyddWydjb21tZW50X2F1ZGl0X2NvbW1lbnQnXSAuICc8L3NwYW4+PC9wPjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iWkNfQ09NTUVOVF9BVURJVCIgbmFtZT0iWkNfQ09NTUVOVF9BVURJVCIgdHlwZT0idGV4dCIgdmFsdWU9IicgLiAkemJwLT5vcHRpb25bJ1pDX0NPTU1FTlRfQVVESVQnXSAuICciIGNsYXNzPSJjaGVja2JveCIvPjwvcD48L3RkPjwvdHI+JzsNCiAgICBlY2hvICc8dHI+PHRkPjxwPjxiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnY29tbWVudF9yZXZlcnNlX29yZGVyJ10gLiAnPC9iPjwvcD48L3RkPjx0ZD48cD48aW5wdXQgaWQ9IlpDX0NPTU1FTlRfUkVWRVJTRV9PUkRFUiIgbmFtZT0iWkNfQ09NTUVOVF9SRVZFUlNFX09SREVSIiB0eXBlPSJ0ZXh0IiB2YWx1ZT0iJyAuICR6YnAtPm9wdGlvblsnWkNfQ09NTUVOVF9SRVZFUlNFX09SREVSJ10gLiAnIiBjbGFzcz0iY2hlY2tib3giLz48L3A+PC90ZD48L3RyPic7DQogICAgZWNobyAnPHRyPjx0ZD48cD48Yj4nIC4gJHpicC0+bGFuZ1snbXNnJ11bJ2NvbW1lbnRzX2Rpc3BsYXlfY291bnQnXSAuICc8L2I+PC9wPjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iWkNfQ09NTUVOVFNfRElTUExBWV9DT1VOVCIgbmFtZT0iWkNfQ09NTUVOVFNfRElTUExBWV9DT1VOVCIgdHlwZT0idGV4dCIgdmFsdWU9IicgLiAkemJwLT5vcHRpb25bJ1pDX0NPTU1FTlRTX0RJU1BMQVlfQ09VTlQnXSAuICciICBzdHlsZT0id2lkdGg6NjAwcHg7IiAvPjwvcD48L3RkPjwvdHI+JzsNCiAgICBlY2hvICc8dHI+PHRkPjxwPjxiPicgLiAkemJwLT5sYW5nWydtc2cnXVsnY29tbWVudF92ZXJpZnlfZW5hYmxlJ10gLiAnPC9iPjwvcD48L3RkPjx0ZD48cD48aW5wdXQgaWQ9IlpDX0NPTU1FTlRfVkVSSUZZX0VOQUJMRSIgbmFtZT0iWkNfQ09NTUVOVF9WRVJJRllfRU5BQkxFIiB0eXBlPSJ0ZXh0IiB2YWx1ZT0iJyAuICR6YnAtPm9wdGlvblsnWkNfQ09NTUVOVF9WRVJJRllfRU5BQkxFJ10gLiAnIiBjbGFzcz0iY2hlY2tib3giLz48L3A+PC90ZD48L3RyPic7DQoNCiAgICBlY2hvICc8L3RhYmxlPic7DQogICAgZWNobyAnPC9kaXY+JzsgPz4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8IS0tIEVuZCAuY29udGVudC1ib3gtY29udGVudCAtLT4NCg0KICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgPGhyLz4NCiAgICAgICAgICAgICAgPHA+PGlucHV0IHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ1dHRvbiIgdmFsdWU9Ijw/cGhwIGVjaG8gJHpicC0+bGFuZ1snbXNnJ11bJ3N1Ym1pdCddID8+IiBpZD0iYnRuUG9zdCIgb25jbGljaz0iIiAvPjwvcD4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgIDwvZm9ybT4NCjw/cGhwDQoNCiAgICBlY2hvICc8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+QWN0aXZlVG9wTWVudSgidG9wbWVudTIiKTs8L3NjcmlwdD4nOw0KICAgIGVjaG8gJzxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5BZGRIZWFkZXJJY29uKCInIC4gJHpicC0+aG9zdCAuICd6Yl9zeXN0ZW0vaW1hZ2UvY29tbW9uL3NldHRpbmdfMzIucG5nJyAuICciKTs8L3NjcmlwdD4nOw0KfQ0K</file>
	<file name='zb_system\function\lib\dbsql.php' crc32='6DE96AC3'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\template.php' crc32='C1F2F1D'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoqDQogKiDmqKHmnb/nsbsuIA0KICovDQpjbGFzcyBUZW1wbGF0ZQ0Kew0KICAgIHByb3RlY3RlZCAkcGF0aCA9IG51bGw7DQogICAgcHJvdGVjdGVkICRlbnRyeVBhZ2UgPSBudWxsOw0KICAgIHByb3RlY3RlZCAkdW5jb21waWxlZENvZGVTdG9yZSA9IGFycmF5KCk7DQogICAgcHVibGljICR0aGVtZSA9ICIiOw0KICAgIHB1YmxpYyAkdGVtcGxhdGVzID0gYXJyYXkoKTsNCiAgICBwdWJsaWMgJGNvbXBpbGVkVGVtcGxhdGVzID0gYXJyYXkoKTsNCiAgICBwdWJsaWMgJHRlbXBsYXRlVGFncyA9IGFycmF5KCk7DQogICAgcHVibGljICRzdGF0aWNUYWdzID0gYXJyYXkoKTsNCg0KICAgIC8qKg0KICAgICAqIEB2YXIgYXJyYXkg6buY6K6k5L6n5qCPDQogICAgICovDQogICAgcHVibGljICRzaWRlYmFyID0gYXJyYXkoKTsNCiAgICAvKioNCiAgICAgKiBAdmFyIGFycmF5IOS+p+agjzINCiAgICAgKi8NCiAgICBwdWJsaWMgJHNpZGViYXIyID0gYXJyYXkoKTsNCiAgICAvKioNCiAgICAgKiBAdmFyIGFycmF5IOS+p+agjzMNCiAgICAgKi8NCiAgICBwdWJsaWMgJHNpZGViYXIzID0gYXJyYXkoKTsNCiAgICAvKioNCiAgICAgKiBAdmFyIGFycmF5IOS+p+agjzQNCiAgICAgKi8NCiAgICBwdWJsaWMgJHNpZGViYXI0ID0gYXJyYXkoKTsNCiAgICAvKioNCiAgICAgKiBAdmFyIGFycmF5IOS+p+agjzUNCiAgICAgKi8NCiAgICBwdWJsaWMgJHNpZGViYXI1ID0gYXJyYXkoKTsNCiAgICAvKioNCiAgICAgKiBAdmFyIGFycmF5IOS+p+agjzYNCiAgICAgKi8NCiAgICBwdWJsaWMgJHNpZGViYXI2ID0gYXJyYXkoKTsNCiAgICAvKioNCiAgICAgKiBAdmFyIGFycmF5IOS+p+agjzc3DQogICAgICovDQogICAgcHVibGljICRzaWRlYmFyNyA9IGFycmF5KCk7DQogICAgLyoqDQogICAgICogQHZhciBhcnJheSDkvqfmoI84DQogICAgICovDQogICAgcHVibGljICRzaWRlYmFyOCA9IGFycmF5KCk7DQogICAgLyoqDQogICAgICogQHZhciBhcnJheSDkvqfmoI85DQogICAgICovDQogICAgcHVibGljICRzaWRlYmFyOSA9IGFycmF5KCk7DQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoKQ0KICAgIHsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHBhdGgNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gU2V0UGF0aCgkcGF0aCkNCiAgICB7DQogICAgICAgICR0aGlzLT5wYXRoID0gJHBhdGg7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHJldHVybiBudWxsDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldFBhdGgoKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5wYXRoOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkbmFtZQ0KICAgICAqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEhhc1RlbXBsYXRlKCRuYW1lKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuIGZpbGVfZXhpc3RzKCR0aGlzLT5wYXRoIC4gJy8nIC4gJG5hbWUgLiAnLnBocCcpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkbmFtZQ0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gR2V0VGVtcGxhdGUoJG5hbWUpDQogICAgew0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9UZW1wbGF0ZV9HZXRUZW1wbGF0ZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkdGhpcywgJG5hbWUpOw0KICAgICAgICAgICAgaWYgKCRmcHNpZ25hbCA9PSBQTFVHSU5fRVhJVFNJR05BTF9SRVRVUk4pIHsNCiAgICAgICAgICAgICAgICAkZnBzaWduYWwgPSBQTFVHSU5fRVhJVFNJR05BTF9OT05FOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuICRmcHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkdGhpcy0+cGF0aCAuICRuYW1lIC4gJy5waHAnOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkdGVtcGxhdGVuYW1lDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFNldFRlbXBsYXRlKCR0ZW1wbGF0ZW5hbWUpDQogICAgew0KICAgICAgICAkdGhpcy0+ZW50cnlQYWdlID0gJHRlbXBsYXRlbmFtZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJG5hbWUNCiAgICAgKg0KICAgICAqIEByZXR1cm4gbWl4ZWQNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gJkdldFRhZ3MoJG5hbWUpDQogICAgew0KICAgICAgICByZXR1cm4gJHRoaXMtPnRlbXBsYXRlVGFnc1skbmFtZV07DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRuYW1lDQogICAgICogQHBhcmFtICR2YWx1ZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBTZXRUYWdzKCRuYW1lLCAkdmFsdWUpDQogICAgew0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWyRuYW1lXSA9ICR2YWx1ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcmV0dXJuIGFycmF5DQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uICZHZXRUYWdzQWxsKCkNCiAgICB7DQogICAgICAgIHJldHVybiAkdGhpcy0+dGVtcGxhdGVUYWdzOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkYXJyYXkNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gU2V0VGFnc0FsbCgmJGFycmF5KQ0KICAgIHsNCiAgICAgICAgaWYgKGlzX2FycmF5KCRhcnJheSkpIHsNCiAgICAgICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3MgPSAkYXJyYXkgKyAkdGhpcy0+dGVtcGxhdGVUYWdzOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog57yW6K+R5omA5pyJ5paH5Lu2Lg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDb21waWxlRmlsZXMoKQ0KICAgIHsNCiAgICAgICAgZm9yZWFjaCAoJHRoaXMtPnRlbXBsYXRlcyBhcyAkbmFtZSA9PiAkY29udGVudCkgew0KICAgICAgICAgICAgJHMgPSBSZW1vdmVCT00oJHRoaXMtPkNvbXBpbGVGaWxlKCRjb250ZW50KSk7DQogICAgICAgICAgICBAZmlsZV9wdXRfY29udGVudHMoJHRoaXMtPnBhdGggLiAkbmFtZSAuICcucGhwJywgJHMpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5Yid5aeL5YyW5bm257yW6K+R5omA5pyJ5paH5Lu2Lg0KICAgICAqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEJ1aWxkVGVtcGxhdGUoKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQoNCiAgICAgICAgLy8g5Yid5aeL5YyW5qih5p2/DQogICAgICAgIGlmICghZmlsZV9leGlzdHMoJHRoaXMtPnBhdGgpKSB7DQogICAgICAgICAgICBAbWtkaXIoJHRoaXMtPnBhdGgsIDA3NTUsIHRydWUpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgZm9yZWFjaCAoR2V0RmlsZXNJbkRpcigkdGhpcy0+cGF0aCwgJ3BocCcpIGFzICRmdWxsbmFtZSkgew0KICAgICAgICAgICAgICAgIEB1bmxpbmsoJGZ1bGxuYW1lKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICAkdGhpcy0+YWRkTm9uZXhpc3RlbmRUYWdzKCk7DQoNCiAgICAgICAgJHRoaXMtPkNvbXBpbGVGaWxlcygpOw0KDQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBhZGROb25leGlzdGVuZFRhZ3MoKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQogICAgICAgICR0ZW1wbGF0ZXMgPSAmJHRoaXMtPnRlbXBsYXRlczsNCg0KICAgICAgICBpZiAoc3RycG9zKCR0ZW1wbGF0ZXNbJ2NvbW1lbnRzJ10sICdBamF4Q29tbWVudEJlZ2luJykgPT09IGZhbHNlKSB7DQogICAgICAgICAgICAkdGVtcGxhdGVzWydjb21tZW50cyddID0gJzxsYWJlbCBpZD0iQWpheENvbW1lbnRCZWdpbiI+PC9sYWJlbD4nIC4gJHRlbXBsYXRlc1snY29tbWVudHMnXTsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChzdHJwb3MoJHRlbXBsYXRlc1snY29tbWVudHMnXSwgJ0FqYXhDb21tZW50RW5kJykgPT09IGZhbHNlKSB7DQogICAgICAgICAgICAkdGVtcGxhdGVzWydjb21tZW50cyddID0gJHRlbXBsYXRlc1snY29tbWVudHMnXSAuICc8bGFiZWwgaWQ9IkFqYXhDb21tZW50RW5kIj48L2xhYmVsPic7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoc3RycG9zKCR0ZW1wbGF0ZXNbJ2NvbW1lbnQnXSwgJ2lkPSJjbXR7JGNvbW1lbnQuSUR9IicpID09PSBmYWxzZSAmJiBzdHJwb3MoJHRlbXBsYXRlc1snY29tbWVudCddLCAnaWQ9XCdjbXR7JGNvbW1lbnQuSUR9XCcnKSA9PT0gZmFsc2UpIHsNCiAgICAgICAgICAgICR0ZW1wbGF0ZXNbJ2NvbW1lbnQnXSA9ICc8bGFiZWwgaWQ9ImNtdHskY29tbWVudC5JRH0iPjwvbGFiZWw+JyAuICR0ZW1wbGF0ZXNbJ2NvbW1lbnQnXTsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChzdHJwb3MoJHRlbXBsYXRlc1snY29tbWVudHBvc3QnXSwgJ2lucFZlcmlmeScpID09PSBmYWxzZSAmJiBzdHJwb3MoJHRlbXBsYXRlc1snY29tbWVudHBvc3QnXSwgJz1cJ3ZlcmlmeVwnJykgPT09IGZhbHNlICYmIHN0cnBvcygkdGVtcGxhdGVzWydjb21tZW50cG9zdCddLCAnPSJ2ZXJpZnkiJykgPT09IGZhbHNlKSB7DQogICAgICAgICAgICAkdmVyaWZ5ID0gJ3t0ZW1wbGF0ZTpjb21tZW50cG9zdC12ZXJpZnl9JzsNCg0KICAgICAgICAgICAgaWYgKHN0cnBvcygkdGVtcGxhdGVzWydjb21tZW50cG9zdCddLCAnPCEtLXZlcmlmeS0tPicpICE9PSBmYWxzZSkgew0KICAgICAgICAgICAgICAgICR0ZW1wbGF0ZXNbJ2NvbW1lbnRwb3N0J10gPSBzdHJfcmVwbGFjZSgnPCEtLXZlcmlmeS0tPicsICR2ZXJpZnksICR0ZW1wbGF0ZXNbJ2NvbW1lbnRwb3N0J10pOw0KICAgICAgICAgICAgfSBlbHNlaWYgKHN0cnBvcygkdGVtcGxhdGVzWydjb21tZW50cG9zdCddLCAnPC9mb3JtPicpKSB7DQogICAgICAgICAgICAgICAgJHRlbXBsYXRlc1snY29tbWVudHBvc3QnXSA9IHN0cl9yZXBsYWNlKCc8L2Zvcm0+JywgJHZlcmlmeSAuICc8L2Zvcm0+JywgJHRlbXBsYXRlc1snY29tbWVudHBvc3QnXSk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICR0ZW1wbGF0ZXNbJ2NvbW1lbnRwb3N0J10gLj0gJHZlcmlmeTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChzdHJwb3MoJHRlbXBsYXRlc1snaGVhZGVyJ10sICd7JGhlYWRlcn0nKSA9PT0gZmFsc2UpIHsNCiAgICAgICAgICAgIGlmIChzdHJwb3MoJHRlbXBsYXRlc1snaGVhZGVyJ10sICc8L2hlYWQ+JykgIT09IGZhbHNlKSB7DQogICAgICAgICAgICAgICAgJHRlbXBsYXRlc1snaGVhZGVyJ10gPSBzdHJfcmVwbGFjZSgnPC9oZWFkPicsICd7JGhlYWRlcn0nIC4gJzwvaGVhZD4nLCAkdGVtcGxhdGVzWydoZWFkZXInXSk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICR0ZW1wbGF0ZXNbJ2hlYWRlciddIC49ICd7JGhlYWRlcn0nOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKHN0cnBvcygkdGVtcGxhdGVzWydmb290ZXInXSwgJ3skZm9vdGVyfScpID09PSBmYWxzZSkgew0KICAgICAgICAgICAgaWYgKHN0cnBvcygkdGVtcGxhdGVzWydmb290ZXInXSwgJzwvYm9keT4nKSAhPT0gZmFsc2UpIHsNCiAgICAgICAgICAgICAgICAkdGVtcGxhdGVzWydmb290ZXInXSA9IHN0cl9yZXBsYWNlKCc8L2JvZHk+JywgJ3skZm9vdGVyfScgLiAnPC9ib2R5PicsICR0ZW1wbGF0ZXNbJ2Zvb3RlciddKTsNCiAgICAgICAgICAgIH0gZWxzZWlmIChzdHJwb3MoJHRlbXBsYXRlc1snZm9vdGVyJ10sICc8L2h0bWw+JykgIT09IGZhbHNlKSB7DQogICAgICAgICAgICAgICAgJHRlbXBsYXRlc1snZm9vdGVyJ10gPSBzdHJfcmVwbGFjZSgnPC9odG1sPicsICd7JGZvb3Rlcn0nIC4gJzwvaHRtbD4nLCAkdGVtcGxhdGVzWydmb290ZXInXSk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICR0ZW1wbGF0ZXNbJ2Zvb3RlciddID0gJ3skZm9vdGVyfScgLiAkdGVtcGxhdGVzWydmb290ZXInXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkY29udGVudA0KICAgICAqDQogICAgICogQHJldHVybiBtaXhlZA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDb21waWxlRmlsZSgkY29udGVudCkNCiAgICB7DQogICAgICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX1RlbXBsYXRlX0NvbXBpbGluZ19CZWdpbiddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkdGhpcywgJGNvbnRlbnQpOw0KICAgICAgICAgICAgaWYgKCRmcHNpZ25hbCA9PSBQTFVHSU5fRVhJVFNJR05BTF9SRVRVUk4pIHsNCiAgICAgICAgICAgICAgICAkZnBzaWduYWwgPSBQTFVHSU5fRVhJVFNJR05BTF9OT05FOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuICRmcHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIC8vIFN0ZXAgMTog5pu/5o2iPD9waHDlnZcNCiAgICAgICAgJHRoaXMtPnJlbW92ZV9waHBfYmxvY2tzKCRjb250ZW50KTsNCiAgICAgICAgLy8gU3RlcCAyOiDlpITnkIbkuI3nvJbor5HnmoTku6PnoIENCiAgICAgICAgJHRoaXMtPnBhcnNlX3VuY29tcGlsZV9jb2RlKCRjb250ZW50KTsNCiAgICAgICAgLy8gU3RlcCAzOiDlvJXlhaXkuLvpopgNCiAgICAgICAgJHRoaXMtPnBhcnNlX3RlbXBsYXRlKCRjb250ZW50KTsNCiAgICAgICAgLy8gU3RlcCA0OiDop6PmnpBtb2R1bGUNCiAgICAgICAgJHRoaXMtPnBhcnNlX21vZHVsZSgkY29udGVudCk7DQogICAgICAgIC8vIFN0ZXAgNTog5aSE55CG5rOo6YeKDQogICAgICAgICR0aGlzLT5wYXJzZV9jb21tZW50cygkY29udGVudCk7DQogICAgICAgIC8vIFN0ZXAgNjog5pu/5o2i6YWN572uDQogICAgICAgICR0aGlzLT5wYXJzZV9vcHRpb24oJGNvbnRlbnQpOw0KICAgICAgICAvLyBTdGVwIDc6IOabv+aNouagh+etvg0KICAgICAgICAkdGhpcy0+cGFyc2VfdmFycygkY29udGVudCk7DQogICAgICAgIC8vIFN0ZXAgODog5pu/5o2i5Ye95pWwDQogICAgICAgICR0aGlzLT5wYXJzZV9mdW5jdGlvbigkY29udGVudCk7DQogICAgICAgIC8vIFN0ZXAgOTog6Kej5p6QSWYNCiAgICAgICAgJHRoaXMtPnBhcnNlX2lmKCRjb250ZW50KTsNCiAgICAgICAgLy8gU3RlcCAxMDog6Kej5p6QZm9yZWFjaA0KICAgICAgICAkdGhpcy0+cGFyc2VfZm9yZWFjaCgkY29udGVudCk7DQogICAgICAgIC8vIFN0ZXAgMTE6IOino+aekGZvcg0KICAgICAgICAkdGhpcy0+cGFyc2VfZm9yKCRjb250ZW50KTsNCiAgICAgICAgLy8gU3RlcCBOOiDmgaLlpI3kuI3nvJbor5HnmoTku6PnoIENCiAgICAgICAgJHRoaXMtPnBhcnNlX2JhY2tfdW5jb21waWxlX2NvZGUoJGNvbnRlbnQpOw0KDQogICAgICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX1RlbXBsYXRlX0NvbXBpbGluZ19FbmQnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHRoaXMsICRjb250ZW50KTsNCiAgICAgICAgICAgIGlmICgkZnBzaWduYWwgPT0gUExVR0lOX0VYSVRTSUdOQUxfUkVUVVJOKSB7DQogICAgICAgICAgICAgICAgJGZwc2lnbmFsID0gUExVR0lOX0VYSVRTSUdOQUxfTk9ORTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiAkZnByZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gJGNvbnRlbnQ7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRjb250ZW50DQogICAgICovDQogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHJlbW92ZV9waHBfYmxvY2tzKCYkY29udGVudCkNCiAgICB7DQogICAgICAgIC8v5Li65LqG5qih5p2/5pu05aW955yLDQogICAgICAgICRjb250ZW50ID0gc3RyX3JlcGxhY2UoJ3twaHB9PCcgLiAnP3BocCcsICd7cGhwfScsICRjb250ZW50KTsNCiAgICAgICAgJGNvbnRlbnQgPSBzdHJfcmVwbGFjZSgnPycgLiAnPnsvcGhwfScsICd7L3BocH0nLCAkY29udGVudCk7DQogICAgICAgICRjb250ZW50ID0gcHJlZ19yZXBsYWNlKCIvXDxcP3BocFtcZFxEXSs/XD9cPi9zaSIsICcnLCAkY29udGVudCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRjb250ZW50DQogICAgICovDQogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHBhcnNlX2NvbW1lbnRzKCYkY29udGVudCkNCiAgICB7DQogICAgICAgICRjb250ZW50ID0gcHJlZ19yZXBsYWNlKCcvXHtcKihbXlx9XSspXCpcfS8nLCAne3BocH0gLyokMSovIHsvcGhwfScsICRjb250ZW50KTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJGNvbnRlbnQNCiAgICAgKi8NCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gcGFyc2VfdW5jb21waWxlX2NvZGUoJiRjb250ZW50KQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPnVuY29tcGlsZWRDb2RlU3RvcmUgPSBhcnJheSgpOw0KICAgICAgICAkbWF0Y2hlcyA9IGFycmF5KCk7DQogICAgICAgIGlmICgkaSA9IHByZWdfbWF0Y2hfYWxsKCcvXHsocGhwfHByZSlcfShbXERcZF0rPylce1wvKHBocHxwcmUpXH0vc2knLCAkY29udGVudCwgJG1hdGNoZXMpID4gMCkgew0KICAgICAgICAgICAgaWYgKGlzc2V0KCRtYXRjaGVzWzJdKSkgew0KICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRtYXRjaGVzWzJdIGFzICRqID0+ICRwKSB7DQogICAgICAgICAgICAgICAgICAgICRjb250ZW50ID0gc3RyX3JlcGxhY2UoJHAsICc8IS0tIHBhcnNlX21pZGRsZV9jb2RlJyAuICRqIC4gJy0tPicsICRjb250ZW50KTsNCiAgICAgICAgICAgICAgICAgICAgJHRoaXMtPnVuY29tcGlsZWRDb2RlU3RvcmVbJGpdID0gYXJyYXkoDQogICAgICAgICAgICAgICAgICAgICAgICAndHlwZScgICAgPT4gJG1hdGNoZXNbMV1bJGpdLA0KICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbnRlbnQnID0+ICRwLA0KICAgICAgICAgICAgICAgICAgICApOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkY29udGVudA0KICAgICAqLw0KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBwYXJzZV9iYWNrX3VuY29tcGlsZV9jb2RlKCYkY29udGVudCkNCiAgICB7DQogICAgICAgIGZvcmVhY2ggKCR0aGlzLT51bmNvbXBpbGVkQ29kZVN0b3JlIGFzICRqID0+ICRwKSB7DQogICAgICAgICAgICBpZiAoJHBbJ3R5cGUnXSA9PSAncGhwJykgew0KICAgICAgICAgICAgICAgICRjb250ZW50ID0gc3RyX3JlcGxhY2UoJ3twaHB9PCEtLSBwYXJzZV9taWRkbGVfY29kZScgLiAkaiAuICctLT57L3BocH0nLCAnPCcgLiAnP3BocCAnIC4gJHBbJ2NvbnRlbnQnXSAuICcgPycgLiAnPicsICRjb250ZW50KTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgJGNvbnRlbnQgPSBzdHJfcmVwbGFjZSgNCiAgICAgICAgICAgICAgICAgICAgJ3snIC4gJHBbJ3R5cGUnXSAuICd9PCEtLSBwYXJzZV9taWRkbGVfY29kZScgLiAkaiAuICctLT57LycgLiAkcFsndHlwZSddIC4gJ30nLA0KICAgICAgICAgICAgICAgICAgICAkcFsnY29udGVudCddLA0KICAgICAgICAgICAgICAgICAgICAkY29udGVudA0KICAgICAgICAgICAgICAgICk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAkY29udGVudCA9IHByZWdfcmVwbGFjZSgnL1x7cGhwXH0oW1xEXGRdKz8pXHtcL3BocFx9LycsICc8JyAuICc/cGhwICQxID8nIC4gJz4nLCAkY29udGVudCk7DQogICAgICAgICR0aGlzLT51bmNvbXBpbGVkQ29kZVN0b3JlID0gYXJyYXkoKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJGNvbnRlbnQNCiAgICAgKi8NCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gcGFyc2VfdGVtcGxhdGUoJiRjb250ZW50KQ0KICAgIHsNCiAgICAgICAgJGNvbnRlbnQgPSBwcmVnX3JlcGxhY2UoJy9ce3RlbXBsYXRlOihbXlx9XSspXH0vJywgJ3twaHB9IGluY2x1ZGUgJHRoaXMtPkdldFRlbXBsYXRlKFwnJDFcJyk7IHsvcGhwfScsICRjb250ZW50KTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJGNvbnRlbnQNCiAgICAgKi8NCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gcGFyc2VfbW9kdWxlKCYkY29udGVudCkNCiAgICB7DQogICAgICAgICRjb250ZW50ID0gcHJlZ19yZXBsYWNlKCcvXHttb2R1bGU6KFteXH1dKylcfS8nLCAne3BocH0gaWYoaXNzZXQoJG1vZHVsZXNbXCckMVwnXSkpe2VjaG8gJG1vZHVsZXNbXCckMVwnXS0+Q29udGVudDt9IHsvcGhwfScsICRjb250ZW50KTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJGNvbnRlbnQNCiAgICAgKi8NCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gcGFyc2Vfb3B0aW9uKCYkY29udGVudCkNCiAgICB7DQogICAgICAgICRjb250ZW50ID0gcHJlZ19yZXBsYWNlKCcjXHtcIyhbXlx9XSspXCNcfSMnLCAnPD9waHAgaWYoZGVmaW5lZCh0cmltKFwnXFwxXCcpKSl7ZWNobyBcXDE7fWVsc2V7ZWNobyAkb3B0aW9uW1wnXFwxXCddO30gPz4nLCAkY29udGVudCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRjb250ZW50DQogICAgICovDQogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHBhcnNlX3ZhcnMoJiRjb250ZW50KQ0KICAgIHsNCiAgICAgICAgJGNvbnRlbnQgPSBwcmVnX3JlcGxhY2VfY2FsbGJhY2soJyNce1wkKD8hXCgpKFteXH1dKylcfSMnLCBhcnJheSgkdGhpcywgJ3BhcnNlX3ZhcnNfcmVwbGFjZV9kb3QnKSwgJGNvbnRlbnQpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkY29udGVudA0KICAgICAqLw0KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBwYXJzZV9mdW5jdGlvbigmJGNvbnRlbnQpDQogICAgew0KICAgICAgICAkY29udGVudCA9IHByZWdfcmVwbGFjZV9jYWxsYmFjaygnL1x7KFthLXpBLVowLTlfXSs/KVwoKC4qPylcKVx9LycsIGFycmF5KCR0aGlzLCAncGFyc2VfZnVudGlvbl9yZXBsYWNlX2RvdCcpLCAkY29udGVudCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRjb250ZW50DQogICAgICovDQogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHBhcnNlX2lmKCYkY29udGVudCkNCiAgICB7DQogICAgICAgIHdoaWxlIChwcmVnX21hdGNoKCcvXHtpZiBbXlxuXH1dK1x9Lio/XHtcL2lmXH0vcycsICRjb250ZW50KSkgew0KICAgICAgICAgICAgJGNvbnRlbnQgPSBwcmVnX3JlcGxhY2VfY2FsbGJhY2soDQogICAgICAgICAgICAgICAgJy9ce2lmIChbXlxuXH1dKylcfSguKj8pXHtcL2lmXH0vcycsDQogICAgICAgICAgICAgICAgYXJyYXkoJHRoaXMsICdwYXJzZV9pZl9zdWInKSwNCiAgICAgICAgICAgICAgICAkY29udGVudA0KICAgICAgICAgICAgKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkbWF0Y2hlcw0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcNCiAgICAgKi8NCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gcGFyc2VfaWZfc3ViKCRtYXRjaGVzKQ0KICAgIHsNCiAgICAgICAgJGNvbnRlbnQgPSBwcmVnX3JlcGxhY2VfY2FsbGJhY2soDQogICAgICAgICAgICAnL1x7ZWxzZWlmIChbXlxuXH1dKylcfS8nLA0KICAgICAgICAgICAgYXJyYXkoJHRoaXMsICdwYXJzZV9lbHNlaWYnKSwNCiAgICAgICAgICAgICRtYXRjaGVzWzJdDQogICAgICAgICk7DQoNCiAgICAgICAgJGlmZXhwID0gc3RyX3JlcGxhY2UoJG1hdGNoZXNbMV0sICR0aGlzLT5yZXBsYWNlX2RvdCgkbWF0Y2hlc1sxXSksICRtYXRjaGVzWzFdKTsNCg0KICAgICAgICAkY29udGVudCA9IHN0cl9yZXBsYWNlKCd7ZWxzZX0nLCAne3BocH19ZWxzZXsgey9waHB9JywgJGNvbnRlbnQpOw0KDQogICAgICAgIHJldHVybiAiPD9waHAgaWYgKCRpZmV4cCkgeyA/PiRjb250ZW50PD9waHAgfSA/PiI7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRtYXRjaGVzDQogICAgICoNCiAgICAgKiBAcmV0dXJuIHN0cmluZw0KICAgICAqLw0KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBwYXJzZV9lbHNlaWYoJG1hdGNoZXMpDQogICAgew0KICAgICAgICAkaWZleHAgPSBzdHJfcmVwbGFjZSgkbWF0Y2hlc1sxXSwgJHRoaXMtPnJlcGxhY2VfZG90KCRtYXRjaGVzWzFdKSwgJG1hdGNoZXNbMV0pOw0KDQogICAgICAgIHJldHVybiAie3BocH19ZWxzZWlmKCRpZmV4cCkgeyB7L3BocH0iOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkY29udGVudA0KICAgICAqLw0KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBwYXJzZV9mb3JlYWNoKCYkY29udGVudCkNCiAgICB7DQogICAgICAgIHdoaWxlIChwcmVnX21hdGNoKCcvXHtmb3JlYWNoKC4rPylcfSguKz8pe1wvZm9yZWFjaH0vcycsICRjb250ZW50KSkgew0KICAgICAgICAgICAgJGNvbnRlbnQgPSBwcmVnX3JlcGxhY2VfY2FsbGJhY2soDQogICAgICAgICAgICAgICAgJy9ce2ZvcmVhY2goLis/KVx9KC4rPyl7XC9mb3JlYWNofS9zJywNCiAgICAgICAgICAgICAgICBhcnJheSgkdGhpcywgJ3BhcnNlX2ZvcmVhY2hfc3ViJyksDQogICAgICAgICAgICAgICAgJGNvbnRlbnQNCiAgICAgICAgICAgICk7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJG1hdGNoZXMNCiAgICAgKg0KICAgICAqIEByZXR1cm4gc3RyaW5nDQogICAgICovDQogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHBhcnNlX2ZvcmVhY2hfc3ViKCRtYXRjaGVzKQ0KICAgIHsNCiAgICAgICAgJGV4cCA9ICR0aGlzLT5yZXBsYWNlX2RvdCgkbWF0Y2hlc1sxXSk7DQogICAgICAgICRjb2RlID0gJG1hdGNoZXNbMl07DQoNCiAgICAgICAgcmV0dXJuICJ7cGhwfSBmb3JlYWNoICgkZXhwKSB7ey9waHB9JGNvZGV7cGhwfX0gIHsvcGhwfSI7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRjb250ZW50DQogICAgICovDQogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHBhcnNlX2ZvcigmJGNvbnRlbnQpDQogICAgew0KICAgICAgICB3aGlsZSAocHJlZ19tYXRjaCgnL1x7Zm9yKC4rPylcfSguKz8pe1wvZm9yfS9zJywgJGNvbnRlbnQpKSB7DQogICAgICAgICAgICAkY29udGVudCA9IHByZWdfcmVwbGFjZV9jYWxsYmFjaygNCiAgICAgICAgICAgICAgICAnL1x7Zm9yKC4rPylcfSguKz8pe1wvZm9yfS9zJywNCiAgICAgICAgICAgICAgICBhcnJheSgkdGhpcywgJ3BhcnNlX2Zvcl9zdWInKSwNCiAgICAgICAgICAgICAgICAkY29udGVudA0KICAgICAgICAgICAgKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkbWF0Y2hlcw0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcNCiAgICAgKi8NCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gcGFyc2VfZm9yX3N1YigkbWF0Y2hlcykNCiAgICB7DQogICAgICAgICRleHAgPSAkdGhpcy0+cmVwbGFjZV9kb3QoJG1hdGNoZXNbMV0pOw0KICAgICAgICAkY29kZSA9ICRtYXRjaGVzWzJdOw0KDQogICAgICAgIHJldHVybiAie3BocH0gZm9yKCRleHApIHt7L3BocH0gJGNvZGV7cGhwfSB9ICB7L3BocH0iOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkbWF0Y2hlcw0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcNCiAgICAgKi8NCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gcGFyc2VfdmFyc19yZXBsYWNlX2RvdCgkbWF0Y2hlcykNCiAgICB7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoJz0+JywgJycsICRtYXRjaGVzWzFdKTsNCiAgICAgICAgaWYgKHN0cnBvcygkcywgJz0nKSA9PT0gZmFsc2UpIHsNCiAgICAgICAgICAgIHJldHVybiAne3BocH0gZWNobyAkJyAuICR0aGlzLT5yZXBsYWNlX2RvdCgkbWF0Y2hlc1sxXSkgLiAnOyB7L3BocH0nOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgcmV0dXJuICd7cGhwfSAkJyAuICR0aGlzLT5yZXBsYWNlX2RvdCgkbWF0Y2hlc1sxXSkgLiAnOyB7L3BocH0nOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRtYXRjaGVzDQogICAgICoNCiAgICAgKiBAcmV0dXJuIHN0cmluZw0KICAgICAqLw0KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBwYXJzZV9mdW50aW9uX3JlcGxhY2VfZG90KCRtYXRjaGVzKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICd7cGhwfSBlY2hvICcgLiAkbWF0Y2hlc1sxXSAuICcoJyAuICR0aGlzLT5yZXBsYWNlX2RvdCgkbWF0Y2hlc1syXSkgLiAnKTsgey9waHB9JzsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJGNvbnRlbnQNCiAgICAgKg0KICAgICAqIEByZXR1cm4gbWl4ZWQNCiAgICAgKi8NCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gcmVwbGFjZV9kb3QoJGNvbnRlbnQpDQogICAgew0KICAgICAgICAkYXJyYXkgPSBhcnJheSgpOw0KICAgICAgICBwcmVnX21hdGNoX2FsbCgnLyIuKz8ifFwnLis/XCcvJywgJGNvbnRlbnQsICRhcnJheSwgUFJFR19TRVRfT1JERVIpOw0KICAgICAgICBpZiAoY291bnQoJGFycmF5KSA+IDApIHsNCiAgICAgICAgICAgIGZvcmVhY2ggKCRhcnJheSBhcyAkYSkgew0KICAgICAgICAgICAgICAgICRhID0gJGFbMF07DQogICAgICAgICAgICAgICAgaWYgKHN0cnN0cigkYSwgJy4nKSAhPSBmYWxzZSkgew0KICAgICAgICAgICAgICAgICAgICAkYiA9IHN0cl9yZXBsYWNlKCcuJywgJ3slX2RvdF8lfScsICRhKTsNCiAgICAgICAgICAgICAgICAgICAgJGNvbnRlbnQgPSBzdHJfcmVwbGFjZSgkYSwgJGIsICRjb250ZW50KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgJGNvbnRlbnQgPSBzdHJfcmVwbGFjZSgnIC4gJywgJyB7JV9kb3RfJX0gJywgJGNvbnRlbnQpOw0KICAgICAgICAkY29udGVudCA9IHN0cl9yZXBsYWNlKCcuICcsICd7JV9kb3RfJX0gJywgJGNvbnRlbnQpOw0KICAgICAgICAkY29udGVudCA9IHN0cl9yZXBsYWNlKCcgLicsICcgeyVfZG90XyV9JywgJGNvbnRlbnQpOw0KICAgICAgICAkY29udGVudCA9IHN0cl9yZXBsYWNlKCcuJywgJy0+JywgJGNvbnRlbnQpOw0KICAgICAgICAkY29udGVudCA9IHN0cl9yZXBsYWNlKCd7JV9kb3RfJX0nLCAnLicsICRjb250ZW50KTsNCg0KICAgICAgICByZXR1cm4gJGNvbnRlbnQ7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5pi+56S65qih5p2/DQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRlbnRyeVBhZ2UNCiAgICAgKg0KICAgICAqIEB0aHJvd3MgRXhjZXB0aW9uDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIERpc3BsYXkoJGVudHJ5UGFnZSA9ICIiKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQoNCiAgICAgICAgLy/mraTlpITkvLzkuY7lt67kuIDkuKrmjqXlj6PvvJ8NCiAgICAgICAgLy9mb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9UZW1wbGF0ZV9EaXNwbGF5J10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgIC8vICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHRoaXMsICRlbnRyeVBhZ2UpOw0KICAgICAgICAvL30NCg0KICAgICAgICBpZiAoJGVudHJ5UGFnZSA9PSAiIikgew0KICAgICAgICAgICAgJGVudHJ5UGFnZSA9ICR0aGlzLT5lbnRyeVBhZ2U7DQogICAgICAgIH0NCiAgICAgICAgJGZpbGUgPSAkdGhpcy0+cGF0aCAuICRlbnRyeVBhZ2UgLiAnLnBocCc7DQoNCiAgICAgICAgZm9yZWFjaCAoJHpicC0+bW9kdWxlc2J5ZmlsZW5hbWUgYXMgJG0pIHsNCiAgICAgICAgICAgICRtLT5Db250ZW50ID0gJHRoaXMtPlJlcGxhY2VTdGF0aWNUYWdzKCRtLT5Db250ZW50KTsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmICghaXNfcmVhZGFibGUoJGZpbGUpKSB7DQogICAgICAgICAgICAkemJwLT5TaG93RXJyb3IoODYsIF9fRklMRV9fLCBfX0xJTkVfXyk7DQogICAgICAgIH0NCg0KICAgICAgICAvLyDlhaXlj6PlpITlsIZ0YWdz6YeM55qE5Y+Y6YeP5o+Q5Y2H5YWo5bGADQogICAgICAgIGZvcmVhY2ggKCR0aGlzLT50ZW1wbGF0ZVRhZ3MgYXMgJGtleSA9PiAmJHZhbHVlKSB7DQogICAgICAgICAgICAkJGtleSA9ICYkdmFsdWU7DQogICAgICAgIH0NCg0KICAgICAgICBpbmNsdWRlICRmaWxlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOiOt+WPlui+k+WHuuWGheWuuS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJGVudHJ5UGFnZQ0KICAgICAqDQogICAgICogQHRocm93cyBFeGNlcHRpb24NCiAgICAgKg0KICAgICAqIEByZXR1cm4gc3RyaW5nDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIE91dHB1dCgkZW50cnlQYWdlID0gIiIpDQogICAgew0KICAgICAgICBvYl9zdGFydCgpOw0KICAgICAgICAkdGhpcy0+RGlzcGxheSgkZW50cnlQYWdlKTsNCiAgICAgICAgJGRhdGEgPSBvYl9nZXRfY29udGVudHMoKTsNCiAgICAgICAgb2JfZW5kX2NsZWFuKCk7DQoNCiAgICAgICAgcmV0dXJuICRkYXRhOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOi9veWFpeW3sue8luivkeaooeadv3MuDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIExvYWRDb21waWxlZFRlbXBsYXRlcygpDQogICAgew0KICAgICAgICAkdGVtcGxhdGVzID0gYXJyYXkoKTsNCg0KICAgICAgICAvLyDor7vlj5bkuLvpopjmqKHmnb8NCiAgICAgICAgJGZpbGVzID0gR2V0RmlsZXNJbkRpcigkdGhpcy0+cGF0aCwgJ3BocCcpOw0KICAgICAgICBmb3JlYWNoICgkZmlsZXMgYXMgJHNvcnRuYW1lID0+ICRmdWxsbmFtZSkgew0KICAgICAgICAgICAgJHRlbXBsYXRlc1skc29ydG5hbWVdID0gZmlsZV9nZXRfY29udGVudHMoJGZ1bGxuYW1lKTsNCiAgICAgICAgfQ0KDQogICAgICAgICR0aGlzLT5jb21waWxlZFRlbXBsYXRlcyA9ICR0ZW1wbGF0ZXM7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6L295YWl5pyq57yW6K+R5qih5p2/cy4NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gTG9hZFRlbXBsYXRlcygpDQogICAgew0KICAgICAgICBnbG9iYWwgJHpicDsNCg0KICAgICAgICAkdGhlbWUgPSAkdGhpcy0+dGhlbWU7DQogICAgICAgICR0ZW1wbGF0ZXMgPSBhcnJheSgpOw0KDQogICAgICAgIC8vIOivu+WPlumihOe9ruaooeadvw0KICAgICAgICAkZmlsZXMgPSBHZXRGaWxlc0luRGlyKCR6YnAtPnBhdGggLiAnemJfc3lzdGVtL2RlZmVuZC9kZWZhdWx0LycsICdwaHAnKTsNCiAgICAgICAgZm9yZWFjaCAoJGZpbGVzIGFzICRzb3J0bmFtZSA9PiAkZnVsbG5hbWUpIHsNCiAgICAgICAgICAgICR0ZW1wbGF0ZXNbJHNvcnRuYW1lXSA9IGZpbGVfZ2V0X2NvbnRlbnRzKCRmdWxsbmFtZSk7DQogICAgICAgIH0NCg0KICAgICAgICAvLyDor7vlj5bkuLvpopjmqKHmnb8NCiAgICAgICAgJGZpbGVzID0gR2V0RmlsZXNJbkRpcigkemJwLT51c2Vyc2RpciAuICd0aGVtZS8nIC4gJHRoZW1lIC4gJy90ZW1wbGF0ZS8nLCAncGhwJyk7DQogICAgICAgIGZvcmVhY2ggKCRmaWxlcyBhcyAkc29ydG5hbWUgPT4gJGZ1bGxuYW1lKSB7DQogICAgICAgICAgICAkdGVtcGxhdGVzWyRzb3J0bmFtZV0gPSBmaWxlX2dldF9jb250ZW50cygkZnVsbG5hbWUpOw0KICAgICAgICB9DQoNCiAgICAgICAgZm9yICgkaSA9IDI7ICRpIDwgMTA7ICRpKyspIHsNCiAgICAgICAgICAgIGlmICghaXNzZXQoJHRlbXBsYXRlc1snc2lkZWJhcicgLiAkaV0pKSB7DQogICAgICAgICAgICAgICAgJHRlbXBsYXRlc1snc2lkZWJhcicgLiAkaV0gPSBzdHJfcmVwbGFjZSgnJHNpZGViYXInLCAnJHNpZGViYXInIC4gJGksICR0ZW1wbGF0ZXNbJ3NpZGViYXInXSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVzID0gJHRlbXBsYXRlczsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKuino+aekOaooeadv+agh+etvi4NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gTWFrZVRlbXBsYXRlVGFncygpDQogICAgew0KICAgICAgICBnbG9iYWwgJHpicDsNCg0KICAgICAgICAkb3B0aW9uID0gJHpicC0+b3B0aW9uOw0KICAgICAgICB1bnNldCgkb3B0aW9uWydaQ19CTE9HX0NMU0lEJ10pOw0KICAgICAgICB1bnNldCgkb3B0aW9uWydaQ19TUUxJVEVfTkFNRSddKTsNCiAgICAgICAgdW5zZXQoJG9wdGlvblsnWkNfTVlTUUxfVVNFUk5BTUUnXSk7DQogICAgICAgIHVuc2V0KCRvcHRpb25bJ1pDX01ZU1FMX1BBU1NXT1JEJ10pOw0KICAgICAgICB1bnNldCgkb3B0aW9uWydaQ19NWVNRTF9OQU1FJ10pOw0KICAgICAgICB1bnNldCgkb3B0aW9uWydaQ19NWVNRTF9QT1JUJ10pOw0KICAgICAgICB1bnNldCgkb3B0aW9uWydaQ19NWVNRTF9TRVJWRVInXSk7DQogICAgICAgIHVuc2V0KCRvcHRpb25bJ1pDX1BHU1FMX1VTRVJOQU1FJ10pOw0KICAgICAgICB1bnNldCgkb3B0aW9uWydaQ19QR1NRTF9QQVNTV09SRCddKTsNCiAgICAgICAgdW5zZXQoJG9wdGlvblsnWkNfUEdTUUxfTkFNRSddKTsNCiAgICAgICAgdW5zZXQoJG9wdGlvblsnWkNfUEdTUUxfUE9SVCddKTsNCiAgICAgICAgdW5zZXQoJG9wdGlvblsnWkNfUEdTUUxfU0VSVkVSJ10pOw0KICAgICAgICB1bnNldCgkb3B0aW9uWydaQ19EQVRBQkFTRV9UWVBFJ10pOw0KDQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ3picCddID0gJiR6YnA7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ3VzZXInXSA9ICYkemJwLT51c2VyOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydvcHRpb24nXSA9ICYkb3B0aW9uOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydsYW5nJ10gPSAmJHpicC0+bGFuZzsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1snbGFuZ3MnXSA9ICYkemJwLT5sYW5nczsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1sndmVyc2lvbiddID0gJiR6YnAtPnZlcnNpb247DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ2NhdGVnb3J5cyddID0gJiR6YnAtPmNhdGVnb3JpZXM7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ2NhdGVnb3JpZXMnXSA9ICYkemJwLT5jYXRlZ29yaWVzOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydjYXRlZ29yeXNieW9yZGVyJ10gPSAmJHpicC0+Y2F0ZWdvcmllc2J5b3JkZXI7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ2NhdGVnb3JpZXNieW9yZGVyJ10gPSAmJHpicC0+Y2F0ZWdvcmllc2J5b3JkZXI7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ21vZHVsZXMnXSA9ICYkemJwLT5tb2R1bGVzYnlmaWxlbmFtZTsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1sndGl0bGUnXSA9IGh0bWxzcGVjaWFsY2hhcnMoJHpicC0+dGl0bGUpOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydob3N0J10gPSAmJHpicC0+aG9zdDsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1sncGF0aCddID0gJiR6YnAtPnBhdGg7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ2Nvb2tpZXNwYXRoJ10gPSAmJHpicC0+Y29va2llc3BhdGg7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ25hbWUnXSA9IGh0bWxzcGVjaWFsY2hhcnMoJHpicC0+bmFtZSk7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ3N1Ym5hbWUnXSA9IGh0bWxzcGVjaWFsY2hhcnMoJHpicC0+c3VibmFtZSk7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ3RoZW1lJ10gPSAmJHpicC0+dGhlbWU7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ3RoZW1laW5mbyddID0gJiR6YnAtPnRoZW1laW5mbzsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1snc3R5bGUnXSA9ICYkemJwLT5zdHlsZTsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1snbGFuZ3VhZ2UnXSA9ICR6YnAtPm9wdGlvblsnWkNfQkxPR19MQU5HVUFHRSddOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydjb3B5cmlnaHQnXSA9ICR6YnAtPm9wdGlvblsnWkNfQkxPR19DT1BZUklHSFQnXTsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1snemJsb2dwaHAnXSA9ICR6YnAtPm9wdGlvblsnWkNfQkxPR19QUk9EVUNUX0ZVTEwnXTsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1snemJsb2dwaHBodG1sJ10gPSAkemJwLT5vcHRpb25bJ1pDX0JMT0dfUFJPRFVDVF9GVUxMSFRNTCddOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWyd6YmxvZ3BocGFiYnJodG1sJ10gPSAkemJwLT5vcHRpb25bJ1pDX0JMT0dfUFJPRFVDVF9IVE1MJ107DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ3R5cGUnXSA9ICcnOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydwYWdlJ10gPSAnJzsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1snc29jaWFsY29tbWVudCddID0gJiR6YnAtPnNvY2lhbGNvbW1lbnQ7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ2hlYWRlciddID0gJiR6YnAtPmhlYWRlcjsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1snZm9vdGVyJ10gPSAmJHpicC0+Zm9vdGVyOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWyd2YWxpZGNvZGV1cmwnXSA9ICYkemJwLT52YWxpZGNvZGV1cmw7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ2ZlZWR1cmwnXSA9ICYkemJwLT5mZWVkdXJsOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydzZWFyY2h1cmwnXSA9ICYkemJwLT5zZWFyY2h1cmw7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ2FqYXh1cmwnXSA9ICYkemJwLT5hamF4dXJsOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydpc3NlYXJjaCddID0gZmFsc2U7DQogICAgICAgICRzID0gYXJyYXkoDQogICAgICAgICAgICAkb3B0aW9uWydaQ19TSURFQkFSX09SREVSJ10sDQogICAgICAgICAgICAkb3B0aW9uWydaQ19TSURFQkFSMl9PUkRFUiddLA0KICAgICAgICAgICAgJG9wdGlvblsnWkNfU0lERUJBUjNfT1JERVInXSwNCiAgICAgICAgICAgICRvcHRpb25bJ1pDX1NJREVCQVI0X09SREVSJ10sDQogICAgICAgICAgICAkb3B0aW9uWydaQ19TSURFQkFSNV9PUkRFUiddLA0KICAgICAgICAgICAgJG9wdGlvblsnWkNfU0lERUJBUjZfT1JERVInXSwNCiAgICAgICAgICAgICRvcHRpb25bJ1pDX1NJREVCQVI3X09SREVSJ10sDQogICAgICAgICAgICAkb3B0aW9uWydaQ19TSURFQkFSOF9PUkRFUiddLA0KICAgICAgICAgICAgJG9wdGlvblsnWkNfU0lERUJBUjlfT1JERVInXSwNCiAgICAgICAgKTsNCiAgICAgICAgZm9yZWFjaCAoJHMgYXMgJGsgPT4gJHYpIHsNCiAgICAgICAgICAgICRhID0gZXhwbG9kZSgnfCcsICR2KTsNCiAgICAgICAgICAgICRtcyA9IGFycmF5KCk7DQogICAgICAgICAgICBmb3JlYWNoICgkYSBhcyAkdjIpIHsNCiAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJHpicC0+bW9kdWxlc2J5ZmlsZW5hbWVbJHYyXSkpIHsNCiAgICAgICAgICAgICAgICAgICAgJG0gPSAkemJwLT5tb2R1bGVzYnlmaWxlbmFtZVskdjJdOw0KICAgICAgICAgICAgICAgICAgICAkbXNbXSA9ICRtOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIC8vcmVzZXQoJG1zKTsNCiAgICAgICAgICAgICRzID0gJ3NpZGViYXInIC4gKCRrID09IDAgPyAnJyA6ICRrICsgMSk7DQogICAgICAgICAgICAkdGhpcy0+JHMgPSAkbXM7DQogICAgICAgICAgICAkbXMgPSBudWxsOw0KICAgICAgICB9DQoNCiAgICAgICAgZm9yICgkaSA9IDE7ICRpIDwgMTA7ICRpKyspIHsNCiAgICAgICAgICAgICRqID0gKCRpID09IDEpID8gJycgOiAkaTsNCiAgICAgICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ3NpZGViYXInIC4gJGpdID0gJiR0aGlzLT57J3NpZGViYXInIC4gJGp9Ow0KICAgICAgICB9DQoNCiAgICAgICAgLy9mb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9UZW1wbGF0ZV9NYWtlVGVtcGxhdGV0YWdzJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgIC8vICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHRoaXMtPnRlbXBsYXRlVGFncyk7DQogICAgICAgIC8vfQ0KDQogICAgICAgICR0ID0gYXJyYXkoKTsNCiAgICAgICAgJG8gPSBhcnJheSgpOw0KICAgICAgICBmb3JlYWNoICgkdGhpcy0+dGVtcGxhdGVUYWdzIGFzICRrID0+ICR2KSB7DQogICAgICAgICAgICBpZiAoaXNfc3RyaW5nKCR2KSB8fCBpc19udW1lcmljKCR2KSB8fCBpc19ib29sKCR2KSkgew0KICAgICAgICAgICAgICAgICR0Wyd7JCcgLiAkayAuICd9J10gPSAkdjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICBmb3JlYWNoICgkb3B0aW9uIGFzICRrID0+ICR2KSB7DQogICAgICAgICAgICBpZiAoaXNfc3RyaW5nKCR2KSB8fCBpc19udW1lcmljKCR2KSB8fCBpc19ib29sKCR2KSkgew0KICAgICAgICAgICAgICAgICRvWyd7IycgLiAkayAuICcjfSddID0gJHY7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgJHRoaXMtPnN0YXRpY1RhZ3MgPSAkdCArICRvOw0KICAgIH0NCg0KICAgIHB1YmxpYyBmdW5jdGlvbiBSZXBsYWNlU3RhdGljVGFncygkcykNCiAgICB7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoYXJyYXlfa2V5cygkdGhpcy0+c3RhdGljVGFncyksIGFycmF5X3ZhbHVlcygkdGhpcy0+c3RhdGljVGFncyksICRzKTsNCg0KICAgICAgICByZXR1cm4gJHM7DQogICAgfQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIEdldEN1cnJlbnRUZW1wbGF0ZSgpDQogICAgew0KICAgICAgICByZXR1cm4gJHRoaXMtPmVudHJ5UGFnZTsNCiAgICB9DQp9DQo=</file>
	<file name='zb_system\function\lib\zblogphp.php' crc32='8146BCD6'  dt:dt='bin.base64'></file>
	<file name='zb_system\cmd.php' crc32='E788DF6'  dt:dt='bin.base64'></file>
	<file name='zb_system\admin\admin_top.php' crc32='426D372E'  dt:dt='bin.base64'>PD9waHAgaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOyANCn0gPz4NCjwvaGVhZD4NCjxib2R5IGNsYXNzPSJhZG1pbiBhZG1pbi08P3BocCBlY2hvICRhY3Rpb247ID8+Ij4NCjxoZWFkZXIgY2xhc3M9ImhlYWRlciI+DQogICAgPGRpdiBjbGFzcz0ibG9nbyI+PGEgaHJlZj0iPD9waHAgZWNobyAkYmxvZ2hvc3QgPz4iIHRpdGxlPSI8P3BocCBlY2hvIGh0bWxzcGVjaWFsY2hhcnMoJGJsb2duYW1lKSA/PiIgdGFyZ2V0PSJfYmxhbmsiPjxpbWcgc3JjPSI8P3BocCBlY2hvICRibG9naG9zdCA/PnpiX3N5c3RlbS9pbWFnZS9hZG1pbi9ub25lLmdpZiIgYWx0PSJaLUJsb2ciLz48L2E+PC9kaXY+DQogICAgPGRpdiBjbGFzcz0idXNlciI+IDxhIGhyZWY9Ijw/cGhwIGVjaG8gJGJsb2dob3N0ID8+emJfc3lzdGVtL2NtZC5waHA/YWN0PU1lbWJlckVkdCZhbXA7aWQ9PD9waHAgZWNobyAkemJwLT51c2VyLT5JRCA/PiIgdGl0bGU9Ijw/cGhwIGVjaG8gJGxhbmdbJ21zZyddWydlZGl0J10gPz4iPjxpbWcgc3JjPSI8P3BocCBlY2hvICR6YnAtPnVzZXItPkF2YXRhciA/PiIgd2lkdGg9IjQwIiBoZWlnaHQ9IjQwIiBpZD0iYXZhdGFyIiBhbHQ9IkF2YXRhciIgLz48L2E+DQogICAgICA8ZGl2IGNsYXNzPSJ1c2VybmFtZSI+PD9waHAgZWNobyAkemJwLT51c2VyLT5MZXZlbE5hbWUgPz7vvJo8P3BocCBlY2hvICR6YnAtPnVzZXItPlN0YXRpY05hbWUgPz48L2Rpdj4NCiAgICAgIDxkaXYgY2xhc3M9InVzZXJidG4iPjxhIGNsYXNzPSJwcm9maWxlIiBocmVmPSI8P3BocCBlY2hvICRibG9naG9zdCA/PiIgdGl0bGU9IiIgdGFyZ2V0PSJfYmxhbmsiPjw/cGhwIGVjaG8gJGxhbmdbJ21zZyddWydyZXR1cm5fdG9fc2l0ZSddID8+PC9hPiZuYnNwOyZuYnNwOzxhIGNsYXNzPSJsb2dvdXQiIGhyZWY9Ijw/cGhwIGVjaG8gQnVpbGRTYWZlQ21kVVJMKCdhY3Q9bG9nb3V0Jyk7ID8+IiB0aXRsZT0iIj48P3BocCBlY2hvICRsYW5nWydtc2cnXVsnbG9nb3V0J10gPz48L2E+PC9kaXY+DQogICAgPC9kaXY+DQogICAgPGRpdiBjbGFzcz0ibWVudSI+DQogICAgICA8dWwgaWQ9InRvcG1lbnUiPjw/cGhwIFJlc3BvbnNlQWRtaW5fVG9wTWVudSgpOyA/Pg0KICAgICAgPC91bD4NCiAgICA8L2Rpdj4NCjwvaGVhZGVyPg0KPD9waHAgcmVxdWlyZSBaQlBfUEFUSCAuICd6Yl9zeXN0ZW0vYWRtaW4vYWRtaW5fbGVmdC5waHAnOyA/Pg0KPHNlY3Rpb24gY2xhc3M9Im1haW4iPg0KPD9waHAgJHpicC0+R2V0SGludCgpOyA/Pg0K</file>
	<file name='zb_system\admin\edit.php' crc32='2DE2E0F1'  dt:dt='bin.base64'></file>
	<file name='zb_system\admin\member_edit.php' crc32='629F705A'  dt:dt='bin.base64'></file>
	<file name='zb_system\css\admin2.css' crc32='91CFD7C3'  dt:dt='bin.base64'>QGNoYXJzZXQgInV0Zi04IjsNCg0KLyoNCuS9nOiAhe+8muaWsOmynOS6ug0K5Zyw5Z2A77yaaHR0cDovL3d3dy5odG1saXQuY29tLmNuDQrpgq7nrrHvvJp1MmxlaUB5YWhvby5jb20uY24NCiAgICAgeGlueHJAbXNuLmNvbQ0KKi8NCiogeyBwYWRkaW5nOiAwOyBtYXJnaW46IDA7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH0NCmJvZHkgeyBtaW4td2lkdGg6IDk4MHB4OyBwYWRkaW5nOiAwOyBtYXJnaW46IDA7IGZvbnQtZmFtaWx5OiAiTWljcm9zb2Z0IFlhSGVpIiwgU1RIZWl0aSwgIkhpcmFnaW5vIFNhbnMgR0IiLCAiV2VuUXVhbllpIE1pY3JvIEhlaSIsICJIZWl0aSBTQyIsIE5TaW1TdW4sIFNpbVN1biwgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgY29sb3I6ICMzMzMzMzM7IGZvbnQtc2l6ZTogMTRweDsgfQ0KZGl2LA0KaDEsDQpoMiwNCmgzLA0KaDQsDQpwLA0KZm9ybSwNCnVsLA0KbGFiZWwsDQppbnB1dCwNCnRleHRhcmVhLA0Kc2VsZWN0LA0KaW1nLA0Kc3BhbiB7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgfQ0KYSB7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgY29sb3I6ICMzMzMzMzM7IH0NCmE6aG92ZXIgeyBjb2xvcjogI2Q2MDAwMDsgfQ0KLmNsZWFyIHsgY2xlYXI6IGJvdGg7IH0NCmltZyB7IGJvcmRlcjogbm9uZTsgfQ0KaDEsDQpoMiwNCmgzLA0KaDQsDQpoNSwNCmg2IHsgZGlzcGxheTogYmxvY2s7IGZvbnQtd2VpZ2h0OiBib2xkOyB9DQpoMSB7IGZvbnQtc2l6ZTogMmVtOyBtYXJnaW46IC42N2VtIDA7IH0NCmgyIHsgZm9udC1zaXplOiAxLjVlbTsgbWFyZ2luOiAuODNlbSAwOyB9DQpoMyB7IGZvbnQtc2l6ZTogMS4xN2VtOyBtYXJnaW46IDFlbSAwOyB9DQpoNCB7IGZvbnQtc2l6ZTogMWVtOyBtYXJnaW46IDEuMzNlbSAwOyB9DQpoNSB7IGZvbnQtc2l6ZTogMC44M2VtOyBtYXJnaW46IDEuNjdlbSAwOyB9DQpoNiB7IGZvbnQtc2l6ZTogMC42N2VtOyBtYXJnaW46IDIuMzNlbSAwOyB9DQp1bCwNCm9sLA0KZGwgeyBwYWRkaW5nOiAwOyBtYXJnaW46IDA7IH0NCmRkIHsgcGFkZGluZzogMDsgbWFyZ2luOiAwOyB9DQp1bCB7IGxpc3Qtc3R5bGU6IG5vbmU7IH0NCmxpIHsgbGlzdC1zdHlsZS10eXBlOiBub25lOyB9DQpvbCB7IGxpc3Qtc3R5bGUtdHlwZTogZGVjaW1hbDsgbWFyZ2luLWxlZnQ6IDJlbTsgfQ0KbGFiZWwgeyBjdXJzb3I6IHBvaW50ZXI7IH0NCg0KLyrlkI7lj7Dpobbpg6gqLw0KLmhlYWRlciB7IG1hcmdpbi1ib3R0b206IDVweDsgaGVpZ2h0OiA4NXB4OyBwYWRkaW5nOiAwOyBiYWNrZ3JvdW5kOiAjM2E2ZWE1OyBwb3NpdGlvbjogcmVsYXRpdmU7IH0NCi5oZWFkZXIgLnRvcCB7IH0NCg0KLyoqLw0KLmxvZ28geyB3aWR0aDogMjAwcHg7IGhlaWdodDogNzBweDsgcGFkZGluZzogMTBweCAwIDAgMDsgbGVmdDogMjBweDsgfQ0KLmxvZ28gaW1nIHsgd2lkdGg6IDIwMHB4OyBoZWlnaHQ6IDcwcHg7IHBhZGRpbmc6IDAgMCAwIDA7IGJhY2tncm91bmQ6IHVybCgiLi4vaW1hZ2UvYWRtaW4vbG9nby5wbmciKSBjZW50ZXIgY2VudGVyIG5vLXJlcGVhdDsgfQ0KDQovKiovDQoudXNlciB7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgcmlnaHQ6IDEzcHg7IHRvcDogMTBweDsgd2lkdGg6IDQwMHB4OyBoZWlnaHQ6IDQwcHg7IHRleHQtYWxpZ246IHJpZ2h0OyBjb2xvcjogI2ZmZmZmZjsgfQ0KLnVzZXIgI2F2YXRhciB7IGZsb2F0OiByaWdodDsgd2lkdGg6IDQwcHg7IGhlaWdodDogNDBweDsgbWFyZ2luLWxlZnQ6IDEwcHg7IG1hcmdpbi10b3A6IDBweDsgfQ0KLnVzZXJuYW1lIHsgcGFkZGluZzogMDsgaGVpZ2h0OiAyMHB4OyBsaW5lLWhlaWdodDogMjBweDsgb3ZlcmZsb3c6IGhpZGRlbjsgfQ0KLnVzZXJidG4geyBwYWRkaW5nOiAwOyBoZWlnaHQ6IDIwcHg7IGxpbmUtaGVpZ2h0OiAyMHB4OyB9DQoudXNlcmJ0biBhIHsgcGFkZGluZzogMDsgbWFyZ2luLWxlZnQ6IDE1cHg7IGNvbG9yOiAjZmZmZmZmOyBoZWlnaHQ6IDIwcHg7IGxpbmUtaGVpZ2h0OiAyMHB4OyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9DQoudXNlcmJ0biBhLmxvZ291dCB7IHBhZGRpbmctbGVmdDogMjBweDsgYmFja2dyb3VuZDogdXJsKC4uL2ltYWdlL2NvbW1vbi90dWljXzIucG5nKSBuby1yZXBlYXQgbGVmdCBjZW50ZXI7IH0NCi51c2VyYnRuIC5sb2dvdXQ6aG92ZXIgeyBwYWRkaW5nLWxlZnQ6IDIwcHg7dGV4dC1zaGFkb3c6IDBweCAwcHggMnB4ICNmZmY7IGNvbG9yOiAjZmZmOyBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1hZ2UvY29tbW9uL3R1aWNfMi5wbmcpIG5vLXJlcGVhdCBsZWZ0IGNlbnRlcjsgfQ0KLnVzZXJidG4gYS5wcm9maWxlIHsgcGFkZGluZy1sZWZ0OiAyMHB4OyBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1hZ2UvY29tbW9uL2hvbWVfMi5wbmcpIG5vLXJlcGVhdCBsZWZ0IGNlbnRlcjsgfQ0KLnVzZXJidG4gLnByb2ZpbGU6aG92ZXIgeyBwYWRkaW5nLWxlZnQ6IDIwcHg7dGV4dC1zaGFkb3c6IDBweCAwcHggMnB4ICNmZmY7IGNvbG9yOiAjZmZmOyBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1hZ2UvY29tbW9uL2hvbWVfMi5wbmcpIG5vLXJlcGVhdCBsZWZ0IGNlbnRlcjsgfQ0KDQovKiovDQoubWVudSB7IGhlaWdodDogMzBweDsgcG9zaXRpb246IGFic29sdXRlOyByaWdodDogMTBweDsgYm90dG9tOiAwcHg7IH0NCi5tZW51IHVsIHsgZmxvYXQ6IHJpZ2h0OyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IH0NCi5tZW51IHVsIGxpIHsgZmxvYXQ6IGxlZnQ7IGxpbmUtaGVpZ2h0OiAzMHB4OyBwYWRkaW5nOiAwOyBoZWlnaHQ6IDMwcHg7IG1hcmdpbjogMCAzcHg7IHRleHQtYWxpZ246IGNlbnRlcjsgfQ0KLm1lbnUgdWwgbGkgYSB7IGZsb2F0OiBsZWZ0OyBsaW5lLWhlaWdodDogMzBweDsgaGVpZ2h0OiAzMHB4OyBwYWRkaW5nOiAwcHggMTVweDsgY29sb3I6ICMzMzMzMzM7IGJhY2tncm91bmQ6ICNmZmZmZmY7IH0NCi5tZW51IHVsIGxpIGE6aG92ZXIgeyBmbG9hdDogbGVmdDsgbGluZS1oZWlnaHQ6IDMwcHg7IGhlaWdodDogMzBweDsgcGFkZGluZzogMHB4IDE1cHg7IGNvbG9yOiAjZmZmZmZmOyBiYWNrZ3JvdW5kOiAjYjBjZGVlOyB9DQoubWVudSB1bCBsaS5vbiB7IGZvbnQtd2VpZ2h0OiBib2xkOyB9DQoNCi8q5bem6L655a+86IiqKi8NCi5sZWZ0IHsgZmxvYXQ6IGxlZnQ7IHdpZHRoOiAxNDBweDsgcGFkZGluZzogMHB4OyBvdmVyZmxvdzogaGlkZGVuOyBtYXJnaW46IDAgMCAwIDA7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgfQ0KLmxlZnQgI2xlZnRtZW51IHsgfQ0KLmxlZnQgI2xlZnRtZW51IGxpIHsgZmxvYXQ6IGxlZnQ7IHdpZHRoOiAxNDBweDsgaGVpZ2h0OiAzMnB4OyBtYXJnaW4tYm90dG9tOiA1cHg7IGJhY2tncm91bmQ6ICNlZGVkZWQ7IGN1cnNvcjogcG9pbnRlcjsgfQ0KLmxlZnQgI2xlZnRtZW51IGEgeyBmbG9hdDogbGVmdDsgd2lkdGg6IDE0MHB4OyBoZWlnaHQ6IDMycHg7IGxpbmUtaGVpZ2h0OiAzNXB4OyBjdXJzb3I6IHBvaW50ZXI7IHBhZGRpbmctcmlnaHQ6MWVtOyB9DQoubGVmdCAjbGVmdG1lbnUgYTpob3ZlciB7IGNvbG9yOiAjMDAwMDAwOyBiYWNrZ3JvdW5kOiAjYjBjZGVlOyB9DQoubGVmdCAjbGVmdG1lbnUgc3BhbiB7IGZsb2F0OiBsZWZ0OyB3aWR0aDogYXV0bzsgaGVpZ2h0OiAzMnB4OyBsaW5lLWhlaWdodDogMzJweDsgdGV4dC1hbGlnbjogbGVmdDsgY3Vyc29yOiBwb2ludGVyOyBtYXJnaW4tbGVmdDogMjVweDsgcGFkZGluZy1sZWZ0OiAyMnB4OyB9DQoNCi8q5a+86Iiq6auY5LquKi8NCi5sZWZ0ICNsZWZ0bWVudSAub24gYSwNCi5sZWZ0ICNsZWZ0bWVudSAjb24gYTpob3ZlciB7IGNvbG9yOiAjZmZmZmZmOyBiYWNrZ3JvdW5kOiAjMzM5OWNjOyB9DQoubGVmdCAjbGVmdG1lbnUgbGkuc3ViIHsgZmxvYXQ6IGxlZnQ7IHdpZHRoOiAxNDBweDsgaGVpZ2h0OiBhdXRvOyBtYXJnaW4tYm90dG9tOiAwOyBib3JkZXItYm90dG9tOiA1cHggc29saWQgI2ZmZjsgY3Vyc29yOiBwb2ludGVyOyBiYWNrZ3JvdW5kOiB3aGl0ZTsgfQ0KLmxlZnQgI2xlZnRtZW51IGxpLnN1YiBzcGFuIHsgaGVpZ2h0OiAyNXB4OyBsaW5lLWhlaWdodDogMjVweDsgdGV4dC1hbGlnbjogbGVmdDsgd2lkdGg6IDEwNXB4OyBwYWRkaW5nLWxlZnQ6IDM1cHg7IHBhZGRpbmctcmlnaHQ6IDBweDsgb3ZlcmZsb3c6IGhpZGRlbjsgfQ0KLmxlZnQgI2xlZnRtZW51IGxpLnN1YiBhIHsgaGVpZ2h0OiAyNXB4OyBsaW5lLWhlaWdodDogMjVweDsgfQ0KLmxlZnQgI2xlZnRtZW51IGxpLnN1YiBhOmhvdmVyIHsgYmFja2dyb3VuZDogd2hpdGU7IH0NCi5sZWZ0ICNsZWZ0bWVudSBsaS5zdWIgc3Bhbi5tLW5vdyB7IGZvbnQtd2VpZ2h0OiBib2xkOyB9DQoNCi8q5a+86Iiq5Zu+5qCH5Yy6Ki8NCiNsZWZ0bWVudSBsaSBzcGFuIHsgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgYmFja2dyb3VuZC1wb3NpdGlvbjogMTAwcHggOHB4OyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2UvY29tbW9uL3dpbmRvd18xLnBuZyk7IH0NCiNsZWZ0bWVudSBsaS5vbiBzcGFuIHsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlL2NvbW1vbi93aW5kb3dfMi5wbmcpOyB9DQojbGVmdG1lbnUgI25hdl9idWlsZCBzcGFuIHsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlL2NvbW1vbi9yZWJ1aWxkXzEucG5nKTsgfQ0KI2xlZnRtZW51ICNuYXZfaG9tZSBzcGFuIHsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlL2NvbW1vbi9ob21lXzEucG5nKTsgfQ0KI2xlZnRtZW51ICNuYXZfbmV3IHNwYW4geyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2UvY29tbW9uL25ld18xLnBuZyk7IH0NCiNsZWZ0bWVudSAjbmF2X2FydGljbGUgc3BhbiB7IGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZS9jb21tb24vYXJ0aWNsZV8xLnBuZyk7IH0NCiNsZWZ0bWVudSAjbmF2X3BhZ2Ugc3BhbiB7IGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZS9jb21tb24vcGFnZV8xLnBuZyk7IH0NCiNsZWZ0bWVudSAjbmF2X2NhdGVnb3J5IHNwYW4geyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2UvY29tbW9uL2NhdGVnb3J5XzEucG5nKTsgfQ0KI2xlZnRtZW51ICNuYXZfdGFncyBzcGFuIHsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlL2NvbW1vbi90YWdzXzEucG5nKTsgfQ0KI2xlZnRtZW51ICNuYXZfY29tbWVudCBzcGFuIHsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlL2NvbW1vbi9jb21tZW50c18xLnBuZyk7IH0NCiNsZWZ0bWVudSAjbmF2X3F1b3RlZCBzcGFuIHsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlL2NvbW1vbi9xdW90ZWRfMS5wbmcpOyB9DQojbGVmdG1lbnUgI25hdl91cGxvYWQgc3BhbiB7IGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZS9jb21tb24vYWNjZXNzb3JpZXNfMS5wbmcpOyB9DQojbGVmdG1lbnUgI25hdl90aGVtZSBzcGFuIHsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlL2NvbW1vbi90aGVtZXNfMS5wbmcpOyB9DQojbGVmdG1lbnUgI25hdl9wbHVnaW4gc3BhbiB7IGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZS9jb21tb24vcGx1Z2luXzEucG5nKTsgfQ0KI2xlZnRtZW51ICNuYXZfbW9kdWxlIHNwYW4geyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2UvY29tbW9uL2xpbmtfMS5wbmcpOyB9DQojbGVmdG1lbnUgI25hdl9tZW1iZXIgc3BhbiB7IGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZS9jb21tb24vdXNlcl8xLnBuZyk7IH0NCg0KLyrpq5jkuq7lr7zoiKrlm77moIfljLoqLw0KI2xlZnRtZW51ICNuYXZfYnVpbGQub24gc3BhbiB7IGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZS9jb21tb24vcmVidWlsZF8yLnBuZyk7IH0NCiNsZWZ0bWVudSAjbmF2X2hvbWUub24gc3BhbiB7IGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZS9jb21tb24vaG9tZV8yLnBuZyk7IH0NCiNsZWZ0bWVudSAjbmF2X25ldy5vbiBzcGFuIHsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlL2NvbW1vbi9uZXdfMi5wbmcpOyB9DQojbGVmdG1lbnUgI25hdl9hcnRpY2xlLm9uIHNwYW4geyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2UvY29tbW9uL2FydGljbGVfMi5wbmcpOyB9DQojbGVmdG1lbnUgI25hdl9wYWdlLm9uIHNwYW4geyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2UvY29tbW9uL3BhZ2VfMi5wbmcpOyB9DQojbGVmdG1lbnUgI25hdl9jYXRlZ29yeS5vbiBzcGFuIHsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlL2NvbW1vbi9jYXRlZ29yeV8yLnBuZyk7IH0NCiNsZWZ0bWVudSAjbmF2X3RhZ3Mub24gc3BhbiB7IGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZS9jb21tb24vdGFnc18yLnBuZyk7IH0NCiNsZWZ0bWVudSAjbmF2X2NvbW1lbnQub24gc3BhbiB7IGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZS9jb21tb24vY29tbWVudHNfMi5wbmcpOyB9DQojbGVmdG1lbnUgI25hdl9xdW90ZWQub24gc3BhbiB7IGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZS9jb21tb24vcXVvdGVkXzIucG5nKTsgfQ0KI2xlZnRtZW51ICNuYXZfdXBsb2FkLm9uIHNwYW4geyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2UvY29tbW9uL2FjY2Vzc29yaWVzXzIucG5nKTsgfQ0KI2xlZnRtZW51ICNuYXZfdGhlbWUub24gc3BhbiB7IGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZS9jb21tb24vdGhlbWVzXzIucG5nKTsgfQ0KI2xlZnRtZW51ICNuYXZfcGx1Z2luLm9uIHNwYW4geyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2UvY29tbW9uL3BsdWdpbl8yLnBuZyk7IH0NCiNsZWZ0bWVudSAjbmF2X21vZHVsZS5vbiBzcGFuIHsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlL2NvbW1vbi9saW5rXzIucG5nKTsgfQ0KI2xlZnRtZW51ICNuYXZfbWVtYmVyLm9uIHNwYW4geyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2UvY29tbW9uL3VzZXJfMi5wbmcpOyB9DQojbGVmdG1lbnUgbGkgc3BhbiB7IGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7IGJhY2tncm91bmQtcG9zaXRpb246IDBweCA4cHg7IH0NCiNsZWZ0bWVudSBsaS5zcGxpdCB7IGhlaWdodDogMHB4ICFpbXBvcnRhbnQ7IGJhY2tncm91bmQ6ICNmZmY7IH0NCiNsZWZ0bWVudSBsaS5zcGxpdCBociB7IGRpc3BsYXk6IG5vbmU7IH0NCg0KLyrkuLvopoHlhoXlrrnljLoqLw0KLm1haW4geyBwYWRkaW5nLWxlZnQ6IDE1MHB4OyBwYWRkaW5nLXJpZ2h0OiAxMHB4OyB9DQoNCi8q5ZCO5Y+w6aaW6aG1Ki8NCiNkaXZNYWluIHsgZmxvYXQ6IGxlZnQ7IHdpZHRoOiAxMDAlOyBwYWRkaW5nOiAwcHg7IG1hcmdpbjogMHB4OyB9DQojZGl2TWFpbiBhLA0KI2Rpdk1haW4yIGEgeyBjb2xvcjogIzFkNGM3ZDsgfQ0KI2Rpdk1haW4gYTpob3ZlciwNCiNkaXZNYWluMiAgYTpob3ZlciB7IGNvbG9yOiAjZDYwMDAwOyB9DQojZGl2TWFpbjIgeyBwYWRkaW5nOiAwcHg7IG1hcmdpbjogMHB4OyB9DQouZGl2SGVhZGVyIHsgaGVpZ2h0OiAxLjhlbTsgbGluZS1oZWlnaHQ6IDEuOGVtOyBmb250LXNpemU6IDEuNWVtOyBwYWRkaW5nOiA1cHggMCA0MnB4IDA7IH0NCi5kaXZIZWFkZXIyIHsgaGVpZ2h0OiAxLjhlbTsgbGluZS1oZWlnaHQ6IDEuOGVtOyBmb250LXNpemU6IDEuNWVtOyBwYWRkaW5nOiA1cHggMCA0MnB4IDA7IGJvcmRlci1ib3R0b206IDVweCBzb2xpZCAjZTBlMGUwOyBtYXJnaW4tYm90dG9tOjVweDsgfQ0KLm1haW4+I2Rpdk1haW4+ZGl2W2NsYXNzXj0iZGl2SGVhZGVyIl0sLm1haW4+I2Rpdk1haW4yPmRpdltjbGFzc149ImRpdkhlYWRlciJde3BhZGRpbmctbGVmdDoyZW07YmFja2dyb3VuZDp1cmwoJy4uL2ltYWdlL2FkbWluL25vbmUuZ2lmJykgM3B4IDlweCBuby1yZXBlYXQ7YmFja2dyb3VuZC1zaXplOjEuNmVtO30NCg0KDQovKuihqCAgIOagvCovDQp0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IGJhY2tncm91bmQ6ICNmZmZmZmY7IGxpbmUtaGVpZ2h0OiAxMjAlOyB9DQp0YWJsZSBsYWJlbCB7IC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKueUqOS6juino+WGs0lFMTAgZm9yIFdQOOWtl+S9k+i/h+Wkp+eahOmXrumimCovIH0NCnRkLHRoIHsgbWFyZ2luOiAwOyB0ZXh0LWluZGVudDogMDsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfQ0KdHIgaW1nIHsgbWFyZ2luLWJvdHRvbTogLTRweDsgfQ0KdHIuY29sb3IxIHsgYmFja2dyb3VuZDogI2VkZWRlZDsgfQ0KdHIuY29sb3IyIHsgYmFja2dyb3VuZDogI0Y0RjRGNDsgfQ0KdHIuY29sb3IzIHsgYmFja2dyb3VuZDogI2ZmZmZmZjsgfQ0KdHIuY29sb3I0IHsgYmFja2dyb3VuZDogI2ZmZmZkZDsgfQ0KLnRhYmxlQm9yZGVyIHsgbGluZS1oZWlnaHQ6IDEuOGVtOyBtYXJnaW4tYm90dG9tOiAwLjhlbTsgbWFyZ2luLXRvcDogMC40ZW07IC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKueUqOS6juino+WGs0lFMTAgZm9yIFdQOOWtl+S9k+i/h+Wkp+eahOmXrumimCovIH0NCi50YWJsZUJvcmRlciB0aCB7IHRleHQtYWxpZ246IGxlZnQ7IH0NCi50YWJsZUJvcmRlci10aGNlbnRlciB0aCB7IHRleHQtYWxpZ246IGNlbnRlcjsgfQ0KLnVpLXNvcnRhYmxlIHRyLmNvbG9yNCB7IGN1cnNvcjogbW92ZTsgfQ0KLm5vdGVpbmZvIHsgZm9udC13ZWlnaHQ6IG5vcm1hbDsgZm9udC1zaXplOiAwLjllbTsgY29sb3I6ICM2NjY7IGZvbnQtc3R5bGU6IGl0YWxpYzsgfQ0KLnRhYmxlRnVsbCB7IHdpZHRoOiAxMDAlOyB9DQoudGRDZW50ZXIgeyB0ZXh0LWFsaWduOiBjZW50ZXI7IH0NCi50ZDUgIHsgd2lkdGg6IDUlOyB9DQoudGQxMCB7IHdpZHRoOiAxMCU7IH0NCi50ZDE1IHsgd2lkdGg6IDE1JTsgfQ0KLnRkMjAgeyB3aWR0aDogMjAlOyB9DQoudGQyNSB7IHdpZHRoOiAyNSU7IH0NCi50ZDMwIHsgd2lkdGg6IDMwJTsgfQ0KLnRkMzUgeyB3aWR0aDogMzUlOyB9DQp0YWJsZSA+IHRib2R5ID4gdHIgPiB0ZDpob3ZlciwNCnRhYmxlID4gdGJvZHkgPiB0ciA+IHRoOmhvdmVyLA0KdGFibGUgPiB0Ym9keSA+IHRyOmhvdmVyID4gdGQsDQp0YWJsZSA+IHRib2R5ID4gdHI6aG92ZXIgPiB0aCB7YmFja2dyb3VuZC1jb2xvcjogI2ZmZmZkZDt9DQp0YWJsZSA+IHRib2R5ID4gdHI6bnRoLW9mLXR5cGUob2RkKSB7YmFja2dyb3VuZC1jb2xvcjogI0Y0RjRGNDt9DQp0YWJsZSA+IHRoZWFkID4gdHIge2JhY2tncm91bmQtY29sb3I6ICNlZGVkZWQ7fQ0KdGFibGV7bWFyZ2luOjAuNWVtIDAgMC41ZW0gMDtib3JkZXI6bm9uZTtsaW5lLWhlaWdodDoxLjg7Ym94LXNoYWRvdzowIDAgMC4xZW0gcmdiYSgwLDAsMCwwLjMpO30NCnRkLHRoe2JvcmRlcjpub25lO3BhZGRpbmc6MC41ZW07IGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNlZmVmZWY7fQ0KdGQ6bGFzdC1jaGlsZHtib3JkZXItcmlnaHQ6bm9uZTt9DQp0aDpsYXN0LWNoaWxke2JvcmRlci1yaWdodDpub25lO30NCg0KLyrooaggICDljZUqLw0KZm9ybSB7IGJvcmRlcjogMHB4IHNvbGlkIGJsYWNrOyBwYWRkaW5nOiAwLjBlbTsgbWFyZ2luOiAwLjVlbSAwOyB9DQpmb3JtIHAgeyBwYWRkaW5nOiAwLjVlbSAwICAwLjVlbSAwOyBsaW5lLWhlaWdodDogMS41ZW07IH0NCmlucHV0IHsgcGFkZGluZzogMC4yNWVtIDAuMjVlbSAwLjI1ZW0gMC4yNWVtOyBib3JkZXI6IDFweCBzb2xpZCAjY2NjOyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBib3R0b207IGJhY2tncm91bmQ6ICNmZmY7IGZvbnQtc2l6ZTogMWVtOyB9DQppbnB1dFt0eXBlPSJyYWRpbyJdIHsgYm9yZGVyOiBub25lOyBiYWNrZ3JvdW5kOiBub25lOyB9DQpzZWxlY3QgeyBwYWRkaW5nOiAwLjE1ZW0gMC4yNWVtIDAuMjBlbSAwLjI1ZW07IGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IGJhY2tncm91bmQtcG9zaXRpb246IGJvdHRvbTsgYmFja2dyb3VuZDogI2ZmZjsgZm9udC1zaXplOiAxLjBlbTsgfQ0KdGV4dGFyZWEgeyBib3JkZXI6IDFweCBzb2xpZCAjY2NjOyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBib3R0b207IGJhY2tncm91bmQ6ICNmZmY7IGZvbnQtc2l6ZTogMWVtOyB9DQppbnB1dC5idXR0b24sDQppbnB1dFt0eXBlPSJzdWJtaXQiXSwNCmlucHV0W3R5cGU9ImJ1dHRvbiJdIHsgY29sb3I6ICNmZmZmZmY7IGZvbnQtc2l6ZTogMS4xZW07IGhlaWdodDogMjlweDsgcGFkZGluZzogMnB4IDE4cHggM3B4IDE4cHg7IG1hcmdpbjogMCAwLjVlbTsgYmFja2dyb3VuZDogIzNhNmVhNTsgYm9yZGVyOiAxcHggc29saWQgIzMzOTljYzsgY3Vyc29yOiBwb2ludGVyOyB9DQppbnB1dC5idXR0b246aG92ZXIgeyBiYWNrZ3JvdW5kOiAjMzM5OWNjOyB9DQppbnB1dC5idXR0b24yIHsgd2lkdGg6IGF1dG87IH0NCmlucHV0W2Rpc2FibGVkXSwNCmlucHV0W2Rpc2FibGVkXTpob3ZlciB7IGJhY2tncm91bmQ6ICNlZWU7IGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IGN1cnNvcjogbm90LWFsbG93ZWQ7IGNvbG9yOiBibGFjazsgfQ0KaW5wdXRbcmVhZG9ubHldLA0KaW5wdXRbcmVhZG9ubHldOmhvdmVyIHsgYmFja2dyb3VuZDogI2VlZTsgYm9yZGVyOiAxcHggc29saWQgI2NjYzsgY3Vyc29yOiBub3QtYWxsb3dlZDsgY29sb3I6ICM4MDgwODA7IH0NCnNlbGVjdC5lZGl0IHsgd2lkdGg6IDMwMHB4OyB9DQppbnB1dC5lZGl0IHsgd2lkdGg6IDI5M3B4OyB9DQouZm9ybS1ncm91cCB7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgbWFyZ2luLWJvdHRvbTogMDsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgd2lkdGg6IDEwMCU7IG1hcmdpbi1ib3R0b206IDEwcHg7IH0NCi5mb3JtLWdyb3VwIGxhYmVsIHsgcGFkZGluZy10b3A6IDdweDsgbWFyZ2luLWJvdHRvbTogMDsgcG9zaXRpb246IHJlbGF0aXZlOyBtaW4taGVpZ2h0OiAxcHg7IG1heC13aWR0aDogMTAwJTsgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9DQouZm9ybS1ncm91cCBsYWJlbC50aXRsZSB7IHBhZGRpbmctdG9wOiA3cHg7IHdpZHRoOiAxMiU7IGZsb2F0OiBsZWZ0OyBmb250LXdlaWdodDogYm9sZDsgfQ0KLmZvcm0tZ3JvdXAgbGFiZWxbZm9yPSJOb1JlZnJlc2giXSB7IHdpZHRoOiAyNiU7IH0NCi5mb3JtLWdyb3VwIHNlbGVjdCwNCi5mb3JtLWdyb3VwIGlucHV0W3R5cGU9InRleHQiXSwNCi5mb3JtLWdyb3VwIGlucHV0W3R5cGU9Im51bWJlciJdLA0KLmZvcm0tZ3JvdXAgaW5wdXRbdHlwZT0icGFzc3dvcmQiXSwNCi5mb3JtLWdyb3VwIHRleHRhcmVhIHsgd2lkdGg6IDgwJTsgZmxvYXQ6IGxlZnQ7IHBvc2l0aW9uOiByZWxhdGl2ZTsgbWluLWhlaWdodDogMXB4OyBwYWRkaW5nLXJpZ2h0OiAxNXB4OyBwYWRkaW5nLWxlZnQ6IDE1cHg7IGRpc3BsYXk6IGJsb2NrOyBwYWRkaW5nOiA2cHggIWltcG9ydGFudDsgfQ0KLmZvcm0tZ3JvdXAgc2VsZWN0IHsgd2lkdGg6IDIzMHB4OyB9DQouZm9ybS1ncm91cCAuaW1nY2hlY2sgeyBtYXJnaW4tdG9wOiA4cHg7IG1hcmdpbi1sZWZ0OiAwcHg7IH0NCnRleHRhcmVhI2VkaXRvcl9jb250ZW50IHsgd2lkdGg6IDEwMCU7IGhlaWdodDogMzAwcHg7IG1hcmdpbjogMDsgcGFkZGluZzogMC41ZW0gMC41ZW07IH0NCnRleHRhcmVhI2VkaXRvcl9pbnRybyB7IHdpZHRoOiAxMDAlOyBoZWlnaHQ6IDE1MHB4OyBtYXJnaW46IDA7IHBhZGRpbmc6IDAuNWVtIDAuNWVtOyB9DQoNCi8q5o+Q56S6RElWKi8NCmRpdi5oaW50IHsgd2lkdGg6IDEwMCU7IG1hcmdpbjogMCAwIDAuMmVtIDA7IH0NCmRpdi5oaW50IHAgeyBwYWRkaW5nOiAwLjJlbSAwLjVlbSAwLjNlbSAyLjJlbTsgbGluZS1oZWlnaHQ6IDEuNWVtOyB9DQpkaXYuaGludCBmb250IHsgY29sb3I6IGJsYWNrOyB9DQpkaXYuaGludCBwLmhpbnRfZ29vZCB7IGJhY2tncm91bmQ6ICNkNWZmY2UgdXJsKC4uL2ltYWdlL2FkbWluL29rLnBuZykgbm8tcmVwZWF0IDhweCBjZW50ZXI7IH0NCmRpdi5oaW50IHAuaGludF9iYWQgeyBiYWNrZ3JvdW5kOiAjZmZjZWNlIHVybCguLi9pbWFnZS9hZG1pbi9leGNsYW1hdGlvbi5wbmcpIG5vLXJlcGVhdCA4cHggY2VudGVyOyB9DQpkaXYuaGludCBwLmhpbnRfdGlwcyB7IGJhY2tncm91bmQ6ICNkYmUzZmYgdXJsKC4uL2ltYWdlL2FkbWluL2luZm9ybWF0aW9uLnBuZykgbm8tcmVwZWF0IDhweCBjZW50ZXI7IH0NCg0KLyrlkI7lj7AqLw0KZm9ybS5zZWFyY2ggeyBiYWNrZ3JvdW5kOiAjZjBmMGYwOyBwYWRkaW5nOiAwLjVlbTsgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8q55So5LqO6Kej5YazSUUxMCBmb3IgV1A45a2X5L2T6L+H5aSn55qE6Zeu6aKYKi8gfQ0KZm9ybS5zZWFyY2h7Ym94LXNoYWRvdzowIDAgMC4xZW0gcmdiYSgwLDAsMCwwLjMpO3BhZGRpbmc6MWVtO3Bvc2l0aW9uOnJlbGF0aXZlO2JhY2tncm91bmQ6I2ZmZjttYXJnaW46MC40ZW0gMCAwLjhlbSAwO2JvcmRlci1yYWRpdXM6MC4xZW07fQ0KaHIgeyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAxcHg7IGJvcmRlcjogbm9uZTsgcGFkZGluZzogMDsgdmlzaWJpbGl0eTogaGlkZGVuOyB9DQoNCi8q5ZCO5Y+w57yW6L6R6aG1LOaWh+eroOe8lui+keWSjOmhtemdoue8lui+kSovDQojZGl2RWRpdFJpZ2h0IHsgZmxvYXQ6IHJpZ2h0OyB3aWR0aDogMjcwcHg7IHRleHQtYWxpZ246IHJpZ2h0OyBtYXJnaW4tbGVmdDogLTI3MHB4IH0NCiNkaXZFZGl0UG9zdCB7IG1hcmdpbi10b3A6IDMwcHg7IH0NCiNkaXZFZGl0TGVmdCB7IGZsb2F0OiBsZWZ0OyB3aWR0aDogMTAwJTsgfQ0KDQovKuaWh+eroOe8lui+keaPkOS6pOWMuumaj+WKqCovDQojZGl2Qm94IHsgd2lkdGg6IDI3MHB4OyBwb3NpdGlvbjogcmVsYXRpdmU7IH0NCiNkaXZGbG9hdCB7IHdpZHRoOiAyNThweDsgfQ0KI2RpdkZsb2F0IGlucHV0LmJ1dHRvbiB7IG1hcmdpbjogMC4yZW0gMDsgfQ0KLmJveGZsb2F0IHsgcG9zaXRpb246IGZpeGVkOyBfcG9zaXRpb246IGFic29sdXRlOyB0b3A6IDBweDsgei1pbmRleDogMjk1OyB9DQouZWRpdG1vZDIgeyBtYXJnaW46IDAuMmVtIDA7IHBhZGRpbmctcmlnaHQ6IDI3NXB4OyB9DQojZGl2SW50cm8geyBwYWRkaW5nLWJvdHRvbTogMjBweDsgfQ0KLmVkaXRtb2QgeyBtYXJnaW46IDFlbSAwOyB9DQouZWRpdG1vZDMgeyBtYXJnaW46IDA7IHdpZHRoOiA5OSU7IH0NCi5lZGl0aW5wdXRuYW1lIHsgcGFkZGluZzogMCAycHggMCAzcHg7IGxpbmUtaGVpZ2h0OiAxZW07IGZvbnQtc2l6ZTogMS4xZW07IGZvbnQtd2VpZ2h0OiBib2xkOyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH0NCmRpdi5wb3N0X2VkaXQgaW5wdXQjZWR0VGl0bGUgeyBtYXJnaW46IDVweCAwIDAgMDsgcGFkZGluZzogM3B4OyBsaW5lLWhlaWdodDogMS44ZW07IGhlaWdodDogMS44ZW07IGZvbnQtc2l6ZTogMS4yZW07IHdpZHRoOiA5OSU7IGNvbG9yOiAjMzMzOyB9DQpkaXYucG9zdF9lZGl0IGlucHV0I2VkdEFsaWFzLA0KaW5wdXQjZWR0VGFnIHsgbWFyZ2luLXRvcDogNXB4OyBwYWRkaW5nOiAzcHg7IHdpZHRoOiA1MCU7IH0NCiN1bFRhZyB7IG1hcmdpbjogMCAzZW07IH0NCiNhamF4dGFncyB7IGJhY2tncm91bmQ6ICNmOGY4Zjg7IGJveC1zaGFkb3c6IDAgMCAxMHB4ICNhYWE7IHBhZGRpbmc6IC41ZW07IH0NCiNhamF4dGFncyBhIHsgbWFyZ2luLXJpZ2h0OiAuNWVtOyB9DQojYWpheHRhZ3MgYS5zZWxlY3RlZCB7IGNvbG9yOiBibGFjazsgYmFja2dyb3VuZDogI0Y4Rjg4OTsgfQ0KI2VkaXRvcl90eHQgeyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAzMDBweDsgfQ0KDQovKuWQjuWPsOS4u+mimOeuoeeQhumhtSovDQpkaXYudGhlbWUgeyB3aWR0aDogMjMwcHg7IGhlaWdodDogMzIwcHg7IH0NCmRpdi50aGVtZSBpbWcgeyBtYXJnaW4tYm90dG9tOiAtM3B4OyB9DQpkaXYudGhlbWUtbm93IHsgZmxvYXQ6IGxlZnQ7IGJhY2tncm91bmQ6ICNiMGNkZWU7IHBhZGRpbmc6IC42ZW0gMWVtOyBtYXJnaW46IDAgMWVtIDFlbSAwOyB9DQpkaXYudGhlbWUtb3RoZXIgeyBmbG9hdDogbGVmdDsgYmFja2dyb3VuZDogI2YwZjBmMDsgcGFkZGluZzogLjZlbSAxZW07IG1hcmdpbjogMCAxZW0gMWVtIDA7IH0NCmRpdi50aGVtZS1vdGhlciBhIHsgY3Vyc29yOiBwb2ludGVyOyB9DQpkaXYudGhlbWUtb3RoZXIgLnRoZW1lLW5hbWUgaW1nIHsgb3BhY2l0eTogMC41MDsgfQ0KZGl2LnRoZW1lPi50aGVtZS1uYW1lLGRpdi50aGVtZT4udGhlbWUtYXV0aG9yLGRpdi50aGVtZT4udGhlbWUtc3R5bGUsZGl2LnRoZW1lPnB7aGVpZ2h0OjIuNGVtO30NCmRpdi50aGVtZT4udGhlbWUtbmFtZXtvdmVyZmxvdzogaGlkZGVuO3doaXRlLXNwYWNlIDpub3dyYXA7fQ0KZGl2LnRoZW1lLW5vdyAuYmV0dGVyVGlwIGltZyB7IGJveC1zaGFkb3c6IDAgMCAxMHB4ICMzYTZlYTU7IH0NCmRpdi50aGVtZS1ub3cgLmJldHRlclRpcCBpbWcsDQpkaXYudGhlbWUtb3RoZXIgLmJldHRlclRpcCBpbWcgeyBib3JkZXI6IDJweCBzb2xpZCAjZjZmNmY2OyB9DQpkaXYudGhlbWUtb3RoZXIgLmJldHRlclRpcCBpbWcgeyBib3gtc2hhZG93OiAwIDAgMTBweCAjYWFhOyB9DQpkaXYudGhlbWUtb3RoZXIgLmJldHRlclRpcCBpbWc6aG92ZXIgeyBib3JkZXI6IDJweCBzb2xpZCAjYjBjZGVlOyBib3gtc2hhZG93OiAwIDAgMTBweCAjMzM5OWNjOyB9DQpkaXYudGhlbWUtbm93IGRpdiwNCmRpdi50aGVtZS1vdGhlciBkaXYgeyBtYXgtd2lkdGg6IDIyMHB4OyAgICAgLypvdmVyZmxvdzpoaWRkZW47Ki8gcGFkZGluZzogMC41ZW0gMCAwLjVlbSAwOyB9DQppbnB1dC50aGVtZS1jb25maWcsDQppbnB1dC50aGVtZS1hY3RpdmF0ZSB7IGZsb2F0OiByaWdodDsgaGVpZ2h0OiAyNnB4OyB3aWR0aDogNjRweDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAycHggNXB4IDNweCA1cHg7IGZvbnQtc2l6ZTogMWVtOyB9DQppbnB1dC50aGVtZS1jb25maWcgeyBtYXJnaW4tdG9wOiAtM3B4OyB9DQpkaXYudGhlbWUgc2VsZWN0LmVkaXQgeyB3aWR0aDogMTMwcHg7IH0NCi5oaWRkZW4geyBkaXNwbGF5OiBub25lOyB9DQoucGFnZWJhciB7IHBhZGRpbmc6IDFlbSAwIDJlbSAwOyB9DQpzcGFuLnRpdGxlIHsgZm9udC13ZWlnaHQ6IGJvbGQ7IH0NCnNwYW4uc3RhciB7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgbWFyZ2luOiA2cHg7IGNvbG9yOiByZWQ7IH0NCnNwYW4ubm90ZSB7IGZvbnQtc2l6ZTogMC45ZW07IH0NCi5wYWdlYmFyIHNwYW4geyBjb2xvcjogIzMzMzsgZm9udC13ZWlnaHQ6IGJvbGRlcjsgcGFkZGluZzogM3B4IDVweCAycHggNXB4OyBtYXJnaW46IDFweDsgfQ0KLnBhZ2ViYXIgYSB7IGJvcmRlci1yYWRpdXM6MC4zZW07Ym9yZGVyOiAxcHggc29saWQgI2VmZWZlZjtwYWRkaW5nOiAycHg7IHBhZGRpbmc6IDJweCA1cHggMnB4IDVweDsgbWFyZ2luOiAxcHg7IH0NCi5wYWdlYmFyIGE6aG92ZXJ7Ym9yZGVyOiAxcHggc29saWQgI2NjYzt9DQovKuato+aWh0RJVuS4i+eahOWvvOiIquadoSovDQouU3ViTWVudSB7IHBhZGRpbmc6IDAgMCAwcHggMDsgbWFyZ2luOiAwLjRlbSAwIDAuOGVtIDA7IHdpZHRoOiAxMDAlOyB0ZXh0LWFsaWduOiBsZWZ0OyBmb250LXNpemU6IDFlbTsgaGVpZ2h0OiAzMHB4OyBsaW5lLWhlaWdodDogMzBweDsgYm9yZGVyLWJvdHRvbTogMHB4IHNvbGlkICMzMzk5Y2M7IGRpc3BsYXk6IG5vbmU7IH0NCi5TdWJNZW51IHNwYW4geyBmbG9hdDogbGVmdDsgbWFyZ2luOiAwIDAgMCAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHBhZGRpbmc6IDBweCAxMHB4OyBjdXJzb3I6IHBvaW50ZXI7IGNvbG9yOiAjMzMzMzMzOyB9DQouU3ViTWVudSBzcGFuLm0tbGVmdCwNCi5TdWJNZW51IHNwYW4ubS1yaWdodCB7IGZsb2F0OiBsZWZ0OyB9DQouU3ViTWVudSBhOmhvdmVyIHsgYmFja2dyb3VuZDogI2IwY2RlZTsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyBjb2xvcjogYmxhY2s7IH0NCi5TdWJNZW51IGEgeyBjb2xvcjogYmxhY2s7IGJhY2tncm91bmQ6ICNlMGUxZTI7IG1hcmdpbjogMCA1cHggMCAwOyBmbG9hdDogbGVmdDsgfQ0KLlN1Yk1lbnUgc3Bhbi5tLW5vdyB7IGJhY2tncm91bmQ6ICMzMzk5Y2M7IGNvbG9yOiB3aGl0ZTsgfQ0KDQovKiDnvZHnq5norr7nva7pobUgKi8NCi5jb250ZW50LWJveCB1bCB7IHBhZGRpbmc6IDEwcHggMCAwIDBweDsgfQ0KLmNvbnRlbnQtYm94IGxpIHsgZmxvYXQ6IGxlZnQ7IHBhZGRpbmc6IDAgMCAwIDA7IGhlaWdodDogMmVtOyBsaW5lLWhlaWdodDogMmVtOyBtYXJnaW46IDA7IH0NCi5jb250ZW50LWJveCAuY29udGVudC1ib3gtdGFicyBhLmN1cnJlbnQgeyBiYWNrZ3JvdW5kOiAjZWRlZGVkOyBwYWRkaW5nOiA1cHggMTBweDsgbWFyZ2luOiAwIDlweCAwIDA7IGxpbmUtaGVpZ2h0OiAyLjJlbTsgaGVpZ2h0OiAyZW07IGNvbG9yOiBibGFjazsgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfQ0KLmNvbnRlbnQtYm94IC5jb250ZW50LWJveC10YWJzIGEgeyBib3JkZXI6IDBweCBzb2xpZCAjNzE5MGJhOyBwYWRkaW5nOiA1cHggMTBweDsgbWFyZ2luOiAwIDlweCAwIDA7IGxpbmUtaGVpZ2h0OiAyLjJlbTsgaGVpZ2h0OiAyZW07IH0NCi50b3Rvcm8geyBwYWRkaW5nOiAxMHB4OyB9DQoudG90b3JvIGRkIHsgbGluZS1oZWlnaHQ6IDI4cHg7IG1hcmdpbi1ib3R0b206IDVweDsgfQ0KLnRvdG9ybyAudG90b3JvdHh0IHsgZm9udC1zaXplOiAxMnB4OyB9DQojdG90b3JvYm94IHRleHRhcmVhIHsgYmFja2dyb3VuZDogI2ZmZmZmZjsgcGFkZGluZzogMTBweCAwOyBib3JkZXI6IG5vbmU7IH0NCg0KLypjaGVja2JveCovDQouaW1nY2hlY2sgeyBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1hZ2UvYWRtaW4vY2hlY2tib3gucG5nKSBuby1yZXBlYXQgMCBib3R0b207IHdpZHRoOiA0MHB4OyBoZWlnaHQ6IDE3cHg7IGRpc3BsYXk6IGlubGluZS1ibG9jazsvKglmbG9hdDpsZWZ0OyovIGN1cnNvcjogcG9pbnRlcjsgbWFyZ2luLWJvdHRvbTogLTNweDsgbWFyZ2luLWxlZnQ6IDVweDsgfQ0KLmltZ2NoZWNrLW9uIHsgYmFja2dyb3VuZDogdXJsKC4uL2ltYWdlL2FkbWluL2NoZWNrYm94LnBuZykgbm8tcmVwZWF0IDAgdG9wOyB9DQojYmF0Y2ggaWZyYW1lIHsgZmxvYXQ6IGxlZnQ7IG1hcmdpbjogNXB4IDVweCAwIDhweDsgfQ0KI2JhdGNoIHAgeyBmbG9hdDogbGVmdDsgfQ0KI2JhdGNoIGltZyB7IGZsb2F0OiBsZWZ0OyBtYXJnaW46IDdweCA1cHggMCA5cHg7IH0NCiNiYXRjaCBhLA0KcC5oaW50IGEgeyBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1hZ2UvYWRtaW4vYnVsbGV0X2dvLnBuZykgbm8tcmVwZWF0IDRweCAxcHg7IHBhZGRpbmctbGVmdDogMjBweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IH0NCiNiYXRjaCB7IHdpZHRoOiAxMDAlOyBtYXJnaW46IDAgMCA1cHggMDsgYmFja2dyb3VuZDogI2RiZTNmZjsgZmxvYXQ6IGxlZnQ7IHBhZGRpbmc6IDAgMCAwIDA7IH0NCiNiYXRjaCBwIHsgcGFkZGluZzogMC4zZW0gMC41ZW0gMC4zZW0gMDsgZm9udC1zaXplOiAxLjBlbTsgfQ0Kc3Bhbi5idXR0b24geyBjdXJzb3I6IHBvaW50ZXI7IH0NCmEuYnV0dG9uLA0Kc3Bhbi5idXR0b24geyBib3JkZXItcmFkaXVzOiAycHg7IHBhZGRpbmc6IDJweCAzcHggMnB4IDNweDsgbGluZS1oZWlnaHQ6IDEuMGVtOyBmb250LXNpemU6IDFlbTsgfQ0KYS5idXR0b246aG92ZXIsDQpzcGFuLmJ1dHRvbjpob3ZlciB7IGJveC1zaGFkb3c6IDAgMCAxcHggIzAwMDsgYm9yZGVyLXJhZGl1czogMC4zZW07IHBhZGRpbmc6IDJweCAzcHggMnB4IDNweDsgfQ0KDQovKuS+p+agj+euoeeQhiovDQoud2lkZ2V0LWxlZnQgeyBmbG9hdDogbGVmdDsgY2xlYXI6IGxlZnQ7IHdpZHRoOiAxMDAlOyBtYXJnaW4tcmlnaHQ6IC0yOTBweDsgb3ZlcmZsb3c6IGhpZGRlbjsgfQ0KLndpZGdldC1saXN0IHsgbWluLXdpZHRoOiA1MzBweDsgbWFyZ2luLXJpZ2h0OiAyOTBweDsgYm9yZGVyOiAycHggc29saWQgI0VFRTsgfQ0KLnNpZGVyYmFyLWxpc3QgeyBmbG9hdDogcmlnaHQ7IHdpZHRoOiAyOTBweDsgbWFyZ2luLWxlZnQ6IDA7IH0NCi53aWRnZXQtbGlzdC1oZWFkZXIsDQouc2lkZXJiYXItaGVhZGVyLA0KLnNpZGVyYmFyLW5vdGUgeyBjbGVhcjogYm90aDsgYmFja2dyb3VuZDogI0VERURFRDsgcGFkZGluZzogNXB4OyBmb250LXNpemU6IDEuMWVtOyBmb250LXdlaWdodDogYm9sZDsgdGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tYm90dG9tOiAzcHg7IH0NCi53aWRnZXQgeyB3aWR0aDogMjUycHg7IGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IG1hcmdpbjogM3B4IDRweCAzcHggNHB4OyBwYWRkaW5nOiAwcHg7IGZsb2F0OiBsZWZ0OyB9DQoud2lkZ2V0IGltZyB7IG1hcmdpbjogM3B4OyBtYXJnaW4tYm90dG9tOiAtM3B4OyB9DQoud2lkZ2V0LXRpdGxlIHsgbWFyZ2luOiAwcHg7IHBhZGRpbmc6IDZweDsgY29sb3I6ICMzMzM7IGN1cnNvcjogbW92ZTsgfQ0KLndpZGdldC10aXRsZSBzcGFuIHsgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9DQoud2lkZ2V0X2lzaGlkZGVuX3RydWUgaW1nLm1vcmUtYWN0aW9uIHsgb3BhY2l0eTogMC40MDsgfQ0KLndpZGdldC1hY3Rpb24geyBmbG9hdDogcmlnaHQ7IH0NCi5zaWRlcmJhci1kcm9wIHsgZmxvYXQ6IHJpZ2h0OyBiYWNrZ3JvdW5kOiAjZmVmZWZlOyBib3JkZXI6IDJweCBzb2xpZCAjZWVlOyBtYXJnaW46IDAgNXB4IDEwcHggMTVweDsgfQ0KLnNpZGVyYmFyLXNvcnQtbGlzdCB7IGZsb2F0OiByaWdodDsgd2lkdGg6IDI2MnB4OyBtaW4taGVpZ2h0OiAzMHB4OyBwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDA7IH0NCi5zaWRlcmJhci1oZWFkZXI6aG92ZXIgeyBjdXJzb3I6IHBvaW50ZXI7IGNvbG9yOiAjMDAwMDAwOyBiYWNrZ3JvdW5kOiAjYjBjZGVlOyB9DQouc2lkZXJiYXItaGVhZGVyIC51aS1pY29uIHsgZmxvYXQ6IHJpZ2h0OyB9DQoud2lkZ2V0LWxpc3Qtbm90ZSwNCi5zaWRlcmJhci1ub3RlIHsgY29sb3I6ICM2NjY7IGJhY2tncm91bmQ6ICNmZmY7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgdGV4dC1hbGlnbjogY2VudGVyOyB9DQouc2lkZXJiYXItbm90ZSB7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMTsgdG9wOiAwOyBsZWZ0OiAwOyBtYXJnaW4tdG9wOiAzcHg7IHdpZHRoOiAyNTJweDsgfQ0KLnNpZGVyYmFyLXNvcnQtbGlzdCAud2lkZ2V0IHsgcG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAyOyB9DQoud2lkZ2V0X3NvdXJjZV9zeXN0ZW0gLndpZGdldC10aXRsZSB7IGJhY2tncm91bmQ6ICNlM2U0ZTQ7IH0NCi53aWRnZXRfc291cmNlX3VzZXIgLndpZGdldC10aXRsZSB7IGJhY2tncm91bmQ6ICNjNmQ0ZTU7IH0NCi53aWRnZXRfc291cmNlX3RoZW1lIC53aWRnZXQtdGl0bGUgeyBiYWNrZ3JvdW5kOiAjZDdlM2JjOyB9DQoud2lkZ2V0X3NvdXJjZV9wbHVnaW4gLndpZGdldC10aXRsZSB7IGJhY2tncm91bmQ6ICNkNGNkZGQ7IH0NCi53aWRnZXRfc291cmNlX290aGVyIC53aWRnZXQtdGl0bGUgeyBiYWNrZ3JvdW5kOiAjZGVkOWMwOyB9DQoud2lkZ2V0X3NvdXJjZV90aGVtZWluY2x1ZGUgLndpZGdldC10aXRsZSB7IGJhY2tncm91bmQ6ICNlM2JlYmM7IH0NCg0KLyouY3VzdG9tLXN0YXRlLWFjdGl2ZXtiYWNrZ3JvdW5kOiAjQjVEQ0YwO30qLw0KLnNpZGVyYmFyLWxpc3QgLnJvbGwgeyBkaXNwbGF5OiBub25lOyB9DQojZGlhbG9nLWNvbmZpcm0sDQojZGlhbG9nLWZvcm0geyBkaXNwbGF5OiBub25lOyB9DQojZGlhbG9nLWZvcm0gZm9ybSB7IHBhZGRpbmctbGVmdDogMTBweDsgfQ0KLmVkdWktZGVmYXVsdCAuZWR1aS1lZGl0b3IgeyB3aWR0aDogMTAwJSAhaW1wb3J0YW50OyB9DQoucGx1Z2luLW5vdGUgeyBjdXJzb3I6IHBvaW50ZXI7IH0NCiNsb2FkaW5nIHsgZGlzcGxheTogbm9uZTsgcG9zaXRpb246IGZpeGVkOyB6LWluZGV4OiAxMDAwOyB0b3A6IDA7IGxlZnQ6IDA7IGhlaWdodDogMTAwJTsgd2lkdGg6IDEwMCU7IGJhY2tncm91bmQ6IHJnYmEoMTcwLCAxNzAsIDE3MCwgLjMpIHVybCgnLi4vaW1hZ2UvYWRtaW4vbG9hZGluZy1iaWcuZ2lmJykgNTAlIDUwJSBuby1yZXBlYXQ7IH0NCi5sb2dpbiB7IGhlaWdodDogMTAwcHg7IG1hcmdpbjogMCBhdXRvOyBwYWRkaW5nLWxlZnQ6IDEwcHg7IH0NCi5sb2dpbiBkZCB7IHdpZHRoOiAxODBweDsgZmxvYXQ6IGxlZnQ7IH0=</file>
	<file name='zb_system\defend\createtable\mysql.sql' crc32='A24B17A3'  dt:dt='bin.base64'>Q1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgJXByZSVwb3N0ICgNCiAgbG9nX0lEIGludCgxMSkgTk9UIE5VTEwgQVVUT19JTkNSRU1FTlQsDQogIGxvZ19DYXRlSUQgaW50KDExKSBOT1QgTlVMTCBERUZBVUxUICcwJywNCiAgbG9nX0F1dGhvcklEIGludCgxMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogIGxvZ19UYWcgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGxvZ19TdGF0dXMgdGlueWludCg0KSBOT1QgTlVMTCBERUZBVUxUICcwJywNCiAgbG9nX1R5cGUgaW50KDExKSBOT1QgTlVMTCBERUZBVUxUICcwJywNCiAgbG9nX0FsaWFzIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBsb2dfSXNUb3AgaW50KDExKSBOT1QgTlVMTCBERUZBVUxUICcwJywNCiAgbG9nX0lzTG9jayB0aW55aW50KDQpIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KICBsb2dfVGl0bGUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGxvZ19JbnRybyB0ZXh0IE5PVCBOVUxMLA0KICBsb2dfQ29udGVudCBsb25ndGV4dCBOT1QgTlVMTCwNCiAgbG9nX1Bvc3RUaW1lIGludCgxMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogIGxvZ19Db21tTnVtcyBpbnQoMTEpIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KICBsb2dfVmlld051bXMgaW50KDExKSBOT1QgTlVMTCBERUZBVUxUICcwJywNCiAgbG9nX1RlbXBsYXRlIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBsb2dfTWV0YSBsb25ndGV4dCBOT1QgTlVMTCwNCiAgUFJJTUFSWSBLRVkgKGxvZ19JRCksDQogIEtFWSAlcHJlJWxvZ19UUElTQyAobG9nX1R5cGUsbG9nX1Bvc3RUaW1lLGxvZ19Jc1RvcCxsb2dfU3RhdHVzLGxvZ19DYXRlSUQpDQopIEVOR0lORT1NeUlTQU0gREVGQVVMVCBDSEFSU0VUPXV0ZjggQVVUT19JTkNSRU1FTlQ9MSA7DQoNCg0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgJXByZSVjYXRlZ29yeSAoDQogIGNhdGVfSUQgaW50KDExKSBOT1QgTlVMTCBBVVRPX0lOQ1JFTUVOVCwNCiAgY2F0ZV9OYW1lIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBjYXRlX09yZGVyIGludCgxMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogIGNhdGVfVHlwZSBpbnQoMTEpIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KICBjYXRlX0NvdW50IGludCgxMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogIGNhdGVfQWxpYXMgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGNhdGVfSW50cm8gdGV4dCBOT1QgTlVMTCwNCiAgY2F0ZV9Sb290SUQgaW50KDExKSBOT1QgTlVMTCBERUZBVUxUICcwJywNCiAgY2F0ZV9QYXJlbnRJRCBpbnQoMTEpIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KICBjYXRlX1RlbXBsYXRlIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBjYXRlX0xvZ1RlbXBsYXRlIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBjYXRlX01ldGEgbG9uZ3RleHQgTk9UIE5VTEwsDQogIFBSSU1BUlkgS0VZIChjYXRlX0lEKSwNCiAgS0VZICVwcmUlY2F0ZV9PcmRlciAoY2F0ZV9PcmRlcikNCikgRU5HSU5FPU15SVNBTSBERUZBVUxUIENIQVJTRVQ9dXRmOCBBVVRPX0lOQ1JFTUVOVD0xIDsNCg0KDQpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyAlcHJlJWNvbW1lbnQgKA0KICBjb21tX0lEIGludCgxMSkgTk9UIE5VTEwgQVVUT19JTkNSRU1FTlQsDQogIGNvbW1fTG9nSUQgaW50KDExKSBOT1QgTlVMTCBERUZBVUxUICcwJywNCiAgY29tbV9Jc0NoZWNraW5nIHRpbnlpbnQoNCkgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogIGNvbW1fUm9vdElEIGludCgxMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogIGNvbW1fUGFyZW50SUQgaW50KDExKSBOT1QgTlVMTCBERUZBVUxUICcwJywNCiAgY29tbV9BdXRob3JJRCBpbnQoMTEpIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KICBjb21tX05hbWUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGNvbW1fRW1haWwgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGNvbW1fSG9tZVBhZ2UgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGNvbW1fQ29udGVudCB0ZXh0IE5PVCBOVUxMLA0KICBjb21tX1Bvc3RUaW1lIGludCgxMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogIGNvbW1fSVAgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGNvbW1fQWdlbnQgdGV4dCBOT1QgTlVMTCwNCiAgY29tbV9NZXRhIGxvbmd0ZXh0IE5PVCBOVUxMLA0KICBQUklNQVJZIEtFWSAoY29tbV9JRCksDQogIEtFWSAlcHJlJWNvbW1fTFJJIChjb21tX0xvZ0lELGNvbW1fUm9vdElELGNvbW1fSXNDaGVja2luZyksDQogIEtFWSAlcHJlJWNvbW1fSXNDaGVja2luZyAoY29tbV9Jc0NoZWNraW5nKQ0KKSBFTkdJTkU9TXlJU0FNIERFRkFVTFQgQ0hBUlNFVD11dGY4IEFVVE9fSU5DUkVNRU5UPTEgOw0KDQoNCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTICVwcmUlY29uZmlnICgNCiAgY29uZl9JRCBpbnQoMTEpIE5PVCBOVUxMIEFVVE9fSU5DUkVNRU5ULA0KICBjb25mX05hbWUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGNvbmZfVmFsdWUgbG9uZ3RleHQgTk9UIE5VTEwsDQogIFBSSU1BUlkgS0VZIChjb25mX0lEKSwNCiAgS0VZICVwcmUlY29uZl9OYW1lIChjb25mX05hbWUpDQopIEVOR0lORT1NeUlTQU0gREVGQVVMVCBDSEFSU0VUPXV0Zjg7DQoNCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTICVwcmUlbWVtYmVyICgNCiAgbWVtX0lEIGludCgxMSkgTk9UIE5VTEwgQVVUT19JTkNSRU1FTlQsDQogIG1lbV9HdWlkIHZhcmNoYXIoMzYpIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIG1lbV9MZXZlbCB0aW55aW50KDQpIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KICBtZW1fU3RhdHVzIHRpbnlpbnQoNCkgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogIG1lbV9OYW1lIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBtZW1fUGFzc3dvcmQgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIG1lbV9FbWFpbCB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgbWVtX0hvbWVQYWdlIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBtZW1fSVAgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIG1lbV9Qb3N0VGltZSBpbnQoMTEpIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KICBtZW1fQWxpYXMgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIG1lbV9JbnRybyB0ZXh0IE5PVCBOVUxMLA0KICBtZW1fQXJ0aWNsZXMgaW50KDExKSBOT1QgTlVMTCBERUZBVUxUICcwJywNCiAgbWVtX1BhZ2VzIGludCgxMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogIG1lbV9Db21tZW50cyBpbnQoMTEpIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KICBtZW1fVXBsb2FkcyBpbnQoMTEpIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KICBtZW1fVGVtcGxhdGUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIG1lbV9NZXRhIGxvbmd0ZXh0IE5PVCBOVUxMLA0KICBQUklNQVJZIEtFWSAobWVtX0lEKSwNCiAgS0VZICVwcmUlbWVtX05hbWUgKG1lbV9OYW1lKSwNCiAgS0VZICVwcmUlbWVtX0FsaWFzIChtZW1fQWxpYXMpLA0KICBLRVkgJXByZSVtZW1fTGV2ZWwgKG1lbV9MZXZlbCkNCikgRU5HSU5FPU15SVNBTSBERUZBVUxUIENIQVJTRVQ9dXRmOCBBVVRPX0lOQ1JFTUVOVD0xIDsNCg0KDQpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyAlcHJlJW1vZHVsZSAoDQogIG1vZF9JRCBpbnQoMTEpIE5PVCBOVUxMIEFVVE9fSU5DUkVNRU5ULA0KICBtb2RfTmFtZSB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgbW9kX0ZpbGVOYW1lIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBtb2RfQ29udGVudCB0ZXh0IE5PVCBOVUxMLA0KICBtb2RfU2lkZWJhcklEIGludCgxMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogIG1vZF9IdG1sSUQgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIG1vZF9UeXBlIHZhcmNoYXIoNSkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgbW9kX01heExpIGludCgxMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogIG1vZF9Tb3VyY2UgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIG1vZF9Jc0hpZGVUaXRsZSB0aW55aW50KDQpIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KICBtb2RfTWV0YSBsb25ndGV4dCBOT1QgTlVMTCwNCiAgUFJJTUFSWSBLRVkgKG1vZF9JRCkNCikgRU5HSU5FPU15SVNBTSBERUZBVUxUIENIQVJTRVQ9dXRmOCBBVVRPX0lOQ1JFTUVOVD0xIDsNCg0KDQpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyAlcHJlJXRhZyAoDQogIHRhZ19JRCBpbnQoMTEpIE5PVCBOVUxMIEFVVE9fSU5DUkVNRU5ULA0KICB0YWdfTmFtZSB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgdGFnX09yZGVyIGludCgxMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogIHRhZ19UeXBlIGludCgxMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogIHRhZ19Db3VudCBpbnQoMTEpIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KICB0YWdfQWxpYXMgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsIA0KICB0YWdfSW50cm8gdGV4dCBOT1QgTlVMTCwgIA0KICB0YWdfVGVtcGxhdGUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIHRhZ19NZXRhIGxvbmd0ZXh0IE5PVCBOVUxMLA0KICBQUklNQVJZIEtFWSAodGFnX0lEKQ0KKSBFTkdJTkU9TXlJU0FNIERFRkFVTFQgQ0hBUlNFVD11dGY4IEFVVE9fSU5DUkVNRU5UPTEgOw0KDQoNCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTICVwcmUldXBsb2FkICgNCiAgdWxfSUQgaW50KDExKSBOT1QgTlVMTCBBVVRPX0lOQ1JFTUVOVCwNCiAgdWxfQXV0aG9ySUQgaW50KDExKSBOT1QgTlVMTCBERUZBVUxUICcwJywNCiAgdWxfU2l6ZSBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgMCwNCiAgdWxfTmFtZSB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgdWxfU291cmNlTmFtZSB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgdWxfTWltZVR5cGUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIHVsX1Bvc3RUaW1lIGludCgxMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogIHVsX0Rvd25OdW1zIGludCgxMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogIHVsX0xvZ0lEIGludCgxMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsICANCiAgdWxfSW50cm8gdGV4dCBOT1QgTlVMTCwNCiAgdWxfTWV0YSBsb25ndGV4dCBOT1QgTlVMTCwNCiAgUFJJTUFSWSBLRVkgKHVsX0lEKQ0KKSBFTkdJTkU9TXlJU0FNIERFRkFVTFQgQ0hBUlNFVD11dGY4IEFVVE9fSU5DUkVNRU5UPTEgOw==</file>
	<file name='zb_system\defend\createtable\pgsql.sql' crc32='102A8D2B'  dt:dt='bin.base64'>Q1JFQVRFIFNFUVVFTkNFICVwcmUlcG9zdF9zZXE7DQpDUkVBVEUgVEFCTEUgJXByZSVwb3N0ICgNCiBsb2dfSUQgSU5UIE5PVCBOVUxMIERFRkFVTFQgbmV4dHZhbCgnJXByZSVwb3N0X3NlcScpLA0KIGxvZ19DYXRlSUQgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUICcwJywNCiBsb2dfQXV0aG9ySUQgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUICcwJywNCiBsb2dfVGFnIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KIGxvZ19TdGF0dXMgc21hbGxpbnQgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogbG9nX1R5cGUgc21hbGxpbnQgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogbG9nX0FsaWFzIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KIGxvZ19Jc1RvcCBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KIGxvZ19Jc0xvY2sgY2hhcigxKSBOT1QgTlVMTCBERUZBVUxUICcwJywNCiBsb2dfVGl0bGUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogbG9nX0ludHJvIHRleHQgTk9UIE5VTEwsDQogbG9nX0NvbnRlbnQgdGV4dCBOT1QgTlVMTCwNCiBsb2dfUG9zdFRpbWUgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUICcwJywNCiBsb2dfQ29tbU51bXMgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUICcwJywNCiBsb2dfVmlld051bXMgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUICcwJywNCiBsb2dfVGVtcGxhdGUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogbG9nX01ldGEgdGV4dCBOT1QgTlVMTCwNCiAgUFJJTUFSWSBLRVkgKGxvZ19JRCkNCikgOw0KQ1JFQVRFIElOREVYICVwcmUlcG9zdF9peF9pZCBPTiAlcHJlJXBvc3QobG9nX0lEKTsNCkNSRUFURSBJTkRFWCAlcHJlJXBvc3RfaXhfcHQgT04gJXByZSVwb3N0KGxvZ19Qb3N0VGltZSk7DQpDUkVBVEUgSU5ERVggJXByZSVwb3N0X2l4X3RwaXNjIE9OICVwcmUlcG9zdChsb2dfVHlwZSxsb2dfUG9zdFRpbWUsbG9nX0lzVG9wLGxvZ19TdGF0dXMsbG9nX0NhdGVJRCk7DQpDUkVBVEUgSU5ERVggJXByZSVwb3N0X2l4X3Z0c2MgT04gJXByZSVwb3N0KGxvZ19WaWV3TnVtcyxsb2dfVHlwZSxsb2dfU3RhdHVzLGxvZ19DYXRlSUQpOw0KDQpDUkVBVEUgU0VRVUVOQ0UgJXByZSVjYXRlZ29yeV9zZXE7DQpDUkVBVEUgVEFCTEUgJXByZSVjYXRlZ29yeSAoDQogY2F0ZV9JRCBJTlQgTk9UIE5VTEwgREVGQVVMVCBuZXh0dmFsKCclcHJlJWNhdGVnb3J5X3NlcScpLA0KIGNhdGVfTmFtZSB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiBjYXRlX09yZGVyIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogY2F0ZV9UeXBlIHNtYWxsaW50IE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KIGNhdGVfQ291bnQgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUICcwJywNCiBjYXRlX0FsaWFzIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KIGNhdGVfSW50cm8gdGV4dCBOT1QgTlVMTCwNCiBjYXRlX1Jvb3RJRCBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KIGNhdGVfUGFyZW50SUQgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUICcwJywNCiBjYXRlX1RlbXBsYXRlIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KIGNhdGVfTG9nVGVtcGxhdGUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogY2F0ZV9NZXRhIHRleHQgTk9UIE5VTEwsDQogIFBSSU1BUlkgS0VZIChjYXRlX0lEKQ0KKSA7DQpDUkVBVEUgSU5ERVggJXByZSVjYXRlZ29yeV9peF9pZCBPTiAlcHJlJWNhdGVnb3J5KGNhdGVfSUQpOw0KDQpDUkVBVEUgU0VRVUVOQ0UgJXByZSVjb21tZW50X3NlcTsNCkNSRUFURSBUQUJMRSAlcHJlJWNvbW1lbnQgKA0KIGNvbW1fSUQgSU5UIE5PVCBOVUxMIERFRkFVTFQgbmV4dHZhbCgnJXByZSVjb21tZW50X3NlcScpLA0KIGNvbW1fTG9nSUQgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUICcwJywNCiBjb21tX0lzQ2hlY2tpbmcgY2hhcigxKSBOT1QgTlVMTCBERUZBVUxUICcwJywNCiBjb21tX1Jvb3RJRCBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KIGNvbW1fUGFyZW50SUQgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUICcwJywNCiBjb21tX0F1dGhvcklEIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogY29tbV9OYW1lIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KIGNvbW1fRW1haWwgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogY29tbV9Ib21lUGFnZSB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiBjb21tX0NvbnRlbnQgdGV4dCBOT1QgTlVMTCwNCiBjb21tX1Bvc3RUaW1lIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogY29tbV9JUCB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiBjb21tX0FnZW50IHRleHQgTk9UIE5VTEwsDQogY29tbV9NZXRhIHRleHQgTk9UIE5VTEwsDQogIFBSSU1BUlkgS0VZIChjb21tX0lEKQ0KKSA7DQpDUkVBVEUgSU5ERVggJXByZSVjb21tZW50X2l4X2lkIE9OICVwcmUlY29tbWVudChjb21tX0lEKTsNCg0KQ1JFQVRFIFNFUVVFTkNFICVwcmUlY29uZmlnX3NlcTsNCkNSRUFURSBUQUJMRSAlcHJlJWNvbmZpZyAoDQogY29uZl9JRCBJTlQgTk9UIE5VTEwgREVGQVVMVCBuZXh0dmFsKCclcHJlJWNvbmZpZ19zZXEnKSwNCiBjb25mX05hbWUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogY29uZl9WYWx1ZSB0ZXh0LA0KICBQUklNQVJZIEtFWSAoY29uZl9JRCkNCikgOw0KQ1JFQVRFIElOREVYICVwcmUlY29uZmlnX2l4X2lkIE9OICVwcmUlY29uZmlnKGNvbmZfSUQpOw0KDQpDUkVBVEUgU0VRVUVOQ0UgJXByZSVtZW1iZXJfc2VxOw0KQ1JFQVRFIFRBQkxFICVwcmUlbWVtYmVyICgNCiBtZW1fSUQgSU5UIE5PVCBOVUxMIERFRkFVTFQgbmV4dHZhbCgnJXByZSVtZW1iZXJfc2VxJyksDQogbWVtX0d1aWQgdmFyY2hhcigzNikgTk9UIE5VTEwgREVGQVVMVCAnJywNCiBtZW1fTGV2ZWwgc21hbGxpbnQgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogbWVtX1N0YXR1cyBzbWFsbGludCBOT1QgTlVMTCBERUZBVUxUICcwJywNCiBtZW1fTmFtZSB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiBtZW1fUGFzc3dvcmQgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogbWVtX0VtYWlsIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KIG1lbV9Ib21lUGFnZSB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiBtZW1fSVAgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogbWVtX1Bvc3RUaW1lIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogbWVtX0FsaWFzIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KIG1lbV9JbnRybyB0ZXh0IE5PVCBOVUxMLA0KIG1lbV9BcnRpY2xlcyBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KIG1lbV9QYWdlcyBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KIG1lbV9Db21tZW50cyBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KIG1lbV9VcGxvYWRzIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogbWVtX1RlbXBsYXRlIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KIG1lbV9NZXRhIHRleHQgTk9UIE5VTEwsDQogIFBSSU1BUlkgS0VZIChtZW1fSUQpDQopIDsNCkNSRUFURSBJTkRFWCAlcHJlJW1lbWJlcl9peF9pZCBPTiAlcHJlJW1lbWJlcihtZW1fSUQpOw0KQ1JFQVRFIElOREVYICVwcmUlbWVtYmVyX2l4X25hbWUgT04gJXByZSVtZW1iZXIobWVtX05hbWUpOw0KQ1JFQVRFIElOREVYICVwcmUlbWVtYmVyX2l4X2FsaWFzIE9OICVwcmUlbWVtYmVyKG1lbV9BbGlhcyk7DQoNCkNSRUFURSBTRVFVRU5DRSAlcHJlJW1vZHVsZV9zZXE7DQpDUkVBVEUgVEFCTEUgJXByZSVtb2R1bGUgKA0KIG1vZF9JRCBJTlQgTk9UIE5VTEwgREVGQVVMVCBuZXh0dmFsKCclcHJlJW1vZHVsZV9zZXEnKSwNCiBtb2RfTmFtZSB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiBtb2RfRmlsZU5hbWUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogbW9kX0NvbnRlbnQgdGV4dCBOT1QgTlVMTCwNCiBtb2RfU2lkZWJhcklEIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogbW9kX0h0bWxJRCB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiBtb2RfVHlwZSB2YXJjaGFyKDUpIE5PVCBOVUxMIERFRkFVTFQgJycsDQogbW9kX01heExpIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogbW9kX1NvdXJjZSB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiBtb2RfSXNIaWRlVGl0bGUgY2hhcigxKSBOT1QgTlVMTCBERUZBVUxUICcwJywNCiBtb2RfTWV0YSB0ZXh0IE5PVCBOVUxMLA0KICBQUklNQVJZIEtFWSAobW9kX0lEKQ0KKSA7DQpDUkVBVEUgSU5ERVggJXByZSVtb2R1bGVfaXhfaWQgT04gJXByZSVtb2R1bGUobW9kX0lEKTsNCg0KQ1JFQVRFIFNFUVVFTkNFICVwcmUldGFnX3NlcTsNCkNSRUFURSBUQUJMRSAlcHJlJXRhZyAoDQogIHRhZ19JRCBJTlQgTk9UIE5VTEwgREVGQVVMVCBuZXh0dmFsKCclcHJlJXRhZ19zZXEnKSwNCiAgdGFnX05hbWUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIHRhZ19PcmRlciBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KICB0YWdfVHlwZSBzbWFsbGludCBOT1QgTlVMTCBERUZBVUxUICcwJywNCiAgdGFnX0NvdW50IGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogIHRhZ19BbGlhcyB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywgDQogIHRhZ19JbnRybyB0ZXh0IE5PVCBOVUxMLCAgDQogIHRhZ19UZW1wbGF0ZSB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgdGFnX01ldGEgdGV4dCBOT1QgTlVMTCwNCiAgUFJJTUFSWSBLRVkgKHRhZ19JRCkNCikgOw0KQ1JFQVRFIElOREVYICVwcmUldGFnX2l4X2lkIE9OICVwcmUldGFnKHRhZ19JRCk7DQoNCkNSRUFURSBTRVFVRU5DRSAlcHJlJXVwbG9hZF9zZXE7DQpDUkVBVEUgVEFCTEUgJXByZSV1cGxvYWQgKA0KIHVsX0lEIElOVCBOT1QgTlVMTCBERUZBVUxUIG5leHR2YWwoJyVwcmUldXBsb2FkX3NlcScpLA0KIHVsX0F1dGhvcklEIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAnMCcsDQogdWxfU2l6ZSBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgMCwNCiB1bF9OYW1lIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KIHVsX1NvdXJjZU5hbWUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogdWxfTWltZVR5cGUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogdWxfUG9zdFRpbWUgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUICcwJywNCiB1bF9Eb3duTnVtcyBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgJzAnLA0KIHVsX0xvZ0lEIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAnMCcsICANCiB1bF9JbnRybyB0ZXh0IE5PVCBOVUxMLA0KIHVsX01ldGEgdGV4dCBOT1QgTlVMTCwNCiAgUFJJTUFSWSBLRVkgKHVsX0lEKQ0KKSA7DQpDUkVBVEUgSU5ERVggJXByZSV1cGxvYWRfaXhfaWQgT04gJXByZSV1cGxvYWQodWxfSUQpOw==</file>
	<file name='zb_system\defend\createtable\sqlite.sql' crc32='281518EE'  dt:dt='bin.base64'>Q1JFQVRFIFRBQkxFICVwcmUlcG9zdCAoDQogIGxvZ19JRCBpbnRlZ2VyIHByaW1hcnkga2V5IGF1dG9pbmNyZW1lbnQsDQogIGxvZ19DYXRlSUQgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUIDAsDQogIGxvZ19BdXRob3JJRCBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgMCwNCiAgbG9nX1RhZyB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgbG9nX1N0YXR1cyBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgMCwNCiAgbG9nX1R5cGUgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUIDAsDQogIGxvZ19BbGlhcyB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgbG9nX0lzVG9wIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAwLA0KICBsb2dfSXNMb2NrIGJpdCBOT1QgTlVMTCBERUZBVUxUIDAsDQogIGxvZ19UaXRsZSB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgbG9nX0ludHJvIHRleHQgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgbG9nX0NvbnRlbnQgdGV4dCBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBsb2dfUG9zdFRpbWUgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUIDAsDQogIGxvZ19Db21tTnVtcyBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgMCwNCiAgbG9nX1ZpZXdOdW1zIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAwLA0KICBsb2dfVGVtcGxhdGUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGxvZ19NZXRhIHRleHQgTk9UIE5VTEwgREVGQVVMVCAnJw0KKTsNCg0KDQpDUkVBVEUgVEFCTEUgJXByZSVjYXRlZ29yeSAoDQogIGNhdGVfSUQgaW50ZWdlciBwcmltYXJ5IGtleSBhdXRvaW5jcmVtZW50LA0KICBjYXRlX05hbWUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGNhdGVfT3JkZXIgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUIDAsDQogIGNhdGVfVHlwZSBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgMCwNCiAgY2F0ZV9Db3VudCBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgMCwNCiAgY2F0ZV9BbGlhcyB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgY2F0ZV9JbnRybyB0ZXh0IE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGNhdGVfUm9vdElEIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAwLA0KICBjYXRlX1BhcmVudElEIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAwLA0KICBjYXRlX1RlbXBsYXRlIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBjYXRlX0xvZ1RlbXBsYXRlIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBjYXRlX01ldGEgdGV4dCBOT1QgTlVMTCBERUZBVUxUICcnDQopOw0KDQoNCkNSRUFURSBUQUJMRSAlcHJlJWNvbW1lbnQgKA0KICBjb21tX0lEIGludGVnZXIgcHJpbWFyeSBrZXkgYXV0b2luY3JlbWVudCwNCiAgY29tbV9Mb2dJRCBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgMCwNCiAgY29tbV9Jc0NoZWNraW5nIGJpdCBOT1QgTlVMTCBERUZBVUxUIDAsDQogIGNvbW1fUm9vdElEIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAwLA0KICBjb21tX1BhcmVudElEIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAwLA0KICBjb21tX0F1dGhvcklEIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAwLA0KICBjb21tX05hbWUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGNvbW1fRW1haWwgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGNvbW1fSG9tZVBhZ2UgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGNvbW1fQ29udGVudCB0ZXh0IE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGNvbW1fUG9zdFRpbWUgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUIDAsDQogIGNvbW1fSVAgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGNvbW1fQWdlbnQgdGV4dCBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBjb21tX01ldGEgdGV4dCBOT1QgTlVMTCBERUZBVUxUICcnDQopOw0KDQoNCkNSRUFURSBUQUJMRSAlcHJlJWNvbmZpZyAoDQogIGNvbmZfSUQgaW50ZWdlciBwcmltYXJ5IGtleSBhdXRvaW5jcmVtZW50LA0KICBjb25mX05hbWUgdmFyY2hhcigyNTApIE5PVCBOVUxMIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIGNvbmZfVmFsdWUgdGV4dA0KKTsNCg0KDQpDUkVBVEUgVEFCTEUgJXByZSVtZW1iZXIgKA0KICBtZW1fSUQgaW50ZWdlciBwcmltYXJ5IGtleSBhdXRvaW5jcmVtZW50LA0KICBtZW1fR3VpZCB2YXJjaGFyKDM2KSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBtZW1fTGV2ZWwgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUIDAsDQogIG1lbV9TdGF0dXMgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUIDAsDQogIG1lbV9OYW1lIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBtZW1fUGFzc3dvcmQgdmFyY2hhcigzMikgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgbWVtX0VtYWlsIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBtZW1fSG9tZVBhZ2UgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIG1lbV9JUCB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgbWVtX1Bvc3RUaW1lIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAwLA0KICBtZW1fQWxpYXMgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIG1lbV9JbnRybyB0ZXh0IE5PVCBOVUxMIERFRkFVTFQgJycsDQogIG1lbV9BcnRpY2xlcyBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgMCwNCiAgbWVtX1BhZ2VzIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAwLA0KICBtZW1fQ29tbWVudHMgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUIDAsDQogIG1lbV9VcGxvYWRzIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCAwLA0KICBtZW1fVGVtcGxhdGUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsICANCiAgbWVtX01ldGEgdGV4dCBOT1QgTlVMTCBERUZBVUxUICcnDQopOw0KDQoNCkNSRUFURSBUQUJMRSAlcHJlJW1vZHVsZSAoDQogIG1vZF9JRCBpbnRlZ2VyIHByaW1hcnkga2V5IGF1dG9pbmNyZW1lbnQsDQogIG1vZF9OYW1lIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBtb2RfRmlsZU5hbWUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIG1vZF9Db250ZW50IHRleHQgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgbW9kX1NpZGViYXJJRCBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgMCwNCiAgbW9kX0h0bWxJRCB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgbW9kX1R5cGUgdmFyY2hhcig1KSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBtb2RfTWF4TGkgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUIDAsDQogIG1vZF9Tb3VyY2UgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIG1vZF9Jc0hpZGVUaXRsZSBiaXQgTk9UIE5VTEwgREVGQVVMVCAwLA0KICBtb2RfTWV0YSB0ZXh0IE5PVCBOVUxMIERFRkFVTFQgJycNCik7DQoNCg0KQ1JFQVRFIFRBQkxFICVwcmUldGFnICgNCiAgdGFnX0lEIGludGVnZXIgcHJpbWFyeSBrZXkgYXV0b2luY3JlbWVudCwNCiAgdGFnX05hbWUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIHRhZ19PcmRlciBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgMCwNCiAgdGFnX1R5cGUgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUIDAsDQogIHRhZ19Db3VudCBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgMCwNCiAgdGFnX0FsaWFzIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLCAgDQogIHRhZ19JbnRybyB0ZXh0IE5PVCBOVUxMIERFRkFVTFQgJycsDQogIHRhZ19UZW1wbGF0ZSB2YXJjaGFyKDI1MCkgTk9UIE5VTEwgREVGQVVMVCAnJywNCiAgdGFnX01ldGEgdGV4dCBOT1QgTlVMTCBERUZBVUxUICcnDQopOw0KDQoNCkNSRUFURSBUQUJMRSAlcHJlJXVwbG9hZCAoDQogIHVsX0lEIGludGVnZXIgcHJpbWFyeSBrZXkgYXV0b2luY3JlbWVudCwNCiAgdWxfQXV0aG9ySUQgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUIDAsDQogIHVsX1NpemUgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUIDAsDQogIHVsX05hbWUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIHVsX1NvdXJjZU5hbWUgdmFyY2hhcigyNTApIE5PVCBOVUxMIERFRkFVTFQgJycsDQogIHVsX01pbWVUeXBlIHZhcmNoYXIoMjUwKSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICB1bF9Qb3N0VGltZSBpbnRlZ2VyIE5PVCBOVUxMIERFRkFVTFQgMCwNCiAgdWxfRG93bk51bXMgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUIDAsDQogIHVsX0xvZ0lEIGludCgxMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsICANCiAgdWxfSW50cm8gdGV4dCBOT1QgTlVMTCBERUZBVUxUICcnLA0KICB1bF9NZXRhIHRleHQgTk9UIE5VTEwgREVGQVVMVCAnJw0KKTsNCg0KQ1JFQVRFIElOREVYICVwcmUlbG9nX1Bvc3RUaW1lIG9uICVwcmUlcG9zdCAobG9nX1Bvc3RUaW1lKTsNCkNSRUFURSBJTkRFWCAlcHJlJWNhdGVfT3JkZXIgb24gJXByZSVjYXRlZ29yeSAoY2F0ZV9PcmRlcik7DQpDUkVBVEUgSU5ERVggJXByZSVtZW1fTmFtZSBvbiAlcHJlJW1lbWJlciAobWVtX05hbWUpOw0KQ1JFQVRFIElOREVYICVwcmUlbWVtX0FsaWFzIG9uICVwcmUlbWVtYmVyIChtZW1fQWxpYXMpOw0KQ1JFQVRFIFVOSVFVRSBJTkRFWCAlcHJlJXRhZ19JRCBvbiAlcHJlJXRhZyAodGFnX0lEKTsNCkNSRUFURSBVTklRVUUgSU5ERVggJXByZSVsb2dfSUQgb24gJXByZSVwb3N0IChsb2dfSUQpOw0KQ1JFQVRFIFVOSVFVRSBJTkRFWCAlcHJlJWNhdGVfSUQgb24gJXByZSVjYXRlZ29yeSAoY2F0ZV9JRCk7DQpDUkVBVEUgVU5JUVVFIElOREVYICVwcmUlY29tbV9JRCBvbiAlcHJlJWNvbW1lbnQgKGNvbW1fSUQpOw0KQ1JFQVRFIFVOSVFVRSBJTkRFWCAlcHJlJXVsX0lEIG9uICVwcmUldXBMb2FkICh1bF9JRCk7DQpDUkVBVEUgVU5JUVVFIElOREVYICVwcmUlbWVtX0lEIG9uICVwcmUlbWVtYmVyIChtZW1fSUQpOw0KQ1JFQVRFIFVOSVFVRSBJTkRFWCAlcHJlJW1vZF9JRCBvbiAlcHJlJW1vZHVsZSAobW9kX0lEKTsNCkNSRUFURSBVTklRVUUgSU5ERVggJXByZSVjb25mX0lEIG9uICVwcmUlY29uZmlnIChjb25mX0lEKTs=</file>
	<file name='zb_system\function\c_system_misc.php' crc32='CE737259'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\c_system_version.php' crc32='8097941F'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoNCiAqIOWumuS5ieeJiOacrOWPtw0KDQrov5nmmK8xLjXlj5bmtojnmoTmlbDnu4TvvIzooqvlronmjpLliLDlupTnlKjkuK3lv4PlrqLmiLfnq6/nmoRpbmNsdWRlLnBocOaWh+S7tumHjOOAgg0KI+WumuS5ieeJiOacrOWPt+WIlw0KJHpicHZlcnM9YXJyYXkoKTsNCiR6YnB2ZXJzWycxMzA3MDcnXT0nMS4wIEJldGEgQnVpbGQgMTMwNzA3JzsNCiR6YnB2ZXJzWycxMzExMTEnXT0nMS4wIEJldGEyIEJ1aWxkIDEzMTExMSc7DQokemJwdmVyc1snMTMxMjIxJ109JzEuMSBUYWljaGkgQnVpbGQgMTMxMjIxJzsNCiR6YnB2ZXJzWycxNDAyMjAnXT0nMS4yIEhpcHBvIEJ1aWxkIDE0MDIyMCc7DQokemJwdmVyc1snMTQwNjE0J109JzEuMyBXb25jZSBCdWlsZCAxNDA2MTQnOw0KJHpicHZlcnNbJzE1MDEwMSddPScxLjQgRGVlcGx1ZSBCdWlsZCAxNTAxMDEnOw0KJHpicHZlcnNbJzE1MTYyNiddPScxLjUgWmVybyBCdWlsZCAxNTE2MjYnOw0KDQogKi8NCmRlZmluZSgnWkNfVkVSU0lPTl9NQUpPUicsICcxJyk7DQpkZWZpbmUoJ1pDX1ZFUlNJT05fTUlOT1InLCAnNicpOw0KZGVmaW5lKCdaQ19WRVJTSU9OX0JVSUxEJywgJzcnKTsNCmRlZmluZSgnWkNfVkVSU0lPTl9DT01NSVQnLCAnMjE2MCcpOw0KZGVmaW5lKCdaQ19WRVJTSU9OX0NPREVOQU1FJywgJ1ZhbHlyaWEnKTsNCmRlZmluZSgnWkNfVkVSU0lPTicsIFpDX1ZFUlNJT05fTUFKT1IgLiAnLicgLiBaQ19WRVJTSU9OX01JTk9SIC4gJy4nIC4gWkNfVkVSU0lPTl9CVUlMRCAuICcuJyAuIFpDX1ZFUlNJT05fQ09NTUlUKTsNCmRlZmluZSgnWkNfVkVSU0lPTl9ESVNQTEFZJywgWkNfVkVSU0lPTl9NQUpPUiAuICcuJyAuIFpDX1ZFUlNJT05fTUlOT1IgLiAnLicgLiBaQ19WRVJTSU9OX0JVSUxEIC4gJyAnIC4gWkNfVkVSU0lPTl9DT0RFTkFNRSk7DQpkZWZpbmUoJ1pDX1ZFUlNJT05fRlVMTCcsIFpDX1ZFUlNJT04gLiAnICgnIC4gWkNfVkVSU0lPTl9DT0RFTkFNRSAuICcpJyk7DQpkZWZpbmUoJ1pDX0JMT0dfQ09NTUlUJywgWkNfVkVSU0lPTl9DT01NSVQpOyAvLyDkuLrlhpnlhaXns7vnu5/phY3nva7nu5/kuIDpo47moLwNCiRHTE9CQUxTWydibG9ndmVyc2lvbiddID0gWkNfVkVSU0lPTl9NQUpPUiAuIFpDX1ZFUlNJT05fTUlOT1IgLiBaQ19WRVJTSU9OX0NPTU1JVDsNCmRlZmluZSgnWkNfQkxPR19WRVJTSU9OJywgWkNfVkVSU0lPTl9ESVNQTEFZIC4gJyBCdWlsZCAnIC4gJEdMT0JBTFNbJ2Jsb2d2ZXJzaW9uJ10pOw0K</file>
	<file name='zb_system\function\lib\app.php' crc32='FA2046E1'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\config.php' crc32='B97C0B6B'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\post.php' crc32='ECAF79E2'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\upload.php' crc32='29E4A4F9'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KDQovKioNCiAqIOS4iuS8oOexuy4NCiAqDQogKiBAcHJvcGVydHkgc3RyaW5nIE5hbWUNCiAqIEBwcm9wZXJ0eSBzdHJpbmcgRnVsbEZpbGUNCiAqIEBwcm9wZXJ0eSBzdHJpbmcgU2l6ZQ0KICogQHByb3BlcnR5IHN0cmluZyBEaXINCiAqIEBwcm9wZXJ0eSBpbnQgUG9zdFRpbWUNCiAqIEBwcm9wZXJ0eSBpbnR8c3RyaW5nIEF1dGhvcklEDQogKiBAcHJvcGVydHkgc3RyaW5nIFNvdXJjZU5hbWUNCiAqIEBwcm9wZXJ0eSBzdHJpbmcgTWltZVR5cGUNCiAqIEBwcm9wZXJ0eSBNZW1iZXIgQXV0aG9yDQogKi8NCmNsYXNzIFVwbG9hZCBleHRlbmRzIEJhc2UNCnsNCiAgICBwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQogICAgICAgIHBhcmVudDo6X19jb25zdHJ1Y3QoJHpicC0+dGFibGVbJ1VwbG9hZCddLCAkemJwLT5kYXRhaW5mb1snVXBsb2FkJ10sIF9fQ0xBU1NfXyk7DQoNCiAgICAgICAgJHRoaXMtPlBvc3RUaW1lID0gdGltZSgpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJGV4dExpc3QNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDaGVja0V4dE5hbWUoJGV4dExpc3QgPSAnJykNCiAgICB7DQogICAgICAgIGdsb2JhbCAkemJwOw0KICAgICAgICAkZSA9IEdldEZpbGVFeHQoJHRoaXMtPk5hbWUpOw0KICAgICAgICAkZXh0TGlzdCA9IHN0cnRvbG93ZXIoJGV4dExpc3QpOw0KICAgICAgICAvLyDml6DorrrlpoLkvZXvvIznpoHmraIucGhw44CBLnBocDXkuYvnsbvnmoTmlofku7bnmoTkuIrkvKANCiAgICAgICAgaWYgKHByZWdfbWF0Y2goJy9waHAvaScsICRlKSkgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgICAgIGlmICh0cmltKCRleHRMaXN0KSA9PSAnJykgew0KICAgICAgICAgICAgJGV4dExpc3QgPSAkemJwLT5vcHRpb25bJ1pDX1VQTE9BRF9GSUxFVFlQRSddOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIEhhc05hbWVJblN0cmluZygkZXh0TGlzdCwgJGUpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDaGVja1NpemUoKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQogICAgICAgICRuID0gMTAyNCAqIDEwMjQgKiAoaW50KSAkemJwLT5vcHRpb25bJ1pDX1VQTE9BRF9GSUxFU0laRSddOw0KDQogICAgICAgIHJldHVybiAkbiA+PSAkdGhpcy0+U2l6ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gRGVsRmlsZSgpDQogICAgew0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9VcGxvYWRfRGVsRmlsZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkdGhpcyk7DQogICAgICAgICAgICBpZiAoJGZwc2lnbmFsID09IFBMVUdJTl9FWElUU0lHTkFMX1JFVFVSTikgew0KICAgICAgICAgICAgICAgICRmcHNpZ25hbCA9IFBMVUdJTl9FWElUU0lHTkFMX05PTkU7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gJGZwcmV0dXJuOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGlmIChmaWxlX2V4aXN0cygkdGhpcy0+RnVsbEZpbGUpKSB7DQogICAgICAgICAgICBAdW5saW5rKCR0aGlzLT5GdWxsRmlsZSk7DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHRtcA0KICAgICAqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFNhdmVGaWxlKCR0bXApDQogICAgew0KICAgICAgICBnbG9iYWwgJHpicDsNCg0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9VcGxvYWRfU2F2ZUZpbGUnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHRtcCwgJHRoaXMpOw0KICAgICAgICAgICAgaWYgKCRmcHNpZ25hbCA9PSBQTFVHSU5fRVhJVFNJR05BTF9SRVRVUk4pIHsNCiAgICAgICAgICAgICAgICAkZnBzaWduYWwgPSBQTFVHSU5fRVhJVFNJR05BTF9OT05FOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuICRmcHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIGlmICghZmlsZV9leGlzdHMoJHpicC0+dXNlcnNkaXIgLiAkdGhpcy0+RGlyKSkgew0KICAgICAgICAgICAgQG1rZGlyKCR6YnAtPnVzZXJzZGlyIC4gJHRoaXMtPkRpciwgMDc1NSwgdHJ1ZSk7DQogICAgICAgIH0NCiAgICAgICAgaWYgKFBIUF9TWVNURU0gPT09IFNZU1RFTV9XSU5ET1dTKSB7DQogICAgICAgICAgICAkZm4gPSBpY29udigiVVRGLTgiLCAkemJwLT5sYW5nWyd3aW5kb3dzX2NoYXJhY3Rlcl9zZXQnXSAuICIvL0lHTk9SRSIsICR0aGlzLT5OYW1lKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICRmbiA9ICR0aGlzLT5OYW1lOw0KICAgICAgICB9DQogICAgICAgIGlmICgkdGhpcy0+Q2hlY2tFeHROYW1lKCkpIHsNCiAgICAgICAgICAgIEBtb3ZlX3VwbG9hZGVkX2ZpbGUoJHRtcCwgJHpicC0+dXNlcnNkaXIgLiAkdGhpcy0+RGlyIC4gJGZuKTsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRzdHI2NA0KICAgICAqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFNhdmVCYXNlNjRGaWxlKCRzdHI2NCkNCiAgICB7DQogICAgICAgIGdsb2JhbCAkemJwOw0KDQogICAgICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX1VwbG9hZF9TYXZlQmFzZTY0RmlsZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkc3RyNjQsICR0aGlzKTsNCiAgICAgICAgICAgIGlmICgkZnBzaWduYWwgPT0gUExVR0lOX0VYSVRTSUdOQUxfUkVUVVJOKSB7DQogICAgICAgICAgICAgICAgJGZwc2lnbmFsID0gUExVR0lOX0VYSVRTSUdOQUxfTk9ORTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiAkZnByZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoIWZpbGVfZXhpc3RzKCR6YnAtPnVzZXJzZGlyIC4gJHRoaXMtPkRpcikpIHsNCiAgICAgICAgICAgIEBta2RpcigkemJwLT51c2Vyc2RpciAuICR0aGlzLT5EaXIsIDA3NTUsIHRydWUpOw0KICAgICAgICB9DQogICAgICAgICRzID0gYmFzZTY0X2RlY29kZSgkc3RyNjQpOw0KICAgICAgICAkdGhpcy0+U2l6ZSA9IHN0cmxlbigkcyk7DQogICAgICAgIGlmIChQSFBfU1lTVEVNID09PSBTWVNURU1fV0lORE9XUykgew0KICAgICAgICAgICAgJGZuID0gaWNvbnYoIlVURi04IiwgIkdCSy8vSUdOT1JFIiwgJHRoaXMtPk5hbWUpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgJGZuID0gJHRoaXMtPk5hbWU7DQogICAgICAgIH0NCiAgICAgICAgaWYgKCR0aGlzLT5DaGVja0V4dE5hbWUoKSkgew0KICAgICAgICAgICAgZmlsZV9wdXRfY29udGVudHMoJHpicC0+dXNlcnNkaXIgLiAkdGhpcy0+RGlyIC4gJGZuLCAkcyk7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHMNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbHxzdHJpbmcNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gVGltZSgkcyA9ICdZLW0tZCBIOmk6cycpDQogICAgew0KICAgICAgICByZXR1cm4gZGF0ZSgkcywgJHRoaXMtPlBvc3RUaW1lKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJG5hbWUNCiAgICAgKiBAcGFyYW0gJHZhbHVlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIF9fc2V0KCRuYW1lLCAkdmFsdWUpDQogICAgew0KICAgICAgICBpZiAoaW5fYXJyYXkoJG5hbWUsIGFycmF5KCdVcmwnLCAnRGlyJywgJ0Z1bGxGaWxlJywgJ0F1dGhvcicpKSkgew0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQogICAgICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX1VwbG9hZF9TZXQnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgICAgICRmcG5hbWUoJHRoaXMsICRuYW1lLCAkdmFsdWUpOw0KICAgICAgICB9DQogICAgICAgIHBhcmVudDo6X19zZXQoJG5hbWUsICR2YWx1ZSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRuYW1lDQogICAgICoNCiAgICAgKiBAcmV0dXJuIE1lbWJlcnxtaXhlZHxzdHJpbmcNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gX19nZXQoJG5hbWUpDQogICAgew0KICAgICAgICBnbG9iYWwgJHpicDsNCiAgICAgICAgaWYgKCRuYW1lID09ICdVcmwnKSB7DQogICAgICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9VcGxvYWRfVXJsJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICRmcG5hbWUoJHRoaXMpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gJHpicC0+aG9zdCAuICd6Yl91c2Vycy8nIC4gJHRoaXMtPkRpciAuIHJhd3VybGVuY29kZSgkdGhpcy0+TmFtZSk7DQogICAgICAgIH0NCiAgICAgICAgaWYgKCRuYW1lID09ICdEaXInKSB7DQogICAgICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9VcGxvYWRfRGlyJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICRmcG5hbWUoJHRoaXMpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gJ3VwbG9hZC8nIC4gZGF0ZSgnWScsICR0aGlzLT5Qb3N0VGltZSkgLiAnLycgLiBkYXRlKCdtJywgJHRoaXMtPlBvc3RUaW1lKSAuICcvJzsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoJG5hbWUgPT0gJ0Z1bGxGaWxlJykgew0KICAgICAgICAgICAgcmV0dXJuICR6YnAtPnVzZXJzZGlyIC4gJHRoaXMtPkRpciAuICR0aGlzLT5OYW1lOw0KICAgICAgICB9DQogICAgICAgIGlmICgkbmFtZSA9PSAnQXV0aG9yJykgew0KICAgICAgICAgICAgcmV0dXJuICR6YnAtPkdldE1lbWJlckJ5SUQoJHRoaXMtPkF1dGhvcklEKTsNCiAgICAgICAgfQ0KDQogICAgICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX1VwbG9hZF9HZXQnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHRoaXMsICRuYW1lKTsNCiAgICAgICAgICAgIGlmICgkZnBzaWduYWwgPT0gUExVR0lOX0VYSVRTSUdOQUxfUkVUVVJOKSB7DQogICAgICAgICAgICAgICAgJGZwc2lnbmFsID0gUExVR0lOX0VYSVRTSUdOQUxfTk9ORTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiAkZnByZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gcGFyZW50OjpfX2dldCgkbmFtZSk7DQogICAgfQ0KfQ0K</file>
	<file name='zb_system\function\lib\validatecode.php' crc32='6554B0D9'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\zbpform.php' crc32='9B1E9D9F'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KDQovKioNCiAqIGZvcm0gY3JlYXQuDQogKg0KICogQGF1dGhvciDmnKrlr5IgPGltQGltemhvdS5jb20+DQogKg0KICovDQoNCi8qKueUqOazlQ0KemJwZm9ybTo6cmFkaW8oJ2FhYWEnLGFycmF5KCfpgInpobkxJywgJ+mAiemhuTInKSk7DQp6YnBmb3JtOjp6YnJhZGlvKCdhYWFhJyxhcnJheSgn6YCJ6aG5MScsICfpgInpobkyJyksMSk7DQp6YnBmb3JtOjpzZWxlY3QoJ2FhYWEnLGFycmF5KCdhJz0+J+mAiemhuTEnLCAnYic9PifpgInpobkyJyksJ2EnKTsNCnpicGZvcm06OmNoZWNrYm94KCdhYWFhJyxhcnJheShhcnJheSgn6YCJ6aG5MScsMCksYXJyYXkoJ+mAiemhuTInLDEpKSk7DQp6YnBmb3JtOjp0ZXh0KCdhYWFhJywn5paH5pys5qGGJyk7DQp6YnBmb3JtOjpoaWRkZW4oJ2FhYWEnLCfmlofmnKzmoYYnKTsNCnpicGZvcm06OnRleHRhcmVhKCdhYWFhJywn5aSa6KGM5paH5pysJyk7DQp6YnBmb3JtOjpwYXNzd29yZCgnYWFhYScsJ+aWh+acrOahhicpOw0KICovDQpjbGFzcyBaYnBGb3JtDQp7DQoNCiAgICBzdGF0aWMgcHVibGljICRzZXRyZXR1cm4gPSBmYWxzZTsNCg0KICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gcmFkaW8oJG5hbWUsICRhcnJheSA9IGFycmF5KCflkKYnLCAn5pivJyksICRjaGVja2Vka2V5ID0gMCkNCiAgICB7DQogICAgICAgICRzID0gJyc7DQogICAgICAgIGZvcmVhY2ggKChhcnJheSkgJGFycmF5IGFzICRrID0+ICR2KSB7DQogICAgICAgICAgICAkY2hlY2tlZCA9ICRrID09ICRjaGVja2Vka2V5ID8gJyBjaGVja2VkPSJjaGVja2VkIicgOiAnJzsNCiAgICAgICAgICAgICRzIC49ICI8aW5wdXQgdHlwZT1cInJhZGlvXCIgbmFtZT1cIiRuYW1lXCIgaWQ9XCIkbmFtZS0ka1wiIGNsYXNzPVwiJG5hbWVcIiB2YWx1ZT1cIiRrXCIkY2hlY2tlZCAvPjxsYWJlbCBmb3I9XCIkbmFtZS0ka1wiPiR2PC9sYWJlbD5cclxuIjsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoc2VsZjo6JHNldHJldHVybikgew0KICAgICAgICAgICAgcmV0dXJuICRzOw0KICAgICAgICB9DQogICAgICAgIGVjaG8gJHM7DQogICAgfQ0KDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiB6YnJhZGlvKCRuYW1lLCAkaXNjaGVja2VkID0gMCkNCiAgICB7DQogICAgICAgICRzID0gJyc7DQogICAgICAgICRzIC49ICI8aW5wdXQgbmFtZT1cIiRuYW1lXCIgaWQ9XCIkbmFtZVwiIGNsYXNzPVwiJG5hbWUgY2hlY2tib3hcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIiB0eXBlPVwidGV4dFwiIHZhbHVlPVwiJGlzY2hlY2tlZFwiPlxyXG4iOw0KICAgICAgICBpZiAoc2VsZjo6JHNldHJldHVybikgew0KICAgICAgICAgICAgcmV0dXJuICRzOw0KICAgICAgICB9DQogICAgICAgIGVjaG8gJHM7DQogICAgfQ0KDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBzZWxlY3QoJG5hbWUsICRhcnJheSwgJGNoZWNrZWRrZXkgPSAwLCAkY2hhbmdlID0gJycpDQogICAgew0KICAgICAgICBpZiAoZW1wdHkoJGFycmF5KSkgew0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQoNCiAgICAgICAgJG9uY2hhbmdlID0gIWVtcHR5KCRjaGFuZ2UpID8gJyBvbmNoYW5nZT0iJyAuICRjaGFuZ2UgLiAnIicgOiAnJzsNCiAgICAgICAgJHMgPSAiPHNlbGVjdCBuYW1lPVwiJG5hbWVcIiBpZD1cIiRuYW1lXCIgY2xhc3M9XCIkbmFtZVwiJG9uY2hhbmdlPiBcclxuIjsNCiAgICAgICAgJHMgLj0gc2VsZjo6b3B0aW9ucygkYXJyYXksICRjaGVja2Vka2V5KTsNCiAgICAgICAgJHMgLj0gIjwvc2VsZWN0PiBcclxuIjsNCiAgICAgICAgaWYgKHNlbGY6OiRzZXRyZXR1cm4pIHsNCiAgICAgICAgICAgIHJldHVybiAkczsNCiAgICAgICAgfQ0KICAgICAgICBlY2hvICRzOw0KICAgIH0NCg0KICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gb3B0aW9ucygkYXJyYXksICRjaGVja2Vka2V5ID0gMCkNCiAgICB7DQogICAgICAgICRzID0gJyc7DQogICAgICAgIGZvcmVhY2ggKChhcnJheSkgJGFycmF5IGFzICRrID0+ICR2KSB7DQogICAgICAgICAgICAkY2hlY2tlZCA9ICRrID09ICRjaGVja2Vka2V5ID8gJyBzZWxlY3RlZD0ic2VsZWN0ZWQiJyA6ICcnOw0KICAgICAgICAgICAgJHMgLj0gIjxvcHRpb24gdmFsdWU9XCIka1wiJGNoZWNrZWQ+JHY8L29wdGlvbj4gXHJcbiI7DQogICAgICAgIH0NCiAgICAgICAgaWYgKHNlbGY6OiRzZXRyZXR1cm4pIHsNCiAgICAgICAgICAgIHJldHVybiAkczsNCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gJHM7DQogICAgfQ0KDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBjaGVja2JveCgkbmFtZSwgJGFycmF5KQ0KICAgIHsNCiAgICAgICAgJHMgPSAnJzsNCiAgICAgICAgZm9yZWFjaCAoKGFycmF5KSAkYXJyYXkgYXMgJGsgPT4gJHYpIHsNCiAgICAgICAgICAgICRjaGVja2VkID0gJHZbMV0gPyAnIGNoZWNrZWQ9ImNoZWNrZWQiJyA6ICcnOw0KDQogICAgICAgICAgICAkcyAuPSAiPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCIiIC4gJG5hbWUgLiAiW11cIiBpZD1cIiRuYW1lLSRrXCIgY2xhc3M9XCIkbmFtZVwiIHZhbHVlPVwiJGtcIiRjaGVja2VkIC8+PGxhYmVsIGZvcj1cIiRuYW1lLSRrXCI+JHZbMF08L2xhYmVsPlxyXG4iOw0KICAgICAgICB9DQogICAgICAgIGlmIChzZWxmOjokc2V0cmV0dXJuKSB7DQogICAgICAgICAgICByZXR1cm4gJHM7DQogICAgICAgIH0NCiAgICAgICAgZWNobyAkczsNCiAgICB9DQoNCiAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIHRleHQoJG5hbWUsICR2YWx1ZSwgJHdpZHRoID0gJzE1MHB4JykNCiAgICB7DQogICAgICAgICRzdHlsZSA9ICR3aWR0aCA/ICcgc3R5bGU9IndpZHRoOiAnIC4gJHdpZHRoIC4gJzsiJyA6ICcnOw0KICAgICAgICAkcyA9ICI8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwiJG5hbWVcIiBpZD1cIiRuYW1lXCIgY2xhc3M9XCIkbmFtZVwiIHZhbHVlPVwiJHZhbHVlXCIkc3R5bGUvPlxyXG4iOw0KICAgICAgICBpZiAoc2VsZjo6JHNldHJldHVybikgew0KICAgICAgICAgICAgcmV0dXJuICRzOw0KICAgICAgICB9DQogICAgICAgIGVjaG8gJHM7DQogICAgfQ0KDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBoaWRkZW4oJG5hbWUsICR2YWx1ZSkNCiAgICB7DQogICAgICAgICRzID0gIjxpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cIiRuYW1lXCIgaWQ9XCIkbmFtZVwiIGNsYXNzPVwiJG5hbWVcIiB2YWx1ZT1cIiR2YWx1ZVwiIC8+XHJcbiI7DQogICAgICAgIGVjaG8gJHM7DQogICAgfQ0KDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiB0ZXh0YXJlYSgkbmFtZSwgJHZhbHVlLCAkd2lkdGggPSAnMjUwcHgnLCAkaGVpZ2h0ID0gJzEwMHB4JykNCiAgICB7DQogICAgICAgICRzdHlsZSA9ICR3aWR0aCA/ICcgc3R5bGU9IndpZHRoOiAnIC4gJHdpZHRoIC4gJzsgaGVpZ2h0OiAnIC4gJGhlaWdodCAuICciJyA6ICcnOw0KICAgICAgICAkcyA9ICI8dGV4dGFyZWEgbmFtZT1cIiRuYW1lXCIgaWQ9XCIkbmFtZVwiIGNsYXNzPVwiJG5hbWVcIiRzdHlsZT4kdmFsdWU8L3RleHRhcmVhPlxyXG4iOw0KICAgICAgICBpZiAoc2VsZjo6JHNldHJldHVybikgew0KICAgICAgICAgICAgcmV0dXJuICRzOw0KICAgICAgICB9DQogICAgICAgIGVjaG8gJHM7DQogICAgfQ0KDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBwYXNzd29yZCgkbmFtZSwgJHZhbHVlLCAkd2lkdGggPSAnMTUwcHgnKQ0KICAgIHsNCiAgICAgICAgJHN0eWxlID0gJHdpZHRoID8gJyBzdHlsZT0id2lkdGg6ICcgLiAkd2lkdGggLiAnOyInIDogJyc7DQogICAgICAgICRzID0gIjxpbnB1dCB0eXBlPVwicGFzc3dvcmRcIiBuYW1lPVwiJG5hbWVcIiBpZD1cIiRuYW1lXCIgY2xhc3M9XCIkbmFtZVwiIHZhbHVlPVwiJHZhbHVlXCIkc3R5bGUvPlxyXG4iOw0KICAgICAgICBpZiAoc2VsZjo6JHNldHJldHVybikgew0KICAgICAgICAgICAgcmV0dXJuICRzOw0KICAgICAgICB9DQogICAgICAgIGVjaG8gJHM7DQogICAgfQ0KDQp9DQo=</file>
	<file name='zb_system\function\lib\database\sqlite3.php' crc32='614C0EA0'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoqDQogKiBTUUxpdGUz5pWw5o2u5bqT5pON5L2c57G7Lg0KICovDQpjbGFzcyBEYXRhYmFzZV9fU1FMaXRlMyBpbXBsZW1lbnRzIERhdGFiYXNlX19JbnRlcmZhY2UNCnsNCiAgICBwdWJsaWMgJHR5cGUgPSAnc3FsaXRlJzsNCiAgICBwdWJsaWMgJHZlcnNpb24gPSAnMyc7DQoNCiAgICAvKioNCiAgICAgKiBAdmFyIHN0cmluZ3xudWxsIOaVsOaNruW6k+WQjeWJjee8gA0KICAgICAqLw0KICAgIHB1YmxpYyAkZGJwcmUgPSBudWxsOw0KICAgIHByaXZhdGUgJGRiID0gbnVsbDsgLy/mlbDmja7lupPov57mjqXlrp7kvosNCiAgICAvKioNCiAgICAgKiBAdmFyIHN0cmluZ3xudWxsIOaVsOaNruW6k+WQjQ0KICAgICAqLw0KICAgIHB1YmxpYyAkZGJuYW1lID0gbnVsbDsNCiAgICAvKioNCiAgICAgKiBAdmFyIERiU3FsfG51bGwNCiAgICAgKi8NCiAgICBwdWJsaWMgJHNxbCA9IG51bGw7DQoNCiAgICAvKioNCiAgICAgKiDmnoTpgKDlh73mlbDvvIzlrp7kvovljJYkc3Fs5Y+C5pWwLg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgpDQogICAgew0KICAgICAgICAkdGhpcy0+c3FsID0gbmV3IERiU3FsKCR0aGlzKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHMNCiAgICAgKg0KICAgICAqIEByZXR1cm4gc3RyaW5nDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEVzY2FwZVN0cmluZygkcykNCiAgICB7DQogICAgICAgIHJldHVybiBTUUxpdGUzOjplc2NhcGVTdHJpbmcoJHMpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkYXJyYXkNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBPcGVuKCRhcnJheSkNCiAgICB7DQogICAgICAgIGlmICgkdGhpcy0+ZGIgPSBuZXcgU1FMaXRlMygkYXJyYXlbMF0pKSB7DQogICAgICAgICAgICAkdGhpcy0+ZGJwcmUgPSAkYXJyYXlbMV07DQogICAgICAgICAgICAkdGhpcy0+ZGJuYW1lID0gJGFycmF5WzBdOw0KICAgICAgICAgICAgJHRoaXMtPnZlcnNpb24gPSBzdWJzdHIoR2V0VmFsdWVJbkFycmF5KFNRTGl0ZTM6OnZlcnNpb24oKSwgJ3ZlcnNpb25TdHJpbmcnKSwgMSk7DQoNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5YWz6Zet5pWw5o2u5bqT6L+e5o6lLg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDbG9zZSgpDQogICAgew0KICAgICAgICAkdGhpcy0+ZGItPmNsb3NlKCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRzDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFF1ZXJ5TXVsaXQoJHMpDQogICAgew0KICAgICAgICByZXR1cm4gJHRoaXMtPlF1ZXJ5TXVsdGkoJHMpOw0KICAgIH0NCg0KICAgIC8v6ZSZ5Yir5a2X5Ye95pWw77yM5Y6G5Y+y5Y6f5Zug5L+d55WZ5LiL5p2lDQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gUXVlcnlNdWx0aSgkcykNCiAgICB7DQogICAgICAgIC8vJGE9ZXhwbG9kZSgnOycsc3RyX3JlcGxhY2UoJyVwcmUlJywgJHRoaXMtPmRicHJlLCAkcykpOw0KICAgICAgICAkYSA9IGV4cGxvZGUoJzsnLCAkcyk7DQogICAgICAgIGZvcmVhY2ggKCRhIGFzICRzKSB7DQogICAgICAgICAgICAkcyA9IHRyaW0oJHMpOw0KICAgICAgICAgICAgaWYgKCRzICE9ICcnKSB7DQogICAgICAgICAgICAgICAgJHRoaXMtPmRiLT5xdWVyeSgkdGhpcy0+c3FsLT5GaWx0ZXIoJHMpKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkcXVlcnkNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYXJyYXkNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gUXVlcnkoJHF1ZXJ5KQ0KICAgIHsNCiAgICAgICAgLy8kcXVlcnk9c3RyX3JlcGxhY2UoJyVwcmUlJywgJHRoaXMtPmRicHJlLCAkcXVlcnkpOw0KICAgICAgICAvLyDpgY3ljoblh7rmnaUNCiAgICAgICAgJHJlc3VsdHMgPSAkdGhpcy0+ZGItPnF1ZXJ5KCR0aGlzLT5zcWwtPkZpbHRlcigkcXVlcnkpKTsNCiAgICAgICAgJGRhdGEgPSBhcnJheSgpOw0KICAgICAgICBpZiAoISgkcmVzdWx0cyBpbnN0YW5jZW9mIFNxbGl0ZTNSZXN1bHQpKSB7DQogICAgICAgICAgICByZXR1cm4gYXJyYXkoJHJlc3VsdHMpOw0KICAgICAgICB9DQogICAgICAgIGlmICgkcmVzdWx0cy0+bnVtQ29sdW1ucygpID4gMCkgew0KICAgICAgICAgICAgd2hpbGUgKCRyb3cgPSAkcmVzdWx0cy0+ZmV0Y2hBcnJheSgpKSB7DQogICAgICAgICAgICAgICAgJGRhdGFbXSA9ICRyb3c7DQogICAgICAgICAgICB9DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkZGF0YVtdID0gJHJlc3VsdHMtPm51bUNvbHVtbnMoKTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkZGF0YTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHF1ZXJ5DQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFVwZGF0ZSgkcXVlcnkpDQogICAgew0KICAgICAgICAvLyRxdWVyeT1zdHJfcmVwbGFjZSgnJXByZSUnLCAkdGhpcy0+ZGJwcmUsICRxdWVyeSk7DQogICAgICAgIHJldHVybiAkdGhpcy0+ZGItPnF1ZXJ5KCR0aGlzLT5zcWwtPkZpbHRlcigkcXVlcnkpKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHF1ZXJ5DQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIERlbGV0ZSgkcXVlcnkpDQogICAgew0KICAgICAgICAvLyRxdWVyeT1zdHJfcmVwbGFjZSgnJXByZSUnLCAkdGhpcy0+ZGJwcmUsICRxdWVyeSk7DQogICAgICAgIHJldHVybiAkdGhpcy0+ZGItPnF1ZXJ5KCR0aGlzLT5zcWwtPkZpbHRlcigkcXVlcnkpKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHF1ZXJ5DQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEluc2VydCgkcXVlcnkpDQogICAgew0KICAgICAgICAvLyRxdWVyeT1zdHJfcmVwbGFjZSgnJXByZSUnLCAkdGhpcy0+ZGJwcmUsICRxdWVyeSk7DQogICAgICAgICR0aGlzLT5kYi0+cXVlcnkoJHRoaXMtPnNxbC0+RmlsdGVyKCRxdWVyeSkpOw0KDQogICAgICAgIHJldHVybiAkdGhpcy0+ZGItPmxhc3RJbnNlcnRSb3dJRCgpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkdGFibGUNCiAgICAgKiBAcGFyYW0gJGRhdGFpbmZvDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIENyZWF0ZVRhYmxlKCR0YWJsZSwgJGRhdGFpbmZvKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPlF1ZXJ5TXVsaXQoJHRoaXMtPnNxbC0+Q3JlYXRlVGFibGUoJHRhYmxlLCAkZGF0YWluZm8pKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHRhYmxlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIERlbFRhYmxlKCR0YWJsZSkNCiAgICB7DQogICAgICAgICR0aGlzLT5RdWVyeU11bGl0KCR0aGlzLT5zcWwtPkRlbFRhYmxlKCR0YWJsZSkpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkdGFibGUNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gRXhpc3RUYWJsZSgkdGFibGUpDQogICAgew0KICAgICAgICAkYSA9ICR0aGlzLT5RdWVyeSgkdGhpcy0+c3FsLT5FeGlzdFRhYmxlKCR0YWJsZSkpOw0KICAgICAgICBpZiAoIWlzX2FycmF5KCRhKSkgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQoNCiAgICAgICAgJGIgPSBjdXJyZW50KCRhKTsNCiAgICAgICAgaWYgKCFpc19hcnJheSgkYikpIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KDQogICAgICAgICRjID0gKGludCkgY3VycmVudCgkYik7DQogICAgICAgIGlmICgkYyA+IDApIHsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgfQ0KfQ0K</file>
	<file name='zb_system\function\lib\network\curl.php' crc32='F1699963'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\network\filegetcontents.php' crc32='D4D0F733'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\network\fsockopen.php' crc32='4599AE60'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\sql\mysql.php' crc32='10A3B76E'  dt:dt='bin.base64'></file>
	<file name='zb_system\script\common.js' crc32='DAC2EA19'  dt:dt='bin.base64'>KGZ1bmN0aW9uKCl7dmFyICBiPSIiO3RyeXt0aHJvdyBFcnJvcigiVHJ5IHRvIGdldCBKYXZhU2NyaXB0IFBhdGgiKTt9Y2F0Y2goZCl7aWYoZC5zdGFjayliPWQuc3RhY2subWF0Y2goLyhhdC4rfFxAKShodHRwLis/anMpXDpcZCtcOlxkKy8pWzJdO2Vsc2V7dmFyIGE9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInNjcmlwdCIpLGM7Zm9yKGMgaW4gYSlhW2NdLnNyYyYmYVtjXS5zcmMubWF0Y2goImNvbW1vbi5qcyQiKSYmKGI9YVtjXS5zcmMpfX1iPWIucmVwbGFjZSgvY29tbW9uXC5qcyQvLCIiKTthPWZ1bmN0aW9uKGEpe2RvY3VtZW50LndyaXRlKCc8c2NyaXB0IHNyYz0iJytiK2ErJyI+XHgzYy9zY3JpcHQ+Jyl9O2EoImpxdWVyeS0xLjguMy5taW4uanMiKTthKCJ6YmxvZ3BocC5qcyIpfSkoKTsNCnZhciBTZXRDb29raWU9ZnVuY3Rpb24oKXtyZXR1cm4gemJwLmNvb2tpZS5zZXQuYXBwbHkobnVsbCxhcmd1bWVudHMpfSxHZXRDb29raWU9ZnVuY3Rpb24oKXtyZXR1cm4gemJwLmNvb2tpZS5nZXQuYXBwbHkobnVsbCxhcmd1bWVudHMpfSxMb2FkUmVtZW1iZXJJbmZvPWZ1bmN0aW9uKCl7emJwLnVzZXJpbmZvLm91dHB1dC5hcHBseShudWxsKTtyZXR1cm4hMX0sU2F2ZVJlbWVtYmVySW5mbz1mdW5jdGlvbigpe3picC51c2VyaW5mby5zYXZlRnJvbUh0bWwuYXBwbHkobnVsbCk7cmV0dXJuITF9LFJldmVydENvbW1lbnQ9ZnVuY3Rpb24oKXt6YnAuY29tbWVudC5yZXBseS5hcHBseShudWxsLGFyZ3VtZW50cyk7cmV0dXJuITF9LEdldENvbW1lbnRzPWZ1bmN0aW9uKCl7emJwLmNvbW1lbnQuZ2V0LmFwcGx5KG51bGwsYXJndW1lbnRzKTtyZXR1cm4hMX0sVmVyaWZ5TWVzc2FnZT1mdW5jdGlvbigpe3picC5jb21tZW50LnBvc3QuYXBwbHkobnVsbCk7cmV0dXJuITF9Ow0K</file>
	<file name='zb_system\script\c_admin_js_add.php' crc32='759A594A'  dt:dt='bin.base64'></file>
	<file name='zb_system\script\c_html_js_add.php' crc32='89B8F81A'  dt:dt='bin.base64'>PD9waHANCi8qKg0KICogWi1CbG9nIHdpdGggUEhQLg0KICoNCiAqIEBhdXRob3IgWi1CbG9nUEhQIFRlYW0NCiAqIEB2ZXJzaW9uIDIuMCAyMDEzLTA2LTE0DQogKi8NCnJlcXVpcmUgJy4uL2Z1bmN0aW9uL2Nfc3lzdGVtX2Jhc2UucGhwJzsNCg0Kb2JfY2xlYW4oKTsNCi8vIEBUT0RPOiBDb25maWd1YWJsZQ0KPz4NCnZhciB6YnBDb25maWcgPSB7DQogICAgYmxvZ2hvc3Q6ICI8P3BocCBlY2hvICR6YnAtPmhvc3Q7ID8+IiwNCiAgICBibG9ndmVyc2lvbjogIjw/cGhwIGVjaG8gJHpicC0+dmVyc2lvbjsgPz4iLA0KICAgIGFqYXh1cmw6ICI8P3BocCBlY2hvICR6YnAtPmFqYXh1cmw7ID8+IiwNCiAgICBjb29raWVwYXRoOiAiPD9waHAgZWNobyAkemJwLT5jb29raWVzcGF0aDsgPz4iLA0KICAgIGxhbmc6IHsNCiAgICAgICAgZXJyb3I6IHsNCiAgICAgICAgICAgIDcyOiAiPD9waHAgZWNobyAkbGFuZ1snZXJyb3InXVsnNzInXTsgPz4iLA0KICAgICAgICAgICAgMjk6ICI8P3BocCBlY2hvICRsYW5nWydlcnJvciddWycyOSddOyA/PiIsDQogICAgICAgICAgICA0NjogIjw/cGhwIGVjaG8gJGxhbmdbJ2Vycm9yJ11bJzQ2J107ID8+Ig0KICAgICAgICB9DQogICAgfSwNCiAgICBjb21tZW50OiB7DQogICAgICAgIHVzZURlZmF1bHRFdmVudHM6IHRydWUsDQogICAgICAgIGlucHV0czogew0KICAgICAgICAgICAgYWN0aW9uOiB7DQogICAgICAgICAgICAgICAgZ2V0dGVyOiBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiAkKCIjaW5wSWQiKS5wYXJlbnQoImZvcm0iKS5hdHRyKCJhY3Rpb24iKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgbmFtZTogew0KICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnI2lucE5hbWUnLA0KICAgICAgICAgICAgICAgIHNhdmVMb2NhbGx5OiB0cnVlLA0KICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLA0KICAgICAgICAgICAgICAgIHZhbGlkYXRlUnVsZTogL15bXC5cX0EtWmEtejAtOVx1NGUwMC1cdTlmYTVAXSskL2lnLA0KICAgICAgICAgICAgICAgIHZhbGlkYXRlRmFpbGVkRXJyb3JDb2RlOiA3MiwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBlbWFpbDogew0KICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnI2lucEVtYWlsJywNCiAgICAgICAgICAgICAgICBzYXZlTG9jYWxseTogdHJ1ZSwNCiAgICAgICAgICAgICAgICB2YWxpZGF0ZVJ1bGU6IC9eW1x3LV0rKFwuW1x3LV0rKSpAW1x3LV0rKFwuW1x3LV0rKSskL2lnLA0KICAgICAgICAgICAgICAgIHZhbGlkYXRlRmFpbGVkRXJyb3JDb2RlOiAyOSwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBob21lcGFnZTogew0KICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnI2lucEhvbWVQYWdlJywNCiAgICAgICAgICAgICAgICBnZXR0ZXI6IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgICAgICAgICAgdmFyIHQgPSAkKCcjaW5wSG9tZVBhZ2UnKS52YWwoKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICghL14oLispXDpcL1wvLy50ZXN0KHQpICYmIHQgIT09ICIiKSA/ICdodHRwOi8vJyArIHQgOiB0OyANCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIHNhdmVMb2NhbGx5OiB0cnVlDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgcG9zdGlkOiB7DQogICAgICAgICAgICAgICAgc2VsZWN0b3I6ICcjaW5wSWQnLA0KICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgdmVyaWZ5OiB7DQogICAgICAgICAgICAgICAgc2VsZWN0b3I6ICcjaW5wVmVyaWZ5Jw0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGNvbnRlbnQ6IHsNCiAgICAgICAgICAgICAgICBzZWxlY3RvcjogJyN0eGFBcnRpY2xlJywNCiAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwNCiAgICAgICAgICAgICAgICB2YWxpZGF0ZVJ1bGU6IC8uL2lnLA0KICAgICAgICAgICAgICAgIHZhbGlkYXRlRmFpbGVkRXJyb3JDb2RlOiA0NiwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICByZXBseWlkOiB7DQogICAgICAgICAgICAgICAgc2VsZWN0b3I6ICcjaW5wUmV2SUQnDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgZm9ybWF0OiB7DQogICAgICAgICAgICAgICAgZ2V0dGVyOiBmdW5jdGlvbiAoKSB7cmV0dXJuICdqc29uJzt9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQp9Ow0KPD9waHANCmZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX0h0bWxfSnNfWmJwQ29uZmlnJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgJGZwbmFtZSgpOw0KfQ0KPz4NCnZhciB6YnAgPSBuZXcgWkJQKHpicENvbmZpZyk7DQoNCnZhciBibG9naG9zdCA9IHpicC5vcHRpb25zLmJsb2dob3N0Ow0KdmFyIGNvb2tpZXNwYXRoID0gemJwLm9wdGlvbnMuY29va2llcGF0aDsNCnZhciBhamF4dXJsID0gemJwLm9wdGlvbnMuYWpheHVybDsNCnZhciBsYW5nX2NvbW1lbnRfbmFtZV9lcnJvciA9IHpicC5vcHRpb25zLmxhbmcuZXJyb3JbNzJdOw0KdmFyIGxhbmdfY29tbWVudF9lbWFpbF9lcnJvciA9IHpicC5vcHRpb25zLmxhbmcuZXJyb3JbMjldOw0KdmFyIGxhbmdfY29tbWVudF9jb250ZW50X2Vycm9yID0gemJwLm9wdGlvbnMubGFuZy5lcnJvcls0Nl07DQoNCjw/cGhwDQppZiAoIWlzc2V0KCRfR0VUWydwbHVnaW5vbmx5J10pKSB7DQogICAgPz4NCiQoZnVuY3Rpb24gKCkgew0KDQogICAgemJwLmNvb2tpZS5zZXQoInRpbWV6b25lIiwgKG5ldyBEYXRlKCkuZ2V0VGltZXpvbmVPZmZzZXQoKS82MCkqKC0xKSk7DQogICAgdmFyICRjcExvZ2luID0gJCgiLmNwLWxvZ2luIikuZmluZCgiYSIpOw0KICAgIHZhciAkY3BWcnMgPSAkKCIuY3AtdnJzIikuZmluZCgiYSIpOw0KICAgIHZhciAkYWRkaW5mbyA9IHpicC5jb29raWUuZ2V0KCJhZGRpbmZvPD9waHAgZWNobyBzdHJfcmVwbGFjZSgnLycsICcnLCAkemJwLT5jb29raWVzcGF0aCk7ID8+Iik7DQogICAgaWYgKCEkYWRkaW5mbyl7DQogICAgICAgIHJldHVybiA7DQogICAgfQ0KICAgICRhZGRpbmZvID0gSlNPTi5wYXJzZSgkYWRkaW5mbyk7DQoNCiAgICBpZiAoJGFkZGluZm8uY2hrYWRtaW4pew0KICAgICAgICAkKCIuY3AtaGVsbG8iKS5odG1sKCI8P3BocCBlY2hvICR6YnAtPmxhbmdbJ21zZyddWyd3ZWxjb21lJ107ID8+ICIgKyAkYWRkaW5mby51c2VyYWxpYXMgKyAiICgiICsgJGFkZGluZm8ubGV2ZWxuYW1lICArICIpIik7DQogICAgICAgIGlmICgkY3BMb2dpbi5sZW5ndGggPT0gMSAmJiAkY3BMb2dpbi5odG1sKCkuaW5kZXhPZigiWyIpID4gLTEpIHsNCiAgICAgICAgICAgICRjcExvZ2luLmh0bWwoIls8P3BocCBlY2hvICR6YnAtPmxhbmdbJ21zZyddWydhZG1pbiddOyA/Pl0iKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICRjcExvZ2luLmh0bWwoIjw/cGhwIGVjaG8gJHpicC0+bGFuZ1snbXNnJ11bJ2FkbWluJ107ID8+Iik7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBpZigkYWRkaW5mby5jaGthcnRpY2xlKXsNCiAgICAgICAgaWYgKCRjcFZycy5sZW5ndGggPT0gMSAmJiAkY3BWcnMuaHRtbCgpLmluZGV4T2YoIlsiKSA+IC0xKSB7DQogICAgICAgICAgICAkY3BWcnMuaHRtbCgiWzw/cGhwIGVjaG8gJHpicC0+bGFuZ1snbXNnJ11bJ25ld19hcnRpY2xlJ107ID8+XSIpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgJGNwVnJzLmh0bWwoIjw/cGhwIGVjaG8gJHpicC0+bGFuZ1snbXNnJ11bJ25ld19hcnRpY2xlJ107ID8+Iik7DQogICAgICAgIH0NCiAgICAgICAgJGNwVnJzLmF0dHIoImhyZWYiLCB6YnAub3B0aW9ucy5ibG9naG9zdCArICJ6Yl9zeXN0ZW0vY21kLnBocD9hY3Q9QXJ0aWNsZUVkdCIpOw0KICAgIH0NCn0pOw0KJChmdW5jdGlvbigpew0KICBsZXQgaW5wTmFtZVZhbCA9ICQoemJwQ29uZmlnLmNvbW1lbnQuaW5wdXRzLm5hbWUuc2VsZWN0b3IpLnZhbCgpOw0KICBpZiAodHlwZW9mIGlucE5hbWVWYWwgPT09ICJ1bmRlZmluZWQiKSB7DQogICAgcmV0dXJuOw0KICB9DQogIGlmIChpbnBOYW1lVmFsLnRyaW0oKSA9PT0gIiIgfHwgaW5wTmFtZVZhbCA9PT0gIjw/cGhwIGVjaG8gJHpicC0+bGFuZ1snbXNnJ11bJ2Fub255bW91cyddOyA/PiIpew0KICAgIHpicC51c2VyaW5mby5vdXRwdXQoKTsNCiAgfQ0KfSk7DQo8P3BocA0KfQ0KZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fSHRtbF9Kc19BZGQnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAkZnBuYW1lKCk7DQp9DQoNCiRzID0gb2JfZ2V0X2NsZWFuKCk7DQokbSA9ICdXLycgLiBtZDUoJHMpOw0KDQpoZWFkZXIoJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC1qYXZhc2NyaXB0OyBjaGFyc2V0PXV0Zi04Jyk7DQpoZWFkZXIoJ0V0YWc6ICcgLiAkbSk7DQoNCmlmIChpc3NldCgkX1NFUlZFUlsiSFRUUF9JRl9OT05FX01BVENIIl0pICYmICRfU0VSVkVSWyJIVFRQX0lGX05PTkVfTUFUQ0giXSA9PSAkbSkgew0KICAgIGlmIChpc3NldCgkemJwLT5vcHRpb25bJ1pDX0pTXzMwNF9FTkFCTEUnXSkgJiYgJHpicC0+b3B0aW9uWydaQ19KU18zMDRfRU5BQkxFJ10pIHsNCiAgICAgICAgU2V0SHR0cFN0YXR1c0NvZGUoMzA0KTsNCiAgICAgICAgZGllOw0KICAgIH0NCn0NCg0KZWNobyAkczsNCg0KZGllKCk7DQo=</file>
	<file name='zb_system\script\zblogphp.js' crc32='3CBD69A'  dt:dt='bin.base64'></file>
	<file name='zb_system\xml-rpc\index.php' crc32='844426A2'  dt:dt='bin.base64'></file>
	<file name='zb_users\language\en.php' crc32='4C671C82'  dt:dt='bin.base64'></file>
	<file name='zb_users\language\zh-cn.php' crc32='4C81D8D1'  dt:dt='bin.base64'></file>
	<file name='zb_users\language\zh-tw.php' crc32='E0FCF73E'  dt:dt='bin.base64'>PD9waHANCg0KLy88bGFuZ3VhZ2U+5YKz57Wx5Lit5paHPC9sYW5ndWFnZT4NCi8vVGhlIHNlY29uZCBsaW5lIG9mIHRoaXMgZmlsZSBpcyB0aGUgbmFtZSBvZiB0aGUgbGFuZ3VhZ2UNCi8vQXV0aG9yOualiuaHv+i7kg0KLy9BdXRob3IgVVJJOmh0dHA6Ly93d3cueWFuZ3lpeHVhbi5jb20NCi8vRS1tYWlsOnNlbkB5YW5neWl4dWFuLmNvbQ0KLy9EYXRlOjIwMTUwMTI2DQoNCi8vJ0N1c3RvbSBJbmZvcm1hdGlvbg0KLy8nRG9uJ3QgZGVsZXRlICVzIGFuZCAoKQ0KDQpyZXR1cm4gYXJyYXkoDQoNCiAgICAnbGFuZycgICAgICAgICAgICAgICAgICA9PiAnemgtVFcnLA0KICAgICdsYW5nX2JjcDQ3JyAgICAgICAgICAgID0+ICd6aC1IYW50JywgLy8gaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvYmNwNDcNCiAgICAnbGFuZ19uYW1lJyAgICAgICAgICAgICA9PiAn5YKz57Wx5Lit5paHJywNCiAgICAnZm9udF9mYW1pbHknICAgICAgICAgICA9PiAnSGVsdmV0aWNhLEFyaWFsLCJNaWNyb3NvZnQgSmhlbmdIZWkiLFBNaW5nTGlVLE1pbmdMaVUsc2Fucy1zZXJpZicsDQogICAgJ2ZvbnRfc2l6ZScgICAgICAgICAgICAgPT4gJycsDQogICAgJ3dpbmRvd3NfY2hhcmFjdGVyX3NldCcgPT4gJ0JJRzUnLA0KDQogICAgLy9Gcm9udC1FbmQgJiBCYWNrLUVuZA0KICAgICdtc2cnID0+IGFycmF5KA0KICAgICAgICAnaWQnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnSUQnLA0KICAgICAgICAnbmFtZScgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5ZCN56ixJywNCiAgICAgICAgJ3RpdGxlJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aomemhjCcsDQogICAgICAgICdhbGlhcycgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfku6PnqLEnLA0KICAgICAgICAndGFncycgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5qiZ57GkJywNCiAgICAgICAgJ3NlYXJjaCcgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aQnOWwiycsDQogICAgICAgICdjb21tZW50JyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfov7Tpn78nLA0KICAgICAgICAnY29udGVudCcgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5q2j5paHJywNCiAgICAgICAgJ2ludHJvJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aRmOimgScsDQogICAgICAgICdkYXRlJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfml6XmnJ8nLA0KICAgICAgICAnY2F0ZWdvcnknICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5YiG6aGeJywNCiAgICAgICAgJ3RvcCcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+e9rumggicsDQogICAgICAgICdzdGF0dXMnICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfni4DmhYsnLA0KICAgICAgICAndGVtcGxhdGUnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5qih5p2/JywNCiAgICAgICAgJ2F1dGhvcicgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+S9nOiAhScsDQogICAgICAgICd0eXBlJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfpoZ7lnosnLA0KICAgICAgICAnb3JkZXInICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5o6S5bqPJywNCiAgICAgICAgJ3N1Ym1pdCcgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+mAgeWHuicsDQogICAgICAgICdyZXNldCcgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfph43oqK0nLA0KICAgICAgICAnZXJyb3InICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn6Yyv6KqkJywNCiAgICAgICAgJ2VtYWlsJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+mbu+WtkOmDteS7ticsDQogICAgICAgICdob21lcGFnZScgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICflgIvkurrntrLnq5knLA0KICAgICAgICAnYW5vbnltb3VzJyAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn6Kiq5a6iJywNCiAgICAgICAgJ3VubmFtZWQnICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+acquWRveWQjScsDQogICAgICAgICdmaWxlbmFtZScgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmqpTlkI0nLA0KICAgICAgICAnaHRtbGlkJyAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnSFRNTCBJRCcsDQogICAgICAgICdzaXplJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICflpKflsI8nLA0KICAgICAgICAnbm9uZScgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn54ShJywNCiAgICAgICAgJ2FueScgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+S4jeaLmCcsDQogICAgICAgICdlZGl0JyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfnt6jovK8nLA0KICAgICAgICAnZGVsJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5Yiq6ZmkJywNCiAgICAgICAgJ2FueScgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+S4jeaLmCcsDQogICAgICAgICdsb2dpbicgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfnmbvlhaUnLA0KICAgICAgICAnZW5hYmxlJyAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5ZWf55SoJywNCiAgICAgICAgJ2Rpc2FibGUnICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+WBnOeUqCcsDQogICAgICAgICdtYW5hZ2UnICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfnrqHnkIYnLA0KICAgICAgICAnYWRtaW4nICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5o6n5Yi25Y+wJywNCiAgICAgICAgJ3dlbGNvbWUnICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+atoei/jicsDQogICAgICAgICdsb2dvdXQnICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfnmbvlh7onLA0KICAgICAgICAnYXVkaXQnICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn6aeB5ZueJywNCiAgICAgICAgJ3Bhc3MnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aguOWHhicsDQogICAgICAgICdhcnRpY2xlJyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmlofnq6AnLA0KICAgICAgICAncGFnZScgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn6aCB6Z2iJywNCiAgICAgICAgJ3llYXJfbW9udGgnICAgICAgICAgICAgICAgICAgICAgICAgPT4gJyV5JeW5tCVtJeaciCcsDQogICAgICAgICd5ZWFyX21vbnRoX2RheScgICAgICAgICAgICAgICAgICAgID0+ICcleSXlubQlbSXmnIglZCXml6UnLA0KICAgICAgICAnbnVtYmVyX3BhZ2UnICAgICAgICAgICAgICAgICAgICAgICA9PiAn56ysJW51bSXpoIEnLA0KICAgICAgICAncGFyZW50X2NhdGVnb3J5JyAgICAgICAgICAgICAgICAgICA9PiAn54i25YiG6aGeJywNCiAgICAgICAgJ3Bhc3N3b3JkJyAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+WvhueivCcsDQogICAgICAgICdyZV9wYXNzd29yZCcgICAgICAgICAgICAgICAgICAgICAgID0+ICfnorroqo3lr4bnorwnLA0KICAgICAgICAndXBsb2FkX2ZpbGUnICAgICAgICAgICAgICAgICAgICAgICA9PiAn6YG45pOH6ZyA6KaB5LiK5YKz55qE5qqU5qGIJywNCiAgICAgICAgJ2F1dG9fcmVuYW1lX3VwbG9hZGZpbGUnICAgICAgICAgICAgPT4gJ+iHquWLlemHjeWRveWQjeaqlOahiOWQjScsDQogICAgICAgICd1c2VybmFtZScgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfluLPomZ8nLA0KICAgICAgICAncmV0dXJuX3RvX3NpdGUnICAgICAgICAgICAgICAgICAgICA9PiAn6YCg6Kiq57ay56uZJywNCiAgICAgICAgJ2NoZWNrX2NvbW1lbnQnICAgICAgICAgICAgICAgICAgICAgPT4gJ+W+heWvqeS4rScsDQogICAgICAgICdkYXNoYm9hcmQnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmjqfliLblj7DpppbpoIEnLA0KICAgICAgICAnc2V0dGluZ3MnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn57ay56uZ6Kit5a6aJywNCiAgICAgICAgJ29mZmljaWFsX3dlYnNpdGUnICAgICAgICAgICAgICAgICAgPT4gJ+WumOaWuee2suermScsDQogICAgICAgICdwYXJlbmRfaWQnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfniLblsaRJRCcsDQogICAgICAgICdzZWxlY3RfYWxsJyAgICAgICAgICAgICAgICAgICAgICAgID0+ICflhajpgbgnLA0KICAgICAgICAnbmV3X2FydGljbGUnICAgICAgICAgICAgICAgICAgICAgICA9PiAn5paw5aKe5paH56ugJywNCiAgICAgICAgJ25ld19wYWdlJyAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aWsOWinumggemdoicsDQogICAgICAgICduZXdfdGFnJyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmlrDlop7mqJnnsaQnLA0KICAgICAgICAnbmV3X21lbWJlcicgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5paw5aKe5biz6JmfJywNCiAgICAgICAgJ25ld19jYXRlZ29yeScgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aWsOWinuWIhumhnicsDQogICAgICAgICduZXdfbW9kdWxlJyAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmlrDlop7mqKHntYQnLA0KICAgICAgICAnYXJ0aWNsZV9lZGl0JyAgICAgICAgICAgICAgICAgICAgICA9PiAn5paH56ug57eo6LyvJywNCiAgICAgICAgJ3BhZ2VfZWRpdCcgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+mggemdoue3qOi8rycsDQogICAgICAgICd0YWdfZWRpdCcgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmqJnnsaTnt6jovK8nLA0KICAgICAgICAnY2F0ZWdvcnlfZWRpdCcgICAgICAgICAgICAgICAgICAgICA9PiAn6aCB6Z2i57eo6LyvJywNCiAgICAgICAgJ2FydGljbGVfbWFuYWdlJyAgICAgICAgICAgICAgICAgICAgPT4gJ+aWh+eroOeuoeeQhicsDQogICAgICAgICdwYWdlX21hbmFnZScgICAgICAgICAgICAgICAgICAgICAgID0+ICfpoIHpnaLnrqHnkIYnLA0KICAgICAgICAnY2F0ZWdvcnlfbWFuYWdlJyAgICAgICAgICAgICAgICAgICA9PiAn5YiG6aGe566h55CGJywNCiAgICAgICAgJ2NhdGVnb3J5X2VkaXQnICAgICAgICAgICAgICAgICAgICAgPT4gJ+WIhumhnue3qOi8rycsDQogICAgICAgICd0YWdfbWFuYWdlJyAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmqJnnsaTnrqHnkIYnLA0KICAgICAgICAndGFnX2VkaXQnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5qiZ57Gk57eo6LyvJywNCiAgICAgICAgJ21lbWJlcl9lZGl0JyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+W4s+iZn+e3qOi8rycsDQogICAgICAgICdtb2R1bGVfZWRpdCcgICAgICAgICAgICAgICAgICAgICAgID0+ICfmqKHntYTnt6jovK8nLA0KICAgICAgICAnbW9kdWxlX25hdmJhcicgICAgICAgICAgICAgICAgICAgICA9PiAn5bCO6Ka95YiXJywNCiAgICAgICAgJ21vZHVsZV9taXNjJyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aomeiqjOWIlycsDQogICAgICAgICdtb2R1bGVfbGluaycgICAgICAgICAgICAgICAgICAgICAgID0+ICfpgKPntZDliJcnLA0KICAgICAgICAnbW9kdWxlX2Zhdm9yaXRlJyAgICAgICAgICAgICAgICAgICA9PiAn5pu457Gk5YiXJywNCiAgICAgICAgJ2NvbW1lbnRfbWFuYWdlJyAgICAgICAgICAgICAgICAgICAgPT4gJ+i/tOmfv+euoeeQhicsDQogICAgICAgICd1cGxvYWRfbWFuYWdlJyAgICAgICAgICAgICAgICAgICAgID0+ICfpmYTku7bnrqHnkIYnLA0KICAgICAgICAnbWVtYmVyX21hbmFnZScgICAgICAgICAgICAgICAgICAgICA9PiAn5biz6Jmf566h55CGJywNCiAgICAgICAgJ3RoZW1lX21hbmFnZScgICAgICAgICAgICAgICAgICAgICAgPT4gJ+S9iOaZr+S4u+mhjCcsDQogICAgICAgICdwbHVnaW5fbWFuYWdlJyAgICAgICAgICAgICAgICAgICAgID0+ICflpJbmjpvnrqHnkIYnLA0KICAgICAgICAnbW9kdWxlX21hbmFnZScgICAgICAgICAgICAgICAgICAgICA9PiAn5qih57WE566h55CGJywNCiAgICAgICAgJ3NpdGVfYW5hbHl6ZScgICAgICAgICAgICAgICAgICAgICAgPT4gJ+e2suermeizh+ioiicsDQogICAgICAgICdpbmZvX2ludHJvJyAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmjqfliLblj7AnLA0KICAgICAgICAncmVmcmVzaF9jYWNoZScgICAgICAgICAgICAgICAgICAgICA9PiAn5riF6Zmk5b+r5Y+W5Lim6YeN5paw57eo6K2v5qih5p2/JywNCiAgICAgICAgJ2xhdGVzdF9uZXdzJyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+i/keacn+a2iOaBrycsDQogICAgICAgICdyZWZyZXNoJyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfph43mlrDmlbTnkIYnLA0KICAgICAgICAncG9zdF9jb3VudCcgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5paH56ug5pW46YePJywNCiAgICAgICAgJ2Jhc2ljX3NldHRpbmcnICAgICAgICAgICAgICAgICAgICAgPT4gJ+WfuuacrOioreWumicsDQogICAgICAgICdnbG9iYWxfc2V0dGluZycgICAgICAgICAgICAgICAgICAgID0+ICflhajln5/oqK3lrponLA0KICAgICAgICAncGFnZV9zZXR0aW5nJyAgICAgICAgICAgICAgICAgICAgICA9PiAn6Zax6K6A6Kit5a6aJywNCiAgICAgICAgJ2NvbW1lbnRfc2V0dGluZycgICAgICAgICAgICAgICAgICAgPT4gJ+iojuirluioreWumicsDQogICAgICAgICdvdGhlcl9zZXR0aW5nJyAgICAgICAgICAgICAgICAgICAgID0+ICflhbbku5boqK3lrponLA0KICAgICAgICAnYmxvZ19ob3N0JyAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn57ay56uZ5L2N5Z2AJywNCiAgICAgICAgJ2Jsb2dfaG9zdF9hZGQnICAgICAgICAgICAgICAgICAgICAgPT4gJ+m7mOiqjeiHquWLleiugOWPlueVtuWJjee2suermeS9jeWdgO+8jOWmgumcgOWbuuWumue2suermeS9jeWdgOiri+m7nuaTiuaMiemIleS4pui8uOWFpeWfn+WQjeOAgicsDQogICAgICAgICdjb3B5cmlnaHQnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfniYjmrIroqqrmmI4nLA0KICAgICAgICAnY29weXJpZ2h0X2FkZCcgICAgICAgICAgICAgICAgICAgICA9PiAn5Y+v5Lul5aGr5a+r54mI5qyK6LOH6KiK44CB57ay56uZ57Wx6KiI562J5YWn5a6544CCJywNCiAgICAgICAgJ2Jsb2dfbmFtZScgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+e2suermeaomemhjCcsDQogICAgICAgICdibG9nX3N1Ym5hbWUnICAgICAgICAgICAgICAgICAgICAgID0+ICfntrLnq5nmj4/ov7AnLA0KICAgICAgICAncGVybWFuZW50X2RvbWFpbicgICAgICAgICAgICAgICAgICA9PiAn5Zu65a6a57ay56uZ5L2N5Z2AJywNCiAgICAgICAgJ2Jsb2dfdGltZXpvbmUnICAgICAgICAgICAgICAgICAgICAgPT4gJ+e2suermeaZguWNgCcsDQogICAgICAgICdibG9nX2xhbmd1YWdlJyAgICAgICAgICAgICAgICAgICAgID0+ICfntrLnq5noqp7oqIAnLA0KICAgICAgICAnYWxsb3dfdXBsb2FkX3R5cGUnICAgICAgICAgICAgICAgICA9PiAn5YWB6Kix5LiK5YKz5qqU5qGI55qE6aGe5Z6LJywNCiAgICAgICAgJ2FsbG93X3VwbG9hZF9zaXplJyAgICAgICAgICAgICAgICAgPT4gJ+WFgeioseS4iuWCs+aqlOahiOeahOWkp+Wwj++8iOWWruS9jU1C77yJJywNCiAgICAgICAgJ2RlYnVnX21vZGUnICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+iqv+ippuaooeW8jycsDQogICAgICAgICdkaXNwbGF5X2NvdW50JyAgICAgICAgICAgICAgICAgICAgID0+ICfliJfooajpoIHpoa/npLrmlofnq6DnmoTmlbjph48nLA0KICAgICAgICAncGFnZWJhcl9jb3VudCcgICAgICAgICAgICAgICAgICAgICA9PiAn57+76aCB5qKd6aGv56S657+76aCB55qE5pW46YePJywNCiAgICAgICAgJ3NlYXJjaF9jb3VudCcgICAgICAgICAgICAgICAgICAgICAgPT4gJ+WFgeioseaQnOWwi+mhr+ekuuaWh+eroOeahOacgOWkp+aVuOmHjycsDQogICAgICAgICdtYW5hZ2VfY291bnQnICAgICAgICAgICAgICAgICAgICAgID0+ICfmjqfliLblj7Dmr4/poIHpoa/npLrmlofnq6DnmoTmlbjph48nLA0KICAgICAgICAnY29tbWVudF90dXJub2ZmJyAgICAgICAgICAgICAgICAgICA9PiAn56aB5q2i6L+06Z+/JywNCiAgICAgICAgJ2NvbW1lbnRfcmV2ZXJzZV9vcmRlcicgICAgICAgICAgICAgPT4gJ+WVn+eUqOi/tOmfv+WAkuW6j+i8uOWHuicsDQogICAgICAgICdjb21tZW50c19kaXNwbGF5X2NvdW50JyAgICAgICAgICAgID0+ICfmr4/poIHovLjlh7rov7Tpn7/mlbjph48nLA0KICAgICAgICAnY29tbWVudF92ZXJpZnlfZW5hYmxlJyAgICAgICAgICAgICA9PiAn5ZWf55So6L+06Z+/6amX6K2J56K8JywNCiAgICAgICAgJ3N0YXlfc2lnbmVkX2luJyAgICAgICAgICAgICAgICAgICAgPT4gJ+iomOS9j+aIkScsDQogICAgICAgICdub3RpZnknICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfpgJrnn6UnLA0KICAgICAgICAnY3VycmVudF9tZW1iZXInICAgICAgICAgICAgICAgICAgICA9PiAn55W25YmN5biz6JmfJywNCiAgICAgICAgJ2N1cnJlbnRfdmVyc2lvbicgICAgICAgICAgICAgICAgICAgPT4gJ+eVtuWJjeeJiOacrCcsDQogICAgICAgICdhbGxfYXJ0aWxlcycgICAgICAgICAgICAgICAgICAgICAgID0+ICfmlofnq6DnuL3mlbgnLA0KICAgICAgICAnYWxsX3BhZ2VzJyAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn6aCB6Z2i57i95pW4JywNCiAgICAgICAgJ2FsbF90YWdzJyAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aomeexpOe4veaVuCcsDQogICAgICAgICdhbGxfY2F0ZWdvcnlzJyAgICAgICAgICAgICAgICAgICAgID0+ICfliIbpoZ7nuL3mlbgnLA0KICAgICAgICAnYWxsX2NvbW1lbnRzJyAgICAgICAgICAgICAgICAgICAgICA9PiAn6L+06Z+/57i95pW4JywNCiAgICAgICAgJ2FsbF9tZW1iZXJzJyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+W4s+iZn+e4veaVuCcsDQogICAgICAgICdhbGxfdmlld3MnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfngI/opr3nuL3mlbgnLA0KICAgICAgICAnYWxsX3VwbG9hZHMnICAgICAgICAgICAgICAgICAgICAgICA9PiAn6ZmE5Lu257i95pW4JywNCiAgICAgICAgJ2N1cnJlbnRfdGhlbWUnICAgICAgICAgICAgICAgICAgICAgPT4gJ+eVtuWJjeS9iOaZr+S4u+mhjCcsDQogICAgICAgICdjdXJyZW50X3N0eWxlJyAgICAgICAgICAgICAgICAgICAgID0+ICfnlbbliY3mqKHmnb/mqKPlvI8nLA0KICAgICAgICAnZGVmYXVsdF9hdmF0YXInICAgICAgICAgICAgICAgICAgICA9PiAn6buY6KqN5aSn6aCt6LK8JywNCiAgICAgICAgJ3N0eWxlJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aooeadv+aoo+W8jycsDQogICAgICAgICd0aGVtZScgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfkvYjmma/kuLvpoYwnLA0KICAgICAgICAnc3lzdGVtX21vZHVsZScgICAgICAgICAgICAgICAgICAgICA9PiAn57O757Wx5qih57WEJywNCiAgICAgICAgJ3VzZXJfbW9kdWxlJyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+W4s+iZn+iHquWumue+qeaooee1hCcsDQogICAgICAgICd0aGVtZV9tb2R1bGUnICAgICAgICAgICAgICAgICAgICAgID0+ICfkvYjmma/kuLvpoYzoh6rluLbmqKHntYQnLA0KICAgICAgICAncGx1Z2luX21vZHVsZScgICAgICAgICAgICAgICAgICAgICA9PiAn5aSW5o6b5Ym15bu65qih57WEJywNCiAgICAgICAgJ3NpZGViYXInICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+m7mOiqjeWBtOmCiuashCAnLA0KICAgICAgICAnc2lkZWJhcjInICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5YG06YKK5qyEIDInLA0KICAgICAgICAnc2lkZWJhcjMnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5YG06YKK5qyEIDMnLA0KICAgICAgICAnc2lkZWJhcjQnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5YG06YKK5qyEIDQnLA0KICAgICAgICAnc2lkZWJhcjUnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5YG06YKK5qyEIDUnLA0KICAgICAgICAnc2lkZWJhcjYnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5YG06YKK5qyEIDYnLA0KICAgICAgICAnc2lkZWJhcjcnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5YG06YKK5qyEIDcnLA0KICAgICAgICAnc2lkZWJhcjgnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5YG06YKK5qyEIDgnLA0KICAgICAgICAnc2lkZWJhcjknICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5YG06YKK5qyEIDknLA0KICAgICAgICAnZGlzcGxheV9zdWJjYXRlZ29yeXMnICAgICAgICAgICAgICA9PiAn5YiX5Ye65YiG6aGe5LiL5omA5pyJ5a2Q5YiG6aGe55qE5paH56ugJywNCiAgICAgICAgJ2RyYWdfbW9kdWxlX3RvX3NpZGViYXInICAgICAgICAgICAgPT4gJ+iri+aLluabs+mcgOimgeeahOaooee1hOWIsOWPs+WBtOWNgOWfn+aMh+WumuWBtOmCiuashOOAguWBtOmCiuashOS4reeahOaooee1hOWPr+aOkuW6j++8jOS5n+WPr+aLluabs+iHs+W3puWBtOWNgOWfn+enu+mZpOOAgicsDQogICAgICAgICdzaWRlYmFyX21vZHVsZV9jb3VudCcgICAgICAgICAgICAgID0+ICflhaflu7rmnIklc+WAi+aooee1hCcsDQogICAgICAgICd4bWxycGNfYWRkcmVzcycgICAgICAgICAgICAgICAgICAgID0+ICdYTUwtUlBD5Y2U6K2w5L2N5Z2AJywNCiAgICAgICAgJ3N5c3RlbV9lbnZpcm9ubWVudCcgICAgICAgICAgICAgICAgPT4gJ+ezu+e1seeSsOWigycsDQogICAgICAgICd2aWV3X3JpZ2h0cycgICAgICAgICAgICAgICAgICAgICAgID0+ICfmqqLoppbmjojmrIonLA0KICAgICAgICAnbWVtYmVyX2xldmVsJyAgICAgICAgICAgICAgICAgICAgICA9PiAn5biz6Jmf6KeS6ImyJywNCiAgICAgICAgJ2Rpc2FibGVfY29tbWVudCcgICAgICAgICAgICAgICAgICAgPT4gJ+emgeatoui/tOmfvycsDQogICAgICAgICdkZWZhdWx0X3RlbXBsYXRlJyAgICAgICAgICAgICAgICAgID0+ICfpu5joqo3mqKHmnb8nLA0KICAgICAgICAnZ2VuZXJhdGVfc3VtbWFyeScgICAgICAgICAgICAgICAgICA9PiAn55Sf5oiQ5pGY6KaBJywNCiAgICAgICAgJ2FkZF90b19uYXZiYXInICAgICAgICAgICAgICAgICAgICAgPT4gJ+WKoOWFpeWwjuimveWIl+mBuOWWricsDQogICAgICAgICdoZWxwX2dlbmVyYXRlX3N1bW1hcnknICAgICAgICAgICAgID0+ICflnKjmraPmlofmj5LlhaXpppbmop3liIbpmpTnrKbvvIzliYfliIbpmpTnrKbku6XkuIrnmoTlhaflrrnlsIfkvZzngrrmkZjopoHjgILmgqjkuZ/lj6/ku6UnLA0KICAgICAgICAndXNlX2NvbW1hc190b19zZXBhcmF0ZScgICAgICAgICAgICA9PiAn6YCX6Jmf6ZqU6ZaLJywNCiAgICAgICAgJ3Nob3dfY29tbW9uX3RhZ3MnICAgICAgICAgICAgICAgICAgPT4gJ+mhr+ekuuW4uOeUqOaomeexpCcsDQogICAgICAgICdjYXRlZ29yeV9hcml0bGVzX2RlZmF1bHRfdGVtcGxhdGUnID0+ICfoqbLliIbpoZ7mlofnq6DnmoTpu5joqo3mqKHmnb8nLA0KICAgICAgICAnY29uZmlybV9vcGVyYXRpbmcnICAgICAgICAgICAgICAgICA9PiAn6bue5pOK44CM56K65a6a44CN57m857qM77yM5oiW6bue5pOK44CM5Y+W5raI44CN5YGc5q2i44CCJywNCiAgICAgICAgJ2JhdGNoX29wZXJhdGlvbicgICAgICAgICAgICAgICAgICAgPT4gJ+aJueasoeWll+eUqCcsDQogICAgICAgICdvcGVyYXRpb25fc3VjY2VlZCcgICAgICAgICAgICAgICAgID0+ICfomZXnkIbmiJDlip8nLA0KICAgICAgICAnb3BlcmF0aW9uX2ZhaWxlZCcgICAgICAgICAgICAgICAgICA9PiAn6JmV55CG5aSx5pWXJywNCiAgICAgICAgJ2JhdGNoX29wZXJhdGlvbl9pbl9wcm9ncmVzcycgICAgICAgPT4gJ+aJueasoeiZleeQhuS4rScsDQogICAgICAgICdwcmV2aW91c19vcGVyYXRpb25fbm90X2ZpbmlzaGVkJyAgID0+ICLkuYvliY3nmoTmibnmrKHomZXnkIbku7vli5nlsJrmnKrlrozmiJDvvIzpu57mk4o8YSBocmVmPVwnI1wnPuOAjOe5vOe6jOOAjTwvYT7ln7fooYzlrozmiYDmnInku7vli5njgIIiLA0KICAgICAgICAnZXJyb3JfdGlwcycgICAgICAgICAgICAgICAgICAgICAgICA9PiAn6Yyv6Kqk5o+Q56S6JywNCiAgICAgICAgJ2Vycm9yX2luZm8nICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+mMr+iqpOizh+ioiicsDQogICAgICAgICdmaWxlX2xpbmUnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmqpTmoYjkvY3nva4nLA0KICAgICAgICAncmVxdWVzdF9kYXRhJyAgICAgICAgICAgICAgICAgICAgICA9PiAn6KuL5rGC6LOH5paZJywNCiAgICAgICAgJ2luY2x1ZGVfZmlsZScgICAgICAgICAgICAgICAgICAgICAgPT4gJ+W8leeUqOaqlOahiCcsDQogICAgICAgICdiYWNrJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfov5Tlm54nLA0KICAgICAgICAndmFsaWRjb2RlJyAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn6amX6K2J56K8JywNCiAgICAgICAgJ2hpZGVfdGl0bGUnICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+maseiXj+aomemhjCcsDQogICAgICAgICdjYXRhbG9nX3N0eWxlX25vcm1hbCcgICAgICAgICAgICAgID0+ICfmma7pgJrlnosnLA0KICAgICAgICAnY2F0YWxvZ19zdHlsZV90cmVlJyAgICAgICAgICAgICAgICA9PiAn5qi55Z6LJywNCiAgICAgICAgJ2NhdGFsb2dfc3R5bGVfdWwnICAgICAgICAgICAgICAgICAgPT4gJ1VM5bei54uA5Z6LJywNCiAgICAgICAgJ2FyY2hpdmVzX3N0eWxlX3NlbGVjdCcgICAgICAgICAgICAgPT4gJ+S4i+aLieWNleihqOexu+WeiycsDQogICAgICAgICdhbGxfZGVsJyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmibnmrKHliKrpmaQnLA0KICAgICAgICAnYWxsX3Bhc3MnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5om55qyh6YCa6YGOJywNCiAgICAgICAgJ2FsbF9hdWRpdCcgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aJueasoeWvqeaguCcsDQogICAgICAgICdnemlwX2NvbXByZXNzJyAgICAgICAgICAgICAgICAgICAgID0+ICdHWmlw5aOT57iuJywNCiAgICAgICAgJ3N5bnRheF9oaWdoX2xpZ2h0ZXInICAgICAgICAgICAgICAgPT4gJ+iqnuazleeqgemhrycsDQogICAgICAgICdjbG9zZV9zaXRlJyAgICAgICAgICAgICAgICAgICAgICAgID0+ICfpl5zplonntrLnq5knLA0KICAgICAgICAnbWF4X2xpX2luX3VsJyAgICAgICAgICAgICAgICAgICAgICA9PiAnVUzlhadMSeWFg+e0oOeahOacgOWkp+ihjOaVuCcsDQogICAgICAgICdub19yZWZyZXNoX2NvbnRlbnQnICAgICAgICAgICAgICAgID0+ICfnpoHmraLns7vntbHmm7TmlrDmraPmlocnLA0KICAgICAgICAndW5jYXRlZ29yeScgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5pyq5YiG6aGeJywNCiAgICAgICAgJ2NhbGVuZGFyJyAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aXpeabhicsDQogICAgICAgICdjb250cm9sX3BhbmVsJyAgICAgICAgICAgICAgICAgICAgID0+ICfmjqfliLblj7AnLA0KICAgICAgICAnbW9kdWxlX2NhdGFsb2cnICAgICAgICAgICAgICAgICAgICA9PiAn5YiG6aGeJywNCiAgICAgICAgJ21vZHVsZV9jb21tZW50cycgICAgICAgICAgICAgICAgICAgPT4gJ+i/keacn+i/tOmfvycsDQogICAgICAgICdtb2R1bGVfYXJjaGl2ZXMnICAgICAgICAgICAgICAgICAgID0+ICflvZnmlbQnLA0KICAgICAgICAnbW9kdWxlX3N0YXRpc3RpY3MnICAgICAgICAgICAgICAgICA9PiAn56uZ6bue6LOH6KiKJywNCiAgICAgICAgJ21vZHVsZV9hdXRob3JzJyAgICAgICAgICAgICAgICAgICAgPT4gJ+S9nOiAhee+pCcsDQogICAgICAgICdtb2R1bGVfcHJldmlvdXMnICAgICAgICAgICAgICAgICAgID0+ICfov5HmnJ/mlofnq6AnLA0KICAgICAgICAnbW9kdWxlX3RhZ3MnICAgICAgICAgICAgICAgICAgICAgICA9PiAn5qiZ57Gk6ZuGJywNCiAgICAgICAgJ2FkbWluX2xvZ2luJyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+eZu+WFpeaOp+WItuWPsCcsDQogICAgICAgICd0b3BfaW5kZXgnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfpppbpoIEnLA0KICAgICAgICAndG9wX2dsb2JhbCcgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5YWo5Z+fJywNCiAgICAgICAgJ3RvcF9jYXRlZ29yeScgICAgICAgICAgICAgICAgICAgICAgPT4gJ+WIhumhnicsDQogICAgICAgICdqdW1wX2NvbW1lbnQnICAgICAgICAgICAgICAgICAgICAgID0+ICfmqqLoppbov7Tpn79JRD0nLA0KICAgICAgICAneWVhcl9zdWZmaXgnICAgICAgICAgICAgICAgICAgICAgICA9PiAn5bm0JywNCiAgICAgICAgJ3dlZWtfc3VmZml4JyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+WRqCcsDQogICAgICAgICd0aW1lJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmmYLplpMnLA0KICAgICAgICAnaG91cicgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5bCP5pmCJywNCiAgICAgICAgJ21pbnV0ZScgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+WIhueoricsDQogICAgICAgICdzZWNvbmQnICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfnp5LnqK4nLA0KICAgICAgICAnbWlsbGlzZWMnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5q+r56eSJywNCiAgICAgICAgJ2Nsb3NlJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+WujOaIkCcsDQogICAgICAgICdjdXJyZW50JyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfnj77lnKgnLA0KICAgICAgICAncHJldl9tb250aCcgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5LiK5YCL5pyIJywNCiAgICAgICAgJ25leHRfbW9udGgnICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+S4i+WAi+aciCcsDQogICAgICAgICdwcm9ncmFtJyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfnqIvlvI8nLA0KICAgICAgICAnaW50ZXJmYWNlJyAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn55WM6Z2iJywNCiAgICAgICAgJ3N1cHBvcnQnICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aUr+aPtCcsDQogICAgICAgICd0aGFua3MnICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfps7TorJ0nLA0KICAgICAgICAnd2Vic2l0ZScgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn57ay56uZJywNCiAgICAgICAgJ2RldmVsb3BfaW50cm8nICAgICAgICAgICAgICAgICAgICAgPT4gJ1otQmxvZ1BIUOeJiOeoi+W8j+mWi+eZvOWSjOWumOaWuee2suermee+pCcsDQogICAgICAgICdkZWZhdWx0JyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfpu5jorqQnLA0KICAgICAgICAnZGVidWdfYmFja3RyYWNlJyAgICAgICAgICAgICAgICAgICA9PiAn5aCG5qCI6Lef6LiqJywNCiAgICAgICAgJ3Bvc3NpYmxlX2NhdXNlc19lcnJvcicgICAgICAgICAgICAgPT4gJ+WPr+iDveeahOmMr+iqpOWOn+WboCcsDQogICAgICAgICdkaXNwbGF5X21vcmVfaW5mbycgICAgICAgICAgICAgICAgID0+ICfmmL7npLrmm7TlpJrnmoTkv6Hmga8nLA0KICAgICAgICAnZXJyb3JfbG9hZF9qcycgICAgICAgICAgICAgICAgICAgICA9PiAnSmF2YVNjcmlwdOWKoOi8ieWkseaVl+OAguaMieKAnOeiuuWumuKAneWNs+WPr+W+l+WIsOS/ruW+qeaWueahiO+8jOaMieKAnOWPlua2iOKAnee5vOe6jOOAgicsDQogICAgICAgICdjb21tZW50X2F1ZGl0JyAgICAgICAgICAgICAgICAgICAgID0+ICflr6nmoLjov7Tpn78nLA0KICAgICAgICAnY29tbWVudF9hdWRpdF9jb21tZW50JyAgICAgICAgICAgICA9PiAn5omT6ZaL5b6M5omA5pyJ6Z2e566h55CG5ZOh55m85biD55qE6L+06Z+/6YO95bCH6YCy5YWl5a+p5qC454uA5oWLJywNCiAgICAgICAgJ2RlYnVnZ2luZ193YXJuaW5nJyAgICAgICAgICAgICAgICAgPT4gJ+aCqOeahFotQmxvZ1BIUOiZleaWvOmWi+eZvOaooeW8j+S4i+OAguatpOaooeW8j+S4i+e2suermeacieiiq+mqh+eahOmiqOmaqu+8jOWvpumam+mDqOe9suWcqOe3muS4iueahOe2suermeiri+WPiuaZgumXnOmWiemWi+eZvOaooeW8j++8gScsDQogICAgICAgICdwZXJtYW5lbnRfZG9tYWluX3dpdGhfYWRtaW4nICAgICAgID0+ICflvozoh7rkuZ/kvb/nlKjmsLjkuYXln5/lkI0nLA0KICAgICAgICAnY3VycmVudF90ZW1wbGF0ZScgICAgICAgICAgICAgICAgICA9PiAn55W25YmN5qih5p2/JywNCiAgICAgICAgJ2FkZGl0aW9uYWxfc2VjdXJpdHknICAgICAgICAgICAgICAgPT4gJ+WuieWFqOWinuW8tycsDQogICAgICAgICd1c2luZ19jZG5fZ3Vlc3RfdHlwZScgICAgICAgICAgICAgID0+ICflrqLmiLZJUOeNsuWPluadpea6kCcsDQogICAgICAgICdmaXJzdF9idXR0b24nICAgICAgICAgICAgICAgICAgICAgID0+ICfigLnigLknLA0KICAgICAgICAncHJldl9idXR0b24nICAgICAgICAgICAgICAgICAgICAgICA9PiAn4oC5JywNCiAgICAgICAgJ25leHRfYnV0dG9uJyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+KAuicsDQogICAgICAgICdsYXN0X2J1dHRvbicgICAgICAgICAgICAgICAgICAgICAgID0+ICfigLrigLonLA0KICAgICAgICAnbnVtZXJhbF9idXR0b24nICAgICAgICAgICAgICAgICAgICA9PiAnJW51bSUnLA0KICAgICAgICAndmVyaWZ5X3N1Y2NlZWQnICAgICAgICAgICAgICAgICAgICA9PiAn5qCh6aqM5oiQ5YqfLOivt+aPkOS6pCEnLA0KICAgICAgICAndmVyaWZ5X2ZhaWwnICAgICAgICAgICAgICAgICAgICAgICA9PiAn5qCh6aqM5aSx6LSlJywNCiAgICAgICAgJ3ZlcmlmeWluZycgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+agoemqjOS4rScsDQogICAgICAgICcnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICcnLA0KICAgICksDQoNCiAgICAvL0FjdGlvbg0KICAgICdhY3Rpb25zJyA9PiBhcnJheSgNCiAgICAgICAgJ2xvZ2luJyAgICAgICA9PiAn55m75YWlJywNCiAgICAgICAgJ2xvZ291dCcgICAgICA9PiAn55m75Ye6JywNCiAgICAgICAgJ3ZlcmlmeScgICAgICA9PiAn6amX6K2JJywNCiAgICAgICAgJ2FkbWluJyAgICAgICA9PiAn566h55CGJywNCiAgICAgICAgJ3NlYXJjaCcgICAgICA9PiAn5pCc5bCLJywNCiAgICAgICAgJ21pc2MnICAgICAgICA9PiAn6Zuc6aCFJywNCiAgICAgICAgJ2ZlZWQnICAgICAgICA9PiAn5qqi6KaWUlNTJywNCiAgICAgICAgJ2NtdCcgICAgICAgICA9PiAn55m86KGo6L+06Z+/JywNCiAgICAgICAgJ2dldGNtdCcgICAgICA9PiAn5pW055CG6L+06Z+/JywNCiAgICAgICAgJ2FqYXgnICAgICAgICA9PiAnQUpBWCcsDQogICAgICAgICdBcnRpY2xlRWR0JyAgPT4gJ+e3qOi8r+aWh+eroCcsDQogICAgICAgICdBcnRpY2xlUHN0JyAgPT4gJ+eZvOihqOaWh+eroCcsDQogICAgICAgICdBcnRpY2xlRGVsJyAgPT4gJ+WIqumZpOaWh+eroCcsDQogICAgICAgICdBcnRpY2xlUHViJyAgPT4gJ+WFrOmWi+eZvOihqCcsDQogICAgICAgICdQYWdlRWR0JyAgICAgPT4gJ+e3qOi8r+mggemdoicsDQogICAgICAgICdQYWdlUHN0JyAgICAgPT4gJ+eZvOW4g+mggemdoicsDQogICAgICAgICdQYWdlRGVsJyAgICAgPT4gJ+WIoOmZpOmggemdoicsDQogICAgICAgICdDYXRlZ29yeUVkdCcgPT4gJ+e3qOi8r+WIhumhnicsDQogICAgICAgICdDYXRlZ29yeVBzdCcgPT4gJ+eZvOW4g+WIhumhnicsDQogICAgICAgICdDYXRlZ29yeURlbCcgPT4gJ+WIqumZpOWIhumhnicsDQogICAgICAgICdDb21tZW50RWR0JyAgPT4gJ+e3qOi8r+i/tOmfvycsDQogICAgICAgICdDb21tZW50U2F2JyAgPT4gJ+eZvOihqOi/tOmfvycsDQogICAgICAgICdDb21tZW50RGVsJyAgPT4gJ+WIqumZpOi/tOmfvycsDQogICAgICAgICdDb21tZW50Q2hrJyAgPT4gJ+WFgeiosei/tOmfvycsDQogICAgICAgICdDb21tZW50QmF0JyAgPT4gJ+aJueasoeeuoeeQhui/tOmfvycsDQogICAgICAgICdNZW1iZXJFZHQnICAgPT4gJ+e3qOi8r+acg+WToScsDQogICAgICAgICdNZW1iZXJQc3QnICAgPT4gJ+eZvOW4g+acg+WToScsDQogICAgICAgICdNZW1iZXJEZWwnICAgPT4gJ+WIqumZpOacg+WToScsDQogICAgICAgICdNZW1iZXJOZXcnICAgPT4gJ+aWsOWinuacg+WToScsDQogICAgICAgICdUYWdFZHQnICAgICAgPT4gJ+e3qOi8r+aomeexpCcsDQogICAgICAgICdUYWdQc3QnICAgICAgPT4gJ+eZvOW4g+aomeexpCcsDQogICAgICAgICdUYWdEZWwnICAgICAgPT4gJ+WIqumZpOaomeexpCcsDQogICAgICAgICdUYWdOZXcnICAgICAgPT4gJ+aWsOWinuaomeexpCcsDQogICAgICAgICdQbHVnaW5FbmInICAgPT4gJ+WVn+eUqOWkluaOmycsDQogICAgICAgICdQbHVnaW5EaXMnICAgPT4gJ+emgeeUqOWkluaOmycsDQogICAgICAgICdVcGxvYWRQc3QnICAgPT4gJ+S4iuWCs+mZhOS7ticsDQogICAgICAgICdVcGxvYWREZWwnICAgPT4gJ+WIqumZpOmZhOS7ticsDQogICAgICAgICdNb2R1bGVFZHQnICAgPT4gJ+e3qOi8r+aooee1hCcsDQogICAgICAgICdNb2R1bGVQc3QnICAgPT4gJ+eZvOW4g+aooee1hCcsDQogICAgICAgICdNb2R1bGVEZWwnICAgPT4gJ+WIqumZpOaooee1hCcsDQogICAgICAgICdUaGVtZVNldCcgICAgPT4gJ+WkluingOioreWumicsDQogICAgICAgICdTaWRlYmFyU2V0JyAgPT4gJ+WBtOmCiuashOioreWumicsDQogICAgICAgICdTZXR0aW5nU2F2JyAgPT4gJ+WEsuWtmOioreWumicsDQogICAgICAgICdBcnRpY2xlTW5nJyAgPT4gJ+aWh+eroOeuoeeQhicsDQogICAgICAgICdQYWdlTW5nJyAgICAgPT4gJ+mggemdoueuoeeQhicsDQogICAgICAgICdDYXRlZ29yeU1uZycgPT4gJ+WIhumhnueuoeeQhicsDQogICAgICAgICdTZXR0aW5nTW5nJyAgPT4gJ+mFjee9rueuoeeQhicsDQogICAgICAgICdUYWdNbmcnICAgICAgPT4gJ+aomeexpOeuoeeQhicsDQogICAgICAgICdDb21tZW50TW5nJyAgPT4gJ+i/tOmfv+euoeeQhicsDQogICAgICAgICdVcGxvYWRNbmcnICAgPT4gJ+mZhOS7tueuoeeQhicsDQogICAgICAgICdNZW1iZXJNbmcnICAgPT4gJ+W4s+iZn+euoeeQhicsDQogICAgICAgICdUaGVtZU1uZycgICAgPT4gJ+S9iOaZr+S4u+mhjCcsDQogICAgICAgICdQbHVnaW5NbmcnICAgPT4gJ+WkluaOm+euoeeQhicsDQogICAgICAgICdNb2R1bGVNbmcnICAgPT4gJ+aooee1hOeuoeeQhicsDQogICAgICAgICdBcnRpY2xlQWxsJyAgPT4gJ+aJgOacieaWh+eroOasiumZkCcsDQogICAgICAgICdQYWdlQWxsJyAgICAgPT4gJ+aJgOaciemggemdouasiumZkCcsDQogICAgICAgICdDYXRlZ29yeUFsbCcgPT4gJ+aJgOacieWIhumhnuasiumZkCcsDQogICAgICAgICdDb21tZW50QWxsJyAgPT4gJ+aJgOaciei/tOmfv+asiumZkCcsDQogICAgICAgICdNZW1iZXJBbGwnICAgPT4gJ+aJgOacieW4s+iZn+asiumZkCcsDQogICAgICAgICdUYWdBbGwnICAgICAgPT4gJ+aJgOacieaomeexpOasiumZkCcsDQogICAgICAgICdVcGxvYWRBbGwnICAgPT4gJ+aJgOaciemZhOS7tuasiumZkCcsDQogICAgICAgICdyb290JyAgICAgICAgPT4gJ+i2hee0muasiumZkCcsDQogICAgICAgICdOb1ZhbGlkQ29kZScgPT4gJ+mpl+itieeivCcsDQogICAgKSwNCg0KICAgIC8vQXJ0aWNsZSBMZXZlbA0KICAgICdwb3N0X3N0YXR1c19uYW1lJyA9PiBhcnJheSgNCiAgICAgICAgJzAnID0+ICflhazplosnLA0KICAgICAgICAnMScgPT4gJ+iNieeovycsDQogICAgICAgICcyJyA9PiAn5b6F5a+pJywNCiAgICApLA0KDQogICAgLy9Vc2VyIExldmVsDQogICAgJ3VzZXJfbGV2ZWxfbmFtZScgPT4gYXJyYXkoDQogICAgICAgICcxJyA9PiAn566h55CG5ZOhJywNCiAgICAgICAgJzInID0+ICfntrLnq5nnt6jovK8nLA0KICAgICAgICAnMycgPT4gJ+S9nOiAhScsDQogICAgICAgICc0JyA9PiAn5Y2U5L2c6ICFJywNCiAgICAgICAgJzUnID0+ICfov7Tpn7/ogIUnLA0KICAgICAgICAnNicgPT4gJ+ioquWuoicsDQogICAgKSwNCg0KICAgICd1c2VyX3N0YXR1c19uYW1lJyA9PiBhcnJheSgNCiAgICAgICAgJzAnID0+ICfmraPluLgnLA0KICAgICAgICAnMScgPT4gJ+W+heWvqScsDQogICAgICAgICcyJyA9PiAn56aB5q2iJywNCiAgICApLA0KDQogICAgLy9KYW51YXJ5LCBGZWJydWFyeS4uLg0KICAgICdtb250aCcgPT4gYXJyYXkoDQogICAgICAgICcxJyAgPT4gJ+S4gOaciCcsDQogICAgICAgICcyJyAgPT4gJ+S6jOaciCcsDQogICAgICAgICczJyAgPT4gJ+S4ieaciCcsDQogICAgICAgICc0JyAgPT4gJ+Wbm+aciCcsDQogICAgICAgICc1JyAgPT4gJ+S6lOaciCcsDQogICAgICAgICc2JyAgPT4gJ+WFreaciCcsDQogICAgICAgICc3JyAgPT4gJ+S4g+aciCcsDQogICAgICAgICc4JyAgPT4gJ+WFq+aciCcsDQogICAgICAgICc5JyAgPT4gJ+S5neaciCcsDQogICAgICAgICcxMCcgPT4gJ+WNgeaciCcsDQogICAgICAgICcxMScgPT4gJ+WNgeS4gOaciCcsDQogICAgICAgICcxMicgPT4gJ+WNgeS6jOaciCcsDQogICAgKSwNCg0KICAgIC8vSmFuLiwgRmViLiAuLi4NCiAgICAnbW9udGhfYWJicicgPT4gYXJyYXkoDQogICAgICAgICcxJyAgPT4gJzAx5pyIJywNCiAgICAgICAgJzInICA9PiAnMDLmnIgnLA0KICAgICAgICAnMycgID0+ICcwM+aciCcsDQogICAgICAgICc0JyAgPT4gJzA05pyIJywNCiAgICAgICAgJzUnICA9PiAnMDXmnIgnLA0KICAgICAgICAnNicgID0+ICcwNuaciCcsDQogICAgICAgICc3JyAgPT4gJzA35pyIJywNCiAgICAgICAgJzgnICA9PiAnMDjmnIgnLA0KICAgICAgICAnOScgID0+ICcwOeaciCcsDQogICAgICAgICcxMCcgPT4gJzEw5pyIJywNCiAgICAgICAgJzExJyA9PiAnMTHmnIgnLA0KICAgICAgICAnMTInID0+ICcxMuaciCcsDQogICAgKSwNCg0KICAgIC8vU3VuZGF5LCBNb25kYXkuLg0KICAgICd3ZWVrJyA9PiBhcnJheSgNCiAgICAgICAgJzcnID0+ICfmmJ/mnJ/ml6UnLA0KICAgICAgICAnMScgPT4gJ+aYn+acn+S4gCcsDQogICAgICAgICcyJyA9PiAn5pif5pyf5LqMJywNCiAgICAgICAgJzMnID0+ICfmmJ/mnJ/kuIknLA0KICAgICAgICAnNCcgPT4gJ+aYn+acn+WbmycsDQogICAgICAgICc1JyA9PiAn5pif5pyf5LqUJywNCiAgICAgICAgJzYnID0+ICfmmJ/mnJ/lha0nLA0KICAgICksDQoNCiAgICAvL1N1bi4sIE1vbi4gLi4uDQogICAgJ3dlZWtfYWJicicgPT4gYXJyYXkoDQogICAgICAgICc3JyA9PiAn5pelJywNCiAgICAgICAgJzEnID0+ICfkuIAnLA0KICAgICAgICAnMicgPT4gJ+S6jCcsDQogICAgICAgICczJyA9PiAn5LiJJywNCiAgICAgICAgJzQnID0+ICflm5snLA0KICAgICAgICAnNScgPT4gJ+S6lCcsDQogICAgICAgICc2JyA9PiAn5YWtJywNCiAgICApLA0KDQogICAgJ3dlZWtfc2hvcnQnID0+IGFycmF5KA0KICAgICAgICAnNycgPT4gJ+WRqOaXpScsDQogICAgICAgICcxJyA9PiAn5ZGo5LiAJywNCiAgICAgICAgJzInID0+ICflkajkuownLA0KICAgICAgICAnMycgPT4gJ+WRqOS4iScsDQogICAgICAgICc0JyA9PiAn5ZGo5ZubJywNCiAgICAgICAgJzUnID0+ICflkajkupQnLA0KICAgICAgICAnNicgPT4gJ+WRqOWFrScsDQogICAgKSwNCg0KICAgIC8vQ3VzdG9tIEVycm9yIEluZm9ybWF0aW9uDQogICAgJ2Vycm9yJyA9PiBhcnJheSgNCiAgICAgICAgJzAnICA9PiAn5pyq55+l6Yyv6KqkJywNCiAgICAgICAgJzEnICA9PiAn5pyq55+l5ZG95LukJywNCiAgICAgICAgJzInICA9PiAn55u46Zec6aCB6Z2i5LiN5a2Y5ZyoJywNCiAgICAgICAgJzMnICA9PiAn6YCB5Ye65Y+D5pW46Yyv6KqkJywNCiAgICAgICAgJzQnICA9PiAn6LOH5paZ5bqr6YCj57ea6Yyv6KqkJywNCiAgICAgICAgJzUnICA9PiAn6Z2e5rOV54CP6Ka9JywNCiAgICAgICAgJzYnICA9PiAn5o6I5qyK5aSx5pWIJywNCiAgICAgICAgJzcnICA9PiAn5biz6Jmf54K656m677yM6LaF6ZW35oiW5qC85byP6Yyv6KqkJywNCiAgICAgICAgJzgnICA9PiAn55m75YWl5aSx5pWXJywNCiAgICAgICAgJzknICA9PiAn6Kmy5paH56ug5LiN5a2Y5Zyo5oiW5o6I5qyK5aSx5pWI44CCJywNCiAgICAgICAgJzEwJyA9PiAn57O757Wx5Yid5aeL5YyW5aSx5pWXJywNCiAgICAgICAgJzExJyA9PiAn57eo6Lyv5paH56ug5aSx5pWXJywNCiAgICAgICAgJzEyJyA9PiAn57eo6Lyv5YiG6aGe5aSx5pWXJywNCiAgICAgICAgJzEzJyA9PiAn6Kmy5YiG6aGe5LiL5pyJ5paH56ug77yM5Yiq6Zmk5aSx5pWX44CCJywNCiAgICAgICAgJzE0JyA9PiAn5L2g55qE6L+06Z+/5bey6KKr57O757Wx5pSU5oiq77yM5by16LK85aSx5pWX44CCJywNCiAgICAgICAgJzE1JyA9PiAn5ZCN56ix5LiN6IO954K656m65oiW6YGO6ZW35Y+K5qC85byP5LiN5q2j56K6JywNCiAgICAgICAgJzE2JyA9PiAn57eo6Lyv5biz6Jmf5aSx5pWXJywNCiAgICAgICAgJzE3JyA9PiAn5Yiq6Zmk5biz6Jmf5aSx5pWXJywNCiAgICAgICAgJzE4JyA9PiAn5Yiq6Zmk6L+06Z+/5aSx5pWXJywNCiAgICAgICAgJzE5JyA9PiAn5Yiq6Zmk5byV55So5aSx5pWXJywNCiAgICAgICAgJzIwJyA9PiAn6YCB5Ye65byV55So5aSx5pWXJywNCiAgICAgICAgJzIxJyA9PiAn5qqU5qGI5LiK5YKz5aSx5pWXJywNCiAgICAgICAgJzIyJyA9PiAn5qqU5qGI5Yiq6Zmk5aSx5pWXJywNCiAgICAgICAgJzIzJyA9PiAn57O757Wx6YeN6Kit5aSx5pWXJywNCiAgICAgICAgJzI0JyA9PiAn5pCc5bCL5a2X5YWD5Liy5aSx5pWXJywNCiAgICAgICAgJzI1JyA9PiAn5YSy5a2Y6Kit5a6a5aSx5pWXJywNCiAgICAgICAgJzI2JyA9PiAn5qqU5qGI6aGe5Z6L6LaF5Ye66Kit5a6a56+E5ZyNJywNCiAgICAgICAgJzI3JyA9PiAn5qqU5qGI5aSn5bCP6LaF5Ye66Kit5a6a56+E5ZyNJywNCiAgICAgICAgJzI4JyA9PiAn5qqU5qGI5bey5a2Y5Zyo77yM6KuL5YWI5Yiq6Zmk44CCJywNCiAgICAgICAgJzI5JyA9PiAn6YO1566x5LiN6IO954K656m65oiW6YGO6ZW35Y+K5qC85byP5LiN5q2j56K6JywNCiAgICAgICAgJzMwJyA9PiAn57ay5Z2A5LiN6IO954K656m65oiW6YGO6ZW35Y+K5qC85byP5LiN5q2j56K6JywNCiAgICAgICAgJzMxJyA9PiAn6KuL5Yu/5YaS5ZCN6aCC5pu/77yb5aaC5p6c5L2g5piv6Kmy5L2/55So6ICF77yM6KuL55m75YWl5b6M5YaN55m86KGo6L+06Z+/44CCJywNCiAgICAgICAgJzMyJyA9PiAn5pON5L2c6aC7546H6YGO5b+rJywNCiAgICAgICAgJzMzJyA9PiAn57eo6Lyv6Zec6Y215a2X5aSx5pWXJywNCiAgICAgICAgJzM0JyA9PiAn5Yiq6Zmk6Zec6Y215a2X5aSx5pWXJywNCiAgICAgICAgJzM1JyA9PiAn57eo6Lyv5qiZ57Gk5aSx5pWXJywNCiAgICAgICAgJzM2JyA9PiAn5Yiq6Zmk5qiZ57Gk5aSx5pWXJywNCiAgICAgICAgJzM3JyA9PiAn57eo6Lyv5qqU5qGI5aSx5pWXJywNCiAgICAgICAgJzM4JyA9PiAn6amX6K2J56K86Ly45YWl6Yyv6KqkJywNCiAgICAgICAgJzM5JyA9PiAn6KuL5LiN6KaB5by16LK855u45ZCM55qE6L+06Z+/JywNCiAgICAgICAgJzQwJyA9PiAn56aB5q2i6L+06Z+/JywNCiAgICAgICAgJzQxJyA9PiAn56aB5q2i5byV55SoJywNCiAgICAgICAgJzQyJyA9PiAn57eo6Lyv6L+06Z+/5aSx5pWXJywNCiAgICAgICAgJzQzJyA9PiAn5qCh6amX56K86Yyv6KqkJywNCiAgICAgICAgJzQ0JyA9PiAn6Z2e5YWs6ZaL5paH56ug5LiN6IO95by16LK86L+06Z+/JywNCiAgICAgICAgJzQ1JyA9PiAn6L+06Z+/5pys5Y+q5YWB6Kix6Ki75YaK5biz6Jmf5Zue6KaG77yM6Kiq5a6i5Y+q6IO96L+06Z+/44CCJywNCiAgICAgICAgJzQ2JyA9PiAn6L+06Z+/5YWn5a655LiN6IO954K656m65oiW6YGO6ZW3JywNCiAgICAgICAgJzQ3JyA9PiAn5Zue6KaG5Yqf6IO95Y+q5bCN6Ki75YaK5biz6Jmf6ZaL5ZWf77yM6Kiq5a6i5Y+q6IO96L+06Z+/44CCJywNCiAgICAgICAgJzQ4JyA9PiAn5aSW5o6b5pyq5ZWf55So77yM6KuL5Zyo5o6n5Yi25Y+w5ZWf55So44CCJywNCiAgICAgICAgJzQ5JyA9PiAn6Kmy5YiG6aGe5LiL5pyJ5a2Q5YiG6aGe77yM5Yiq6Zmk5aSx5pWX44CCJywNCiAgICAgICAgJzUwJyA9PiAn5oyH5a6a55qE54i25YiG6aGe5LiN5a2Y5ZyoJywNCiAgICAgICAgJzUxJyA9PiAn5a2Q5YiG6aGe5LiL5LiN6IO95YaN5YyF5ZCr5YiG6aGeJywNCiAgICAgICAgJzUyJyA9PiAn6LaF6YGO5pyA5aSn5Zue6KaG5bGk5pW4JywNCiAgICAgICAgJzUzJyA9PiAn5L2g55qE6L+06Z+/5q2j5Zyo5b6F5a+p5Lit77yM6KuL5Yu/5YaN5qyh6YCB5Ye644CCJywNCiAgICAgICAgJzU0JyA9PiAn5a+G56K85Y+q6IO955SxQS1aYS16MC05YH4hP0AjJCVeJiotX+Wtl+WFg+e1hOaIkO+8jOS4lOS4jeiDveWwj+aWvDjkvY3jgIHlpKfmlrwyMOS9jeOAgicsDQogICAgICAgICc1NScgPT4gJ+WKoOWvhuW+jOeahOWtl+WFg+S4sumVt+W6puS4jeaYrzMyJywNCiAgICAgICAgJzU2JyA9PiAn6LaF5Ye65LqG6Kit5a6a55qE5Zue6KaG5bGk5pW4JywNCiAgICAgICAgJzU3JyA9PiAn54i26L+06Z+/5ZKM5a2Q6L+06Z+/5LiN5Zyo5ZCM5LiA56+H5paH56ugJywNCiAgICAgICAgJzU4JyA9PiAn54i25YiG6aGe5LiN5a2Y5ZyoJywNCiAgICAgICAgJzU5JyA9PiAn5a2Q5YiG6aGe5LiN5a2Y5ZyoJywNCiAgICAgICAgJzYwJyA9PiAn5Zue6KaG6L+06Z+/5aSx5pWXJywNCiAgICAgICAgJzYxJyA9PiAn6Kmy6KiY6YyE5LiN5a2Y5ZyoJywNCiAgICAgICAgJzYyJyA9PiAn5a2Y5Zyo5ZCM5ZCN5biz6Jmf77yM6KuL5L+u5pS55biz6Jmf5Luj56ix44CCJywNCiAgICAgICAgJzYzJyA9PiAn56aB5q2i54CP6Ka96I2J56i/5paH56ugJywNCiAgICAgICAgJzY0JyA9PiAn5ZWf55So5aSx5pWX77yM6Kmy5oeJ55So5LiN6YGp55So5pa8Wi1CbG9nUEhQ44CCJywNCiAgICAgICAgJzY1JyA9PiAnV2luZG93cyBQaG9uZeeUqOaItuiri+WFiOWNh+e0muWIsFdpbmRvd3MgUGhvbmUgOC4x5YaN5LiK5YKz5qqU5qGI44CCJywNCiAgICAgICAgJzY2JyA9PiAn5biz6Jmf5ZKM5a+G56K85LiN6IO954K656m6JywNCiAgICAgICAgJzY3JyA9PiAnTXlTUUwg6LOH5paZ5bqr54Sh5rOV6YCj57eaJywNCiAgICAgICAgJzY4JyA9PiAnU1FMaXRlIOizh+aWmeW6q+aXoOazleaJk+mWiycsDQogICAgICAgICc2OScgPT4gJ+acquafpeipouWIsOebuOmXnOizh+aWmScsDQogICAgICAgICc3MCcgPT4gJ+ato+aWh+S4jeiDveeCuuepuicsDQogICAgICAgICc3MScgPT4gJ+eVtuWJjeeahOe3qOi8r+WFp+WuueWwmuacquWEsuWtmCcsDQogICAgICAgICc3MicgPT4gJ+WQjeeoseS4jeiDveeCuuepuuaIluagvOW8j+S4jeato+eiuicsDQogICAgICAgICc3MycgPT4gJ+iri+eiuuiqjeWvhueivOaYr+WQpuioreWumuato+eiuicsDQogICAgICAgICc3NCcgPT4gJ+aCqOmChOWcqOeUqOiIiueahElF5YWn5qC455qE54CP6Ka95Zmo5ZeO77yf6KuL5Y2H57Sa6Iez5pSv5o+0IEhUTUw1IOeahCBJRTExIOWQp++8gVxyXG7mgqjkuZ/lj6/ku6XmoLnmk5rpnIDopoHkvb/nlKhDaHJvbWVh44CBRmlyZWZveOOAgU9wZXJh562J54CP6Ka95ZmoIScsDQogICAgICAgICc3NScgPT4gJ+aqlOWQjeS4jeiDveeCuuepuu+8gScsDQogICAgICAgICc3NicgPT4gJ0h0bWxJRCDkuI3og73ngrrnqbrvvIEnLA0KICAgICAgICAnNzcnID0+ICfluLPomZ/lj6rog73nlKjkuK3mlofjgIHmlbjlrZfjgIHlrZfmr43lkowu6IiHXyzkuJTlrZflhYPplbfluqblnKglbWluLSVtYXjkvY0nLA0KICAgICAgICAnNzgnID0+ICfoqbLmh4nnlKjpnIDopoElc+WPiuS7peS4iueJiOacrOeahFotQmxvZ1BIUCcsDQogICAgICAgICc3OScgPT4gJ+W4s+iZn+W+heWvqeS4rScsDQogICAgICAgICc4MCcgPT4gJ+W4s+iZn+W3suiiq+mOluWumicsDQogICAgICAgICc4MScgPT4gJ+acquefpeaWueazleaIluWxrOaApycsDQogICAgICAgICc4MicgPT4gJ+e2suermeW3sumXnOmWiScsDQogICAgICAgICc4MycgPT4gJ+WVn+eUqOipsuaHieeUqO+8jOmcgOimgeWFiOWVn+eUqOS+nei1luaHieeUqCVzJywNCiAgICAgICAgJzg0JyA9PiAn5YGc55So6Kmy5oeJ55So77yM6ZyA6KaB5YWI5YGc55So6KKr5L6d6LWW5oeJ55SoJXMnLA0KICAgICAgICAnODUnID0+ICfllZ/nlKjoqbLmh4nnlKjvvIzpnIDopoHlhYjlgZznlKjlhrLnqoHmh4nnlKglcycsDQogICAgICAgICc4NicgPT4gJ+S9iOaZr+S4u+mhjOeahOe3qOitr+aqlOahiOS4jeWtmOWcqCcsDQogICAgICAgICc4NycgPT4gJ+iou+WGiumhnuWei+WkseaVlycsDQogICAgICAgICc4OCcgPT4gJ+S4iuWCs+eahOaqlOahiOS4jeWtmOWcqO+8jOWPr+iDvei2hemBjuS6huacgOWkp+S4iuWCs+mZkOWIticsDQogICAgICAgICc4OScgPT4gJ0phdmFTY3JpcHTliqDovInlpLHmlZfvvIzlj6/og73ooqvmnI3li5nlmajmi6bmiKonLA0KICAgICAgICAnOTAnID0+ICfku6PnqLHkuI3lhYHoqLHkvb/nlKjnibnmrornrKbomZ8nLA0KICAgICAgICAnOTEnID0+ICdQSFDniYjmnKzlpKroiIrvvIzoqbLmh4nnlKjopoHmsYLkvb/nlKggJXMg5Y+K5Lul5LiK54mI5pys44CCICcsDQogICAgICAgICc5MicgPT4gJ+e8uuWwkSAlcyDlh73mlbjvvIznhKHms5XllZ/nlKjmnKzmh4nnlKgnLA0KICAgICAgICAnOTMnID0+ICfmraTmlofnq6Dlt7Looqvlhbbku5bpoIHpnaLmm7TmlrDvvIzoh6rli5Xlgpnku73lt7Lpl5zplonjgILlpoLpnIDph43llZ/oh6rli5Xlgpnku73vvIzoq4vliLfmlrDpoIHpnaLjgIInLA0KICAgICAgICAnOTQnID0+ICfmgqjlnKjmraTpoIHpnaLlt7LlgZznlZkgJXMg5bCP5pmC77yM5Y+v6IO96ZyA6KaB5Yi35paw6aCB6Z2i5omN6IO95q2j5bi45L2/55So5ZCE5Yqf6IO944CCJywNCiAgICApLA0KDQogICAgJ29mZmljYWxfdXJscycgPT4gYXJyYXkoDQogICAgICAgICdtb3JlX2hlbHAnID0+ICdodHRwczovL3d3dy56YmxvZ2NuLmNvbS9oZWxwLz9pZD17JWlkJX0mbWVzc2FnZT17JW1lc3NhZ2UlfScsDQogICAgKSwNCg0KICAgIC8vIFBvc3NpYmxlIGNhdXNlcyBvZiB0aGUgZXJyb3INCiAgICAnZXJyb3JfcmVhc29ucycgPT4gYXJyYXkoDQogICAgICAgIC8vIC0xIGZvciBkZWZhdWx0DQogICAgICAgICdkZWZhdWx0JyA9PiAnJywNCg0KICAgICAgICAvLyBaQlAgZXJyb3JzIGZpcnN0DQogICAgICAgICc2JyA9PiAnDQoJCQnmgqjmmK/lkKblt7LntpPnmbvlhaXvvJ/oq4vlhYjnmbvlhaXmjqfliLblj7DvvIzlho3ph43oqabmk43kvZzjgII8YnIvPg0KCQkJ5oKo5piv5ZCm5pyJ5q2k5Yqf6IO95omA6ZyA55qE5qyK6ZmQ77yf5oKo5Y+v5LulPGEgaHJlZj0ieyVibG9naG9zdCV9emJfc3lzdGVtL2NtZC5waHA/YWN0PW1pc2MmdHlwZT12cnMiIHRhcmdldD0iX2JsYW5rIj7pu57mk4rpgJnoo6Hmn6XnnIvmgqjnmoTmrIrpmZA8L2E+44CCPGJyLz4NCgkJCTxici8+DQoJCScsDQogICAgICAgICc4JyA9PiAnDQoJCQnmgqjmmK/lkKbovLjlhaXkuobmraPnorrnmoTlkI3nqLHlkozlr4bnorzvvJ88YnIvPg0KCQkJ5aaC5p6c5oKo5piv566h55CG5ZOh5LiU5b+Y6KiY5LqG5a+G56K877yM5Y+v5Lul6bue5pOKPGEgaHJlZj0iaHR0cHM6Ly93aWtpLnpibG9nY24uY29tL2Rva3UucGhwP2lkPXpibG9ncGhwOmVycm9yOiVFOSVBNiU5NiVFOSVBMSVCNSNlcnJvci04IiB0YXJnZXQ9Il9ibGFuayI+44CQ55m75YWl5aSx5pWX44CRPC9hPuOAgjxici8+DQoJCQk8YnIvPg0KCQknLA0KICAgICAgICAnOTEnID0+ICcNCsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoOaCqOeahFBIUOeJiOacrOWPr+iDveWkquiIiu+8jOiri+aCqOiBr+e5q+aCqOeahOS4u+apn+WVhu+8jOaKilBIUOeJiOacrOWNh+e0mueCuuS7luWAkeaJgOiDveaPkOS+m+eahOacgOaWsOeJiOacrOOAgiA8YnIvPg0KwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg54K65LqG5a6J5YWo6IiH5pWI546H77yM5oiR5YCR5Lmf5by354OI5bu66K2w5oKo5oqK5oKo55qEUEhQ5pu05paw5Yiw5pyA5paw54mI5pys44CCDQrCoMKgwqDCoMKgwqDCoMKgJywNCiAgICAgICAgJzkyJyA9PiAnDQrCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDmgqjnmoTkuLvmqZ/nkrDlooPlj6/og73nvLrlsJHmn5Dkupvlv4XopoHntYTku7bvvIzoq4voga/nuavmgqjnmoTkuLvmqZ/llYbllZ/nlKjpgJnkupvntYTku7bvvIzmiY3lj6/kvb/nlKjmnKzmh4nnlKjjgIIgPGJyLz4NCsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoOaCqOWPr+S7pTxhIGhyZWY9Imh0dHBzOi8vd2lraS56YmxvZ2NuLmNvbS9kb2t1LnBocD9pZD16YmxvZ3BocDplcnJvcjolRTklQTYlOTYlRTklQTElQjUjZXJyb3ItOTIiIHRhcmdldD0iX2JsYW5rIj7pu57mk4rpgJnoo6HvvIzkvobnjbLlvpfnvLrlsJHntYTku7bnmoTlpKfoh7TliJfooajjgIIgPC9hPg0KwqDCoMKgwqDCoMKgwqDCoCcsDQoNCiAgICAgICAgJ290aGVyJyA9PiBhcnJheSgNCiAgICAgICAgICAgIC8vIE90aGVyIGVycm9ycyB0aGVuDQogICAgICAgICAgICAnbXlzcWwnID0+ICcNCgkJCeaCqOWcqCB6Yl91c2Vycy9jX29wdGlvbi5waHAg5YWn6YWN572u44CB5oiW5Ymb5omN5aGr5a+r55qE55qEIE15U1FMIOmAo+aOpeS/oeaBr+aYr+WQpuato+eiuu+8nyA8YnIvPg0KCQkJ5oKo5omA6YCj5o6l55qEIE15U1FMIOizh+aWmeW6q+aYr+WQpuW3sue2k+aIkOWKn+WVn+WLle+8nyA8YnIvPg0KCQkJPGJyLz4NCgkJCScsDQoNCiAgICAgICAgICAgICdzcWxpdGUnID0+ICcNCgkJCeaCqOWcqHpiX3VzZXJzL2Nfb3B0aW9uLnBocOWFp+mFjee9rueahCBTUUxpdGUg6YCj5o6l5L+h5oGv5piv5ZCm5q2j5bi477yfIDxici8+DQoJCQnmgqjmmK/lkKbmnInnm7jpl5wgU1FMaXRlIOizh+aWmeW6q+eahOiugOWvq+asiumZkO+8nyA8YnIvPg0KCQkJ55u46ZecIFNRTGl0ZSDos4fmlpnluqvmmK/lkKbooqvmkI3lo57vvJ8gPGJyLz4NCgkJCTxici8+DQoJCQknLA0KDQogICAgICAgICAgICAnYWNjZXNzJyA9PiAnDQoJCQnmgqjmmK/lkKblsIdaLUJsb2dQSFDos4fmlpnlpL7lhafmiYDmnInmqpTmoYjnmoToqLHlj6/mrIroqK3lrprngrowNzc35oiWMDc1Ne+8n+WmguaenOaCqOS4jeefpemBk++8jOiri+iBr+ezu+aCqOeahOepuumWk+WVhuOAgjxici8+DQoJCQk8YnIvPg0KCQkJJywNCg0KICAgICAgICAgICAgJ2Rpc2FibGVkIGZvciBzZWN1cml0eSByZWFzb25zJyA9PiAnDQoJCQnmgqjnmoTkuLvmqZ/plovllZ/kuoZQSFDlronlhajmqKHlvI/vvIzlsI7oh7Tmn5Dkupvlh73mlbjnhKHms5Xkvb/nlKjjgILlu7rorbDvvJo8YnIvPg0KCQkJMS7oga/ns7vmgqjnmoTkuLvmqZ/llYbpl5zplonigJzlronlhajmqKHlvI/igJ08YnIvPg0KCQkJMi7pl5zplonmn5Dkupvkvb/nlKjnm7jpl5zlh73mlbjnmoTmjL/ku7bvvIzmiJboga/ns7vpgJnkupvmjL/ku7bnmoTkvZzogIXjgII8YnIvPg0KCQkJPGJyLz4NCgkJCScsDQoNCiAgICAgICAgKSwNCg0KICAgICAgICAnZW5kJyA9PiAnDQoJCQnlpoLmnpzmgqjmmK/oqKrlrqLvvIzpgJnoqqrmmI7ntrLnq5nnqIvlvI/lj6/og73lh7rnj77kuobkuIDkupvpjK/oqqTjgILoq4vmgqjnqI3lvozlho3oqabvvIzmiJboga/nuavnq5nplbfjgIIgPGJyLz4NCiAgICAgICAgICAgIOWmguaenOaCqOaYr+ermemVt++8jOaCqOWPr+S7pem7nuaTijxhIGhyZWY9InslbW9yZWhlbHAlfSIgdGFyZ2V0PSJfYmxhbmsiPuOAkOabtOWkmuW5q+WKqeOAkTwvYT7kvobmn6XnnItaLUJsb2flrpjmlrnpl5zmlrzpgJnlgIvpjK/oqqTnmoToqqrmmI7vvIzkuZ/lj6/ku6XliLA8YSBocmVmPSJodHRwczovL2Jicy56YmxvZ2NuLmNvbS8iIHRhcmdldD0iX2JsYW5rIj5aLUJsb2flrpjmlrnoq5blo4c8L2E+77yM6ZmE5LiK6Yyv6Kqk6Kmz57Sw5oiq5ZyW6IiH5o+P6L+w5bCL5rGC5bmr5Yqp44CCDQoJCScsDQogICAgKSwNCg0KKTsNCg==</file>
	<file name='zb_system\defend\option.php' crc32='ABF8E5F'  dt:dt='bin.base64'></file>
	<file name='zb_system\admin\module_edit.php' crc32='91D05B3D'  dt:dt='bin.base64'>PD9waHANCi8qKg0KICogWi1CbG9nIHdpdGggUEhQLg0KICoNCiAqIEBhdXRob3INCiAqIEBjb3B5cmlnaHQgKEMpIFJhaW5ib3dTb2Z0IFN0dWRpbw0KICoNCiAqIEB2ZXJzaW9uIDIuMCAyMDEzLTA3LTA1DQogKi8NCnJlcXVpcmUgJy4uL2Z1bmN0aW9uL2Nfc3lzdGVtX2Jhc2UucGhwJzsNCnJlcXVpcmUgJy4uL2Z1bmN0aW9uL2Nfc3lzdGVtX2FkbWluLnBocCc7DQoNCiR6YnAtPkNoZWNrR3ppcCgpOw0KJHpicC0+TG9hZCgpOw0KDQokYWN0aW9uID0gJ01vZHVsZUVkdCc7DQppZiAoISR6YnAtPkNoZWNrUmlnaHRzKCRhY3Rpb24pKSB7DQogICAgJHpicC0+U2hvd0Vycm9yKDYsIF9fRklMRV9fLCBfX0xJTkVfXyk7DQogICAgZGllKCk7DQp9DQoNCiRibG9ndGl0bGUgPSAkbGFuZ1snbXNnJ11bJ21vZHVsZV9lZGl0J107DQoNCnJlcXVpcmUgWkJQX1BBVEggLiAnemJfc3lzdGVtL2FkbWluL2FkbWluX2hlYWRlci5waHAnOw0KcmVxdWlyZSBaQlBfUEFUSCAuICd6Yl9zeXN0ZW0vYWRtaW4vYWRtaW5fdG9wLnBocCc7DQoNCj8+DQo8P3BocA0KDQokbW9kaWQgPSBudWxsOw0KJG1vZCA9IG51bGw7DQoNCmlmIChpc3NldCgkX0dFVFsnc291cmNlJ10pICYmIGlzc2V0KCRfR0VUWydmaWxlbmFtZSddKSkgew0KICAgIGlmIChHZXRWYXJzKCdzb3VyY2UnLCAnR0VUJykgPT0gJ3RoZW1laW5jbHVkZV8nIC4gJHpicC0+dGhlbWUpIHsNCiAgICAgICAgJG1vZCA9ICR6YnAtPkdldE1vZHVsZUJ5RmlsZU5hbWUoR2V0VmFycygnZmlsZW5hbWUnLCAnR0VUJykpOw0KICAgICAgICBpZiAoJG1vZC0+U291cmNlVHlwZSAhPSAndGhlbWVpbmNsdWRlJykgew0KICAgICAgICAgICAgJHpicC0+U2hvd0Vycm9yKDYxKTsNCiAgICAgICAgfQ0KICAgIH0gZWxzZSB7DQogICAgICAgICR6YnAtPlNob3dFcnJvcig2MSk7DQogICAgfQ0KfSBlbHNlaWYgKGlzc2V0KCRfR0VUWydmaWxlbmFtZSddKSkgew0KICAgICRhcnJheSA9ICR6YnAtPkdldE1vZHVsZUxpc3QoDQogICAgICAgIGFycmF5KCcqJyksDQogICAgICAgIGFycmF5KGFycmF5KCc9JywgJ21vZF9GaWxlTmFtZScsIEdldFZhcnMoJ2ZpbGVuYW1lJywgJ0dFVCcpKSksDQogICAgICAgIG51bGwsDQogICAgICAgIGFycmF5KDEpLA0KICAgICAgICBudWxsDQogICAgKTsNCg0KICAgIGlmIChjb3VudCgkYXJyYXkpID09IDApIHsNCiAgICAgICAgJHpicC0+U2hvd0Vycm9yKDY5KTsNCiAgICB9DQoNCiAgICAkbW9kID0gJGFycmF5WzBdOw0KfSBlbHNlIHsNCiAgICBpZiAoaXNzZXQoJF9HRVRbJ2lkJ10pKSB7DQogICAgICAgICRtb2RpZCA9IChpbnQpIEdldFZhcnMoJ2lkJywgJ0dFVCcpOw0KICAgIH0gZWxzZSB7DQogICAgICAgICRtb2RpZCA9IDA7DQogICAgfQ0KDQogICAgJG1vZCA9ICR6YnAtPkdldE1vZHVsZUJ5SUQoJG1vZGlkKTsNCn0NCmlmICgkbW9kLT5UeXBlID09ICd1bCcpIHsNCiAgICAkbW9kLT5Db250ZW50ID0gc3RyX3JlcGxhY2UoIjwvbGk+IiwgIjwvbGk+XHJcbiIsICRtb2QtPkNvbnRlbnQpOw0KfQ0KDQokaXNsb2NrID0gJyc7DQppZiAoJG1vZC0+U291cmNlID09ICdzeXN0ZW0nIHx8ICRtb2QtPlNvdXJjZVR5cGUgPT0gJ3RoZW1laW5jbHVkZScpIHsNCiAgICAkaXNsb2NrID0gJ3JlYWRvbmx5PSJyZWFkb25seSInOw0KfQ0KaWYgKCRtb2QtPlNvdXJjZVR5cGUgPT0gJ3RoZW1laW5jbHVkZScgJiYgJG1vZC0+RmlsZU5hbWUgPT0gJycpIHsNCiAgICAkaXNsb2NrID0gJyc7DQogICAgJG1vZC0+TmFtZSA9ICduZXdtb2R1bGUnOw0KICAgICRtb2QtPkh0bWxJRCA9ICduZXdtb2R1bGUnOw0KfQ0KJGlzaGlkZSA9ICcnOw0KaWYgKCRtb2QtPlNvdXJjZVR5cGUgPT0gJ3RoZW1laW5jbHVkZScpIHsNCiAgICAkaXNoaWRlID0gJ3N0eWxlPSJkaXNwbGF5Om5vbmU7Iic7DQp9DQo/Pg0KPGRpdiBpZD0iZGl2TWFpbiI+DQo8ZGl2IGNsYXNzPSJkaXZIZWFkZXIyIj4NCjw/cGhwIGVjaG8gJGxhbmdbJ21zZyddWydtb2R1bGVfZWRpdCddPz48L2Rpdj4NCjxkaXYgY2xhc3M9IlN1Yk1lbnUiPg0KPD9waHANCmZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX01vZHVsZV9FZGl0X1N1Yk1lbnUnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAkZnBuYW1lKCk7DQp9DQo/Pg0KPC9kaXY+DQo8ZGl2IGlkPSJkaXZNYWluMiIgY2xhc3M9ImVkaXQgdGFnX2VkaXQiPg0KPGZvcm0gaWQ9ImVkaXQiIG5hbWU9ImVkaXQiIG1ldGhvZD0icG9zdCIgYWN0aW9uPSIjIj4NCiAgICA8aW5wdXQgaWQ9ImVkdElEIiBuYW1lPSJJRCIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0iPD9waHAgZWNobyAkbW9kLT5JRDsgPz4iIC8+DQogICAgPGlucHV0IGlkPSJlZHRTb3VyY2UiIG5hbWU9IlNvdXJjZSIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0iPD9waHAgZWNobyAkbW9kLT5Tb3VyY2U7ID8+IiAvPg0KICAgIDxwIDw/cGhwIGVjaG8gJGlzaGlkZT8+DQogICAgICAgID4NCiAgICAgICAgPHNwYW4gY2xhc3M9InRpdGxlIj4NCiAgICAgICAgICAgIDw/cGhwIGVjaG8gJGxhbmdbJ21zZyddWyduYW1lJ10/Pjo8L3NwYW4+DQogICAgICAgIDxzcGFuIGNsYXNzPSJzdGFyIj4oKik8L3NwYW4+DQogICAgICAgIDxiciAvPg0KICAgICAgICA8aW5wdXQgaWQ9ImVkdE5hbWUiIGNsYXNzPSJlZGl0IiBzaXplPSI0MCIgbmFtZT0iTmFtZSIgbWF4bGVuZ3RoPSI8P3BocCBlY2hvICRvcHRpb25bJ1pDX01PRFVMRV9OQU1FX01BWCddOyA/PiIgdHlwZT0idGV4dCIgdmFsdWU9Ijw/cGhwIGVjaG8gRm9ybWF0U3RyaW5nKCRtb2QtPk5hbWUsICdbaHRtbC1mb3JtYXRdJyk7ID8+IiAvPg0KICAgICAgICAgKA0KICAgICAgICA8P3BocCBlY2hvICRsYW5nWydtc2cnXVsnaGlkZV90aXRsZSddPz4NCiAgICAgICAgOg0KICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9IklzSGlkZVRpdGxlIiBuYW1lPSJJc0hpZGVUaXRsZSIgY2xhc3M9ImNoZWNrYm94IiB2YWx1ZT0iPD9waHAgZWNobyAkbW9kLT5Jc0hpZGVUaXRsZTsgPz4iLz4pPC9wPg0KICAgIDxwPg0KICAgICAgICA8c3BhbiBjbGFzcz0idGl0bGUiPg0KICAgICAgICAgICAgPD9waHAgZWNobyAkbGFuZ1snbXNnJ11bJ2ZpbGVuYW1lJ10/Pjo8L3NwYW4+DQogICAgICAgIDxzcGFuIGNsYXNzPSJzdGFyIj4oKik8L3NwYW4+DQogICAgICAgIDxiciAvPg0KICAgICAgICA8aW5wdXQgaWQ9ImVkdEZpbGVOYW1lIiA8P3BocCBlY2hvICRpc2xvY2s/PiBjbGFzcz0iZWRpdCIgc2l6ZT0iNDAiIG5hbWU9IkZpbGVOYW1lIiB0eXBlPSJ0ZXh0IiB2YWx1ZT0iPD9waHAgZWNobyBGb3JtYXRTdHJpbmcoJG1vZC0+RmlsZU5hbWUsICdbaHRtbC1mb3JtYXRdJyk7ID8+IiAvPjwvcD4NCiAgICA8cCA8P3BocCBlY2hvICRpc2hpZGU/Pj4NCiAgICAgICAgPHNwYW4gY2xhc3M9InRpdGxlIj4NCiAgICAgICAgICAgIDw/cGhwIGVjaG8gJGxhbmdbJ21zZyddWydodG1saWQnXT8+Ojwvc3Bhbj4NCiAgICAgICAgPHNwYW4gY2xhc3M9InN0YXIiPigqKTwvc3Bhbj4NCiAgICAgICAgPGJyIC8+DQogICAgICAgIDxpbnB1dCBpZD0iZWR0SHRtbElEIiBjbGFzcz0iZWRpdCIgc2l6ZT0iNDAiIG5hbWU9Ikh0bWxJRCIgdHlwZT0idGV4dCIgdmFsdWU9Ijw/cGhwIGVjaG8gRm9ybWF0U3RyaW5nKCRtb2QtPkh0bWxJRCwgJ1todG1sLWZvcm1hdF0nKTsgPz4iIC8+PC9wPg0KICAgIDxwIDw/cGhwIGVjaG8gJGlzaGlkZT8+Pg0KICAgICAgICA8c3BhbiBjbGFzcz0ndGl0bGUnPg0KICAgICAgICAgICAgPD9waHAgZWNobyAkbGFuZ1snbXNnJ11bJ3R5cGUnXT8+Ojwvc3Bhbj4NCiAgICAgICAgPGJyLz4NCiAgICAgICAgPGxhYmVsPg0KICAgICAgICAgICAgPGlucHV0IG5hbWU9IlR5cGUiIHR5cGU9InJhZGlvIiB2YWx1ZT0iZGl2IiA8P3BocCBlY2hvICRtb2QtPlR5cGUgPT0gJ2RpdicgPyAnY2hlY2tlZD0iY2hlY2tlZCInIDogJyc7ID8+IG9uY2xpY2s9IiQoJyNwTWF4TGknKS5jc3MoJ2Rpc3BsYXknLCdub25lJyk7IiAvPiZuYnNwO0RJVg0KICAgICAgICA8L2xhYmVsPg0KICAgICAgICAmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsNCiAgICAgICAgPGxhYmVsPg0KICAgICAgICAgICAgPGlucHV0IHR5cGU9InJhZGlvIiBuYW1lPSJUeXBlIiB2YWx1ZT0idWwiIDw/cGhwIGVjaG8gJG1vZC0+VHlwZSA9PSAnZGl2JyA/ICcnIDogJ2NoZWNrZWQ9ImNoZWNrZWQiJzsgPz4gb25jbGljaz0iJCgnI3BNYXhMaScpLmNzcygnZGlzcGxheScsJ2Jsb2NrJyk7IiAvPiZuYnNwO1VMDQogICAgICAgIDwvbGFiZWw+DQogICAgPC9wPg0KICAgIDxwIGlkPSJwTWF4TGkiIHN0eWxlPSI8P3BocCBlY2hvICRtb2QtPlR5cGUgPT0gJ2RpdicgPyAnZGlzcGxheTpub25lOycgOiAnJzsgPz4iID4NCiAgICAgICAgPHNwYW4gY2xhc3M9J3RpdGxlJz4NCiAgICAgICAgICAgIDw/cGhwIGVjaG8gJGxhbmdbJ21zZyddWydtYXhfbGlfaW5fdWwnXT8+Ojwvc3Bhbj4NCiAgICAgICAgPGJyLz4NCiAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIG5hbWU9Ik1heExpIiB2YWx1ZT0iPD9waHAgZWNobyAkbW9kLT5NYXhMaTsgPz4iIHNpemU9IjQwIiAgLz48L3A+DQo8P3BocA0KaWYgKCRtb2QtPkZpbGVOYW1lID09ICdjYXRhbG9nJykgew0KICAgID8+DQogICAgPHA+DQogICAgICAgIDxzcGFuIGNsYXNzPSd0aXRsZSc+DQogICAgICAgICAgICA8P3BocCBlY2hvICRsYW5nWydtc2cnXVsnc3R5bGUnXT8+Ojwvc3Bhbj4NCiAgICAgICAgJm5ic3A7Jm5ic3A7DQogICAgICAgIDxsYWJlbD4NCiAgICAgICAgICAgIDxpbnB1dCBuYW1lPSJjYXRhbG9nX3N0eWxlIiB0eXBlPSJyYWRpbyIgdmFsdWU9IjAiIDw/cGhwIGVjaG8gJHpicC0+b3B0aW9uWydaQ19NT0RVTEVfQ0FUQUxPR19TVFlMRSddID09ICcwJyA/ICdjaGVja2VkPSJjaGVja2VkIicgOiAnJzsgPz4gLz4mbmJzcDsNCiAgICAgICAgICAgIDw/cGhwIGVjaG8gJGxhbmdbJ21zZyddWydjYXRhbG9nX3N0eWxlX25vcm1hbCddPz48L2xhYmVsPg0KICAgICAgICAmbmJzcDsmbmJzcDsNCiAgICAgICAgPGxhYmVsPg0KICAgICAgICAgICAgPGlucHV0IG5hbWU9ImNhdGFsb2dfc3R5bGUiIHR5cGU9InJhZGlvIiB2YWx1ZT0iMSIgPD9waHAgZWNobyAkemJwLT5vcHRpb25bJ1pDX01PRFVMRV9DQVRBTE9HX1NUWUxFJ10gPT0gJzEnID8gJ2NoZWNrZWQ9ImNoZWNrZWQiJyA6ICcnOyA/PiAvPiZuYnNwOw0KICAgICAgICAgICAgPD9waHAgZWNobyAkbGFuZ1snbXNnJ11bJ2NhdGFsb2dfc3R5bGVfdHJlZSddPz48L2xhYmVsPg0KICAgICAgICAmbmJzcDsmbmJzcDsNCiAgICAgICAgPGxhYmVsPg0KICAgICAgICAgICAgPGlucHV0IG5hbWU9ImNhdGFsb2dfc3R5bGUiIHR5cGU9InJhZGlvIiB2YWx1ZT0iMiIgPD9waHAgZWNobyAkemJwLT5vcHRpb25bJ1pDX01PRFVMRV9DQVRBTE9HX1NUWUxFJ10gPT0gJzInID8gJ2NoZWNrZWQ9ImNoZWNrZWQiJyA6ICcnOyA/PiAvPiZuYnNwOw0KICAgICAgICAgICAgPD9waHAgZWNobyAkbGFuZ1snbXNnJ11bJ2NhdGFsb2dfc3R5bGVfdWwnXT8+PC9sYWJlbD4NCiAgICAgICAgJm5ic3A7Jm5ic3A7DQogICAgPC9wPg0KICAgIDw/cGhwDQp9DQppZiAoJG1vZC0+RmlsZU5hbWUgPT0gJ2FyY2hpdmVzJykgew0KICAgIGlmICgkemJwLT5vcHRpb25bJ1pDX01PRFVMRV9BUkNISVZFU19TVFlMRSddID09ICcxJykgew0KICAgICAgICA/PjxsYWJlbD48aW5wdXQgbmFtZT0iYXJjaGl2ZXNfc3R5bGUiIHR5cGU9ImNoZWNrYm94IiB2YWx1ZT0iPD9waHAgZWNobyAkemJwLT5vcHRpb25bJ1pDX01PRFVMRV9BUkNISVZFU19TVFlMRSddPz4iIGNoZWNrZWQ9ImNoZWNrZWQiIC8+PD9waHAgZWNobyAkbGFuZ1snbXNnJ11bJ2FyY2hpdmVzX3N0eWxlX3NlbGVjdCddPz48L2xhYmVsPjwvbGFiZWw+DQogICAgPD9waHANCiAgICB9IGVsc2Ugew0KICAgICAgICA/PjxsYWJlbD48aW5wdXQgbmFtZT0iYXJjaGl2ZXNfc3R5bGUiIHR5cGU9ImNoZWNrYm94IiB2YWx1ZT0iPD9waHAgZWNobyAkemJwLT5vcHRpb25bJ1pDX01PRFVMRV9BUkNISVZFU19TVFlMRSddPz4iIC8+PD9waHAgZWNobyAkbGFuZ1snbXNnJ11bJ2FyY2hpdmVzX3N0eWxlX3NlbGVjdCddPz48L2xhYmVsPjwvbGFiZWw+DQogICAgPD9waHANCiAgICB9DQp9DQo/Pg0KICAgIDxwID4NCiAgICAgICAgPHNwYW4gY2xhc3M9InRpdGxlIj4NCiAgICAgICAgICAgIDw/cGhwIGVjaG8gJGxhbmdbJ21zZyddWydjb250ZW50J10/Pjo8L3NwYW4+DQogICAgICAgIDxiciAvPg0KICAgICAgICA8dGV4dGFyZWEgbmFtZT0iQ29udGVudCIgaWQ9IkNvbnRlbnQiICBjb2xzPSI4MCIgcm93cz0iMTIiICA+PD9waHAgZWNobyBodG1sc3BlY2lhbGNoYXJzKCRtb2QtPkNvbnRlbnQpOyA/PjwvdGV4dGFyZWE+DQogICAgPC9wPg0KICAgIDxwIDw/cGhwIGVjaG8gJGlzaGlkZT8+Pg0KICAgICAgICA8c3BhbiBjbGFzcz0ndGl0bGUnPg0KICAgICAgICAgICAgPD9waHAgZWNobyAkbGFuZ1snbXNnJ11bJ25vX3JlZnJlc2hfY29udGVudCddPz46PC9zcGFuPg0KICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9Ik5vUmVmcmVzaCIgbmFtZT0iTm9SZWZyZXNoIiBjbGFzcz0iY2hlY2tib3giIHZhbHVlPSI8P3BocCBlY2hvICRtb2QtPk5vUmVmcmVzaDsgPz4iLz48L3A+DQogICAgPCEtLSAx5Y+36L6T5Ye65o6l5Y+jIC0tPg0KICAgIDxkaXYgaWQ9J3Jlc3BvbnNlJyBjbGFzcz0nZWRpdG1vZDInPg0KICAgICAgICA8P3BocCBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9Nb2R1bGVfRWRpdF9SZXNwb25zZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICRmcG5hbWUoKTsNCn0/Pg0KICAgIDwvZGl2Pg0KICAgIDxwPg0KDQogICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidXR0b24iIHZhbHVlPSI8P3BocCBlY2hvICRsYW5nWydtc2cnXVsnc3VibWl0J10/PiIgaWQ9ImJ0blBvc3QiIG9uY2xpY2s9InJldHVybiBjaGVja0luZm8oKTsiIC8+PC9wPg0KPC9mb3JtPg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KZnVuY3Rpb24gY2hlY2tJbmZvKCl7DQogIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJlZGl0IikuYWN0aW9uPSI8P3BocCBlY2hvIEJ1aWxkU2FmZUNtZFVSTCgnYWN0PU1vZHVsZVBzdCcpOyA/PiI7DQoNCiAgaWYoISQoIiNlZHROYW1lIikudmFsKCkpew0KICAgIGFsZXJ0KCI8P3BocCBlY2hvICRsYW5nWydlcnJvciddWyc3MiddPz4iKTsNCiAgICByZXR1cm4gZmFsc2UNCiAgfQ0KICBpZighJCgiI2VkdEZpbGVOYW1lIikudmFsKCkpew0KICAgIGFsZXJ0KCI8P3BocCBlY2hvICRsYW5nWydlcnJvciddWyc3NSddPz4iKTsNCiAgICByZXR1cm4gZmFsc2UNCiAgfQ0KICBpZighJCgiI2VkdEh0bWxJRCIpLnZhbCgpKXsNCiAgICBhbGVydCgiPD9waHAgZWNobyAkbGFuZ1snZXJyb3InXVsnNzYnXT8+Iik7DQogICAgcmV0dXJuIGZhbHNlDQogIH0NCn0NCiAgICA8L3NjcmlwdD4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5BY3RpdmVMZWZ0TWVudSgiYU1vZHVsZU1uZyIpOzwvc2NyaXB0Pg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPkFkZEhlYWRlckljb24oIjw/cGhwIGVjaG8gJHpicC0+aG9zdCAuICd6Yl9zeXN0ZW0vaW1hZ2UvY29tbW9uL2xpbmtfMzIucG5nJzsgPz4iKTs8L3NjcmlwdD4NCjwvZGl2Pg0KPC9kaXY+DQoNCjw/cGhwDQpyZXF1aXJlIFpCUF9QQVRIIC4gJ3piX3N5c3RlbS9hZG1pbi9hZG1pbl9mb290ZXIucGhwJzsNCg0KUnVuVGltZSgpOw0K</file>
	<file name='zb_system\function\lib\module.php' crc32='1272C056'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KDQovKioNCiAqIOaooeWdl+exuy4NCiAqDQogKiBAcHJvcGVydHkgc3RyaW5nIEZpbGVOYW1lDQogKiBAcHJvcGVydHkgaW50fHN0cmluZyBJRA0KICogQHByb3BlcnR5IHN0cmluZyBTb3VyY2Ug5qih5Z2X5p2l5rqQDQogKiBAcHJvcGVydHkgc3RyaW5nIENvbnRlbnQNCiAqIEBwcm9wZXJ0eSBzdHJpbmcgVHlwZSDmqKHlnZfmmL7npLrnsbvlnovvvIhkaXYgLyB1bO+8iQ0KICogQHByb3BlcnR5IGJvb2wgTm9SZWZyZXNoIOaLkue7neezu+e7n+WIt+aWsOivpeaooeWdlw0KICovDQpjbGFzcyBNb2R1bGUgZXh0ZW5kcyBCYXNlDQp7DQogICAgLyoqDQogICAgICog5p6E6YCg5Ye95pWwLg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgpDQogICAgew0KICAgICAgICBnbG9iYWwgJHpicDsNCiAgICAgICAgcGFyZW50OjpfX2NvbnN0cnVjdCgkemJwLT50YWJsZVsnTW9kdWxlJ10sICR6YnAtPmRhdGFpbmZvWydNb2R1bGUnXSwgX19DTEFTU19fKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDorr7nva7lj4LmlbDlgLwNCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJG5hbWUNCiAgICAgKiBAcGFyYW0gbWl4ZWQgICR2YWx1ZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBfX3NldCgkbmFtZSwgJHZhbHVlKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQogICAgICAgIGlmICgkbmFtZSA9PSAnU291cmNlVHlwZScpIHsNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoJG5hbWUgPT0gJ05vUmVmcmVzaCcpIHsNCiAgICAgICAgICAgIGlmICgoYm9vbCkgJHZhbHVlKSB7DQogICAgICAgICAgICAgICAgJHRoaXMtPk1ldGFzLT5ub3JlZnJlc2ggPSAoYm9vbCkgJHZhbHVlOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAkdGhpcy0+TWV0YXMtPkRlbCgnbm9yZWZyZXNoJyk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9Nb2R1bGVfU2V0J10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAkZnBuYW1lKCR0aGlzLCAkbmFtZSwgJHZhbHVlKTsNCiAgICAgICAgfQ0KICAgICAgICBwYXJlbnQ6Ol9fc2V0KCRuYW1lLCAkdmFsdWUpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOiOt+WPluWPguaVsOWAvA0KICAgICAqDQogICAgICogQHBhcmFtICRuYW1lDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2x8bWl4ZWR8c3RyaW5nDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIF9fZ2V0KCRuYW1lKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQogICAgICAgIGlmICgkbmFtZSA9PSAnU291cmNlVHlwZScpIHsNCiAgICAgICAgICAgIGlmICgkdGhpcy0+U291cmNlID09ICdzeXN0ZW0nKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICdzeXN0ZW0nOw0KICAgICAgICAgICAgfSBlbHNlaWYgKCR0aGlzLT5Tb3VyY2UgPT0gJ3VzZXInKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICd1c2VyJzsNCiAgICAgICAgICAgIH0gZWxzZWlmIChzdHJpcG9zKCR0aGlzLT5Tb3VyY2UsICd0aGVtZWluY2x1ZGVfJykgPT09IDApIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gJ3RoZW1laW5jbHVkZSc7DQogICAgICAgICAgICB9IGVsc2VpZiAoJHRoaXMtPlNvdXJjZSA9PSAndGhlbWUnKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICd0aGVtZSc7DQogICAgICAgICAgICB9IGVsc2VpZiAoc3RyaXBvcygkdGhpcy0+U291cmNlLCAndGhlbWVfJykgPT09IDApIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gJ3RoZW1lJzsNCiAgICAgICAgICAgIH0gZWxzZWlmIChzdHJpcG9zKCR0aGlzLT5Tb3VyY2UsICdwbHVnaW5fJykgPT09IDApIHsNCiAgICAgICAgICAgICAgICAvL+WmguaenOaYr3BsdWdpbl/kuLvpopjlkI3vvIzov5jmmK/liKTmlq3kuLp0aGVtZe+8jOS/ruato+WOhuWPsumBl+eVmemXrumimA0KICAgICAgICAgICAgICAgICR0cyA9ICR6YnAtPkxvYWRUaGVtZXMoKTsNCiAgICAgICAgICAgICAgICBmb3JlYWNoICgkdHMgYXMgJHQpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKCAkdGhpcy0+U291cmNlID09ICdwbHVnaW5fJyAuICR0LT5pZCApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAndGhlbWUnOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHJldHVybiAncGx1Z2luJzsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgIHJldHVybiAncGx1Z2luJzsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICBpZiAoJG5hbWUgPT0gJ05vUmVmcmVzaCcpIHsNCiAgICAgICAgICAgIHJldHVybiAoYm9vbCkgJHRoaXMtPk1ldGFzLT5ub3JlZnJlc2g7DQogICAgICAgIH0NCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fTW9kdWxlX0dldCddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkdGhpcywgJG5hbWUpOw0KICAgICAgICAgICAgaWYgKCRmcHNpZ25hbCA9PSBQTFVHSU5fRVhJVFNJR05BTF9SRVRVUk4pIHsNCiAgICAgICAgICAgICAgICAkZnBzaWduYWwgPSBQTFVHSU5fRVhJVFNJR05BTF9OT05FOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuICRmcHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiBwYXJlbnQ6Ol9fZ2V0KCRuYW1lKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gU2F2ZSgpDQogICAgew0KICAgICAgICBnbG9iYWwgJHpicDsNCg0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9Nb2R1bGVfU2F2ZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkdGhpcyk7DQogICAgICAgICAgICBpZiAoJGZwc2lnbmFsID09IFBMVUdJTl9FWElUU0lHTkFMX1JFVFVSTikgew0KICAgICAgICAgICAgICAgICRmcHNpZ25hbCA9IFBMVUdJTl9FWElUU0lHTkFMX05PTkU7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gJGZwcmV0dXJuOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGlmICgkdGhpcy0+U291cmNlVHlwZSA9PSAndGhlbWVpbmNsdWRlJykgew0KICAgICAgICAgICAgaWYgKCEkdGhpcy0+RmlsZU5hbWUpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgJGMgPSBSZW1vdmVQSFBDb2RlKCR0aGlzLT5Db250ZW50KTsNCiAgICAgICAgICAgICRkID0gJHpicC0+dXNlcnNkaXIgLiAndGhlbWUvJyAuICR6YnAtPnRoZW1lIC4gJy9pbmNsdWRlLyc7DQogICAgICAgICAgICAkZiA9ICRkIC4gJHRoaXMtPkZpbGVOYW1lIC4gJy5waHAnOw0KICAgICAgICAgICAgaWYgKCFmaWxlX2V4aXN0cygkZCkpIHsNCiAgICAgICAgICAgICAgICBAbWtkaXIoJGQsIDA3NTUpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgQGZpbGVfcHV0X2NvbnRlbnRzKCRmLCAkYyk7DQoNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9DQoNCiAgICAgICAgLy/pmLJNb2R1bGXph43lpI3kv53lrZjnmoTmnLrliLYNCiAgICAgICAgJG0gPSAkemJwLT5HZXRMaXN0VHlwZSgNCiAgICAgICAgICAgICdNb2R1bGUnLA0KICAgICAgICAgICAgJHpicC0+ZGItPnNxbC0+Z2V0KCktPnNlbGVjdCgkemJwLT50YWJsZVsnTW9kdWxlJ10pDQogICAgICAgICAgICAgICAgICAgIC0+d2hlcmUoYXJyYXkoJz0nLCAkemJwLT5kYXRhaW5mb1snTW9kdWxlJ11bJ0ZpbGVOYW1lJ11bMF0sICR0aGlzLT5GaWxlTmFtZSkpDQogICAgICAgICAgICAgICAgICAgIC0+c3FsDQogICAgICAgICk7DQogICAgICAgIGlmIChjb3VudCgkbSkgPj0gMSAmJiAkdGhpcy0+SUQgPT0gMCkgey8v5aaC5p6c5bey5pyJ5ZCM5ZCN77yM5LiU5pawSUTkuLow5bCx5LiN5a2YDQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gcGFyZW50OjpTYXZlKCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIERlbCgpDQogICAgew0KICAgICAgICBnbG9iYWwgJHpicDsNCiAgICAgICAgZm9yZWFjaCAoJHpicC0+bW9kdWxlcyBhcyAka2V5ID0+ICRtKSB7DQogICAgICAgICAgICBpZiAoJHRoaXMtPklEID4gMCAmJiAkbS0+SUQgPT0gJHRoaXMtPklEKSB7DQogICAgICAgICAgICAgICAgdW5zZXQoJHpicC0+bW9kdWxlc1ska2V5XSk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZiAoJHRoaXMtPlNvdXJjZVR5cGUgPT0gJ3RoZW1laW5jbHVkZScpIHsNCiAgICAgICAgICAgICAgICBpZiAoJHRoaXMtPkZpbGVOYW1lICE9ICcnICYmICRtLT5GaWxlTmFtZSA9PSAkdGhpcy0+RmlsZU5hbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgdW5zZXQoJHpicC0+bW9kdWxlc1ska2V5XSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGZvcmVhY2ggKCR6YnAtPm1vZHVsZXNieWZpbGVuYW1lIGFzICRrZXkgPT4gJG0pIHsNCiAgICAgICAgICAgIGlmICgkdGhpcy0+RmlsZU5hbWUgIT0gJycgJiYgJG0tPkZpbGVOYW1lID09ICR0aGlzLT5GaWxlTmFtZSkgew0KICAgICAgICAgICAgICAgIHVuc2V0KCR6YnAtPm1vZHVsZXNieWZpbGVuYW1lWyR0aGlzLT5GaWxlTmFtZV0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fTW9kdWxlX0RlbCddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwc2lnbmFsID0gUExVR0lOX0VYSVRTSUdOQUxfTk9ORTsNCiAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHRoaXMpOw0KICAgICAgICAgICAgaWYgKCRmcHNpZ25hbCA9PSBQTFVHSU5fRVhJVFNJR05BTF9SRVRVUk4pIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gJGZwcmV0dXJuOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGlmICgkdGhpcy0+U291cmNlVHlwZSA9PSAndGhlbWVpbmNsdWRlJykgew0KICAgICAgICAgICAgaWYgKCEkdGhpcy0+RmlsZU5hbWUpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgJGYgPSAkemJwLT51c2Vyc2RpciAuICd0aGVtZS8nIC4gJHpicC0+dGhlbWUgLiAnL2luY2x1ZGUvJyAuICR0aGlzLT5GaWxlTmFtZSAuICcucGhwJzsNCiAgICAgICAgICAgIGlmIChmaWxlX2V4aXN0cygkZikpIHsNCiAgICAgICAgICAgICAgICBAdW5saW5rKCRmKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gcGFyZW50OjpEZWwoKTsNCiAgICB9DQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gQnVpbGQoKQ0KICAgIHsNCiAgICAgICAgaWYgKCR0aGlzLT5Ob1JlZnJlc2ggPT0gdHJ1ZSkgew0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKGlzc2V0KE1vZHVsZUJ1aWxkZXI6OiRMaXN0WyR0aGlzLT5GaWxlTmFtZV0pKSB7DQogICAgICAgICAgICBpZiAoaXNzZXQoTW9kdWxlQnVpbGRlcjo6JExpc3RbJHRoaXMtPkZpbGVOYW1lXVsnZnVuY3Rpb24nXSkpIHsNCiAgICAgICAgICAgICAgICAkZiA9IHN0cl9yZXBsYWNlKCcgJywgJycsIE1vZHVsZUJ1aWxkZXI6OiRMaXN0WyR0aGlzLT5GaWxlTmFtZV1bJ2Z1bmN0aW9uJ10pOw0KICAgICAgICAgICAgICAgICRwID0gTW9kdWxlQnVpbGRlcjo6JExpc3RbJHRoaXMtPkZpbGVOYW1lXVsncGFyYW1ldGVycyddOw0KICAgICAgICAgICAgICAgICRwID0gaXNfYXJyYXkoJHApID8gJHAgOiBhcnJheSgpOw0KDQogICAgICAgICAgICAgICAgaWYgKGZ1bmN0aW9uX2V4aXN0cygkZikpIHsNCiAgICAgICAgICAgICAgICAgICAgJHRoaXMtPkNvbnRlbnQgPSBjYWxsX3VzZXJfZnVuY19hcnJheSgkZiwgJHApOw0KICAgICAgICAgICAgICAgIH0gZWxzZWlmIChzdHJwb3MoJGYsICc6OicpICE9PSBmYWxzZSkgew0KICAgICAgICAgICAgICAgICAgICAkYSA9IGV4cGxvZGUoJzo6JywgJGYpOw0KICAgICAgICAgICAgICAgICAgICBpZiAobWV0aG9kX2V4aXN0cygkYVswXSwgJGFbMV0pKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+Q29udGVudCA9IGNhbGxfdXNlcl9mdW5jX2FycmF5KCRmLCAkcCk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9IGVsc2VpZiAoc3RycG9zKCRmLCAnLT4nKSAhPT0gZmFsc2UpIHsNCiAgICAgICAgICAgICAgICAgICAgJGYgPSBzdHJfcmVwbGFjZShhcnJheSgnJCcsICd7JywgJ30nKSwgJycsICRmKTsNCiAgICAgICAgICAgICAgICAgICAgJGEgPSBleHBsb2RlKCctPicsICRmKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGlzX2NhbGxhYmxlKGFycmF5KCRHTE9CQUxTWyRhWzBdXSwgJGFbMV0pKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPkNvbnRlbnQgPSBjYWxsX3VzZXJfZnVuY19hcnJheShhcnJheSgkR0xPQkFMU1skYVswXV0sICRhWzFdKSwgJHApOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KfQ0K</file>
</files>